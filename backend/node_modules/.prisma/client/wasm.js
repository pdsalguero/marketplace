
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  isAdmin: 'isAdmin',
  status: 'status',
  createdAt: 'createdAt',
  lastLoginAt: 'lastLoginAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.UserProfileScalarFieldEnum = {
  userId: 'userId',
  displayName: 'displayName',
  phone: 'phone',
  avatarUrl: 'avatarUrl',
  about: 'about',
  provinceId: 'provinceId',
  cityId: 'cityId',
  addressText: 'addressText'
};

exports.Prisma.LocationScalarFieldEnum = {
  id: 'id',
  country: 'country',
  name: 'name',
  slug: 'slug',
  parentId: 'parentId',
  createdAt: 'createdAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  parentId: 'parentId',
  level: 'level',
  isActive: 'isActive',
  sortOrder: 'sortOrder'
};

exports.Prisma.ListingScalarFieldEnum = {
  id: 'id',
  sellerId: 'sellerId',
  categoryId: 'categoryId',
  title: 'title',
  description: 'description',
  priceAmount: 'priceAmount',
  currency: 'currency',
  condition: 'condition',
  quantity: 'quantity',
  status: 'status',
  provinceId: 'provinceId',
  cityId: 'cityId',
  viewsCount: 'viewsCount',
  favoritesCount: 'favoritesCount',
  contactsCount: 'contactsCount',
  promotedUntil: 'promotedUntil',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  publishedAt: 'publishedAt',
  expiresAt: 'expiresAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.ListingMediaScalarFieldEnum = {
  id: 'id',
  listingId: 'listingId',
  url: 'url',
  position: 'position',
  width: 'width',
  height: 'height',
  mimeType: 'mimeType',
  createdAt: 'createdAt'
};

exports.Prisma.ListingAttributeDefScalarFieldEnum = {
  id: 'id',
  categoryId: 'categoryId',
  name: 'name',
  key: 'key',
  dataType: 'dataType',
  enumOptions: 'enumOptions',
  isRequired: 'isRequired',
  sortOrder: 'sortOrder'
};

exports.Prisma.ListingAttributeScalarFieldEnum = {
  id: 'id',
  listingId: 'listingId',
  attrDefId: 'attrDefId',
  valueText: 'valueText',
  valueNumber: 'valueNumber',
  valueBool: 'valueBool'
};

exports.Prisma.FavoriteScalarFieldEnum = {
  userId: 'userId',
  listingId: 'listingId',
  createdAt: 'createdAt'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  listingId: 'listingId',
  buyerId: 'buyerId',
  sellerId: 'sellerId',
  lastMessageAt: 'lastMessageAt',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  senderId: 'senderId',
  body: 'body',
  mediaUrl: 'mediaUrl',
  createdAt: 'createdAt',
  readAt: 'readAt'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  reporterId: 'reporterId',
  targetType: 'targetType',
  targetId: 'targetId',
  reason: 'reason',
  detailsText: 'detailsText',
  status: 'status',
  createdAt: 'createdAt',
  closedAt: 'closedAt',
  adminId: 'adminId'
};

exports.Prisma.PromotionPlanScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  description: 'description',
  type: 'type',
  durationDays: 'durationDays',
  priceAmount: 'priceAmount',
  currency: 'currency',
  isActive: 'isActive',
  sortOrder: 'sortOrder'
};

exports.Prisma.PromotionOrderScalarFieldEnum = {
  id: 'id',
  buyerId: 'buyerId',
  listingId: 'listingId',
  planId: 'planId',
  status: 'status',
  subtotal: 'subtotal',
  tax: 'tax',
  total: 'total',
  currency: 'currency',
  createdAt: 'createdAt',
  paidAt: 'paidAt',
  externalRef: 'externalRef',
  metadata: 'metadata'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  promotionOrderId: 'promotionOrderId',
  provider: 'provider',
  providerPaymentId: 'providerPaymentId',
  status: 'status',
  amount: 'amount',
  currency: 'currency',
  receiptUrl: 'receiptUrl',
  rawPayload: 'rawPayload',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdSlotScalarFieldEnum = {
  id: 'id',
  code: 'code',
  placement: 'placement',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.AdImpressionScalarFieldEnum = {
  id: 'id',
  adSlotId: 'adSlotId',
  listingId: 'listingId',
  thirdPartyCampaignId: 'thirdPartyCampaignId',
  occurredAt: 'occurredAt',
  metadata: 'metadata'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserStatus = exports.$Enums.UserStatus = {
  active: 'active',
  banned: 'banned'
};

exports.ListingStatus = exports.$Enums.ListingStatus = {
  draft: 'draft',
  pending: 'pending',
  active: 'active',
  paused: 'paused',
  rejected: 'rejected',
  expired: 'expired',
  sold_out: 'sold_out'
};

exports.Condition = exports.$Enums.Condition = {
  new: 'new',
  used: 'used'
};

exports.ConversationStatus = exports.$Enums.ConversationStatus = {
  open: 'open',
  blocked: 'blocked',
  archived: 'archived'
};

exports.ReportTarget = exports.$Enums.ReportTarget = {
  listing: 'listing',
  user: 'user',
  message: 'message'
};

exports.ReportStatus = exports.$Enums.ReportStatus = {
  open: 'open',
  reviewing: 'reviewing',
  closed: 'closed'
};

exports.PromotionType = exports.$Enums.PromotionType = {
  home_featured: 'home_featured',
  top_list: 'top_list',
  urgent_badge: 'urgent_badge'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  created: 'created',
  approved: 'approved',
  rejected: 'rejected',
  refunded: 'refunded',
  chargeback: 'chargeback'
};

exports.Prisma.ModelName = {
  User: 'User',
  UserProfile: 'UserProfile',
  Location: 'Location',
  Category: 'Category',
  Listing: 'Listing',
  ListingMedia: 'ListingMedia',
  ListingAttributeDef: 'ListingAttributeDef',
  ListingAttribute: 'ListingAttribute',
  Favorite: 'Favorite',
  Conversation: 'Conversation',
  Message: 'Message',
  Report: 'Report',
  PromotionPlan: 'PromotionPlan',
  PromotionOrder: 'PromotionOrder',
  Payment: 'Payment',
  AdSlot: 'AdSlot',
  AdImpression: 'AdImpression'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Admin\\Documents\\Marketplace\\marketplace_full_v5\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Admin\\Documents\\Marketplace\\marketplace_full_v5\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// ========= PRISMA SCHEMA =========\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n/**\n * ===== Enums =====\n */\nenum UserStatus {\n  active\n  banned\n}\n\nenum ListingStatus {\n  draft\n  pending\n  active\n  paused\n  rejected\n  expired\n  sold_out\n}\n\nenum Condition {\n  new\n  used\n}\n\nenum ConversationStatus {\n  open\n  blocked\n  archived\n}\n\nenum ReportTarget {\n  listing\n  user\n  message\n}\n\nenum ReportStatus {\n  open\n  reviewing\n  closed\n}\n\nenum PromotionType {\n  home_featured\n  top_list\n  urgent_badge\n}\n\nenum PaymentStatus {\n  created\n  approved\n  rejected\n  refunded\n  chargeback\n}\n\n/**\n * ===== Modelos =====\n */\n\nmodel User {\n  id           String     @id @default(uuid())\n  email        String     @unique\n  passwordHash String\n  isAdmin      Boolean    @default(false)\n  status       UserStatus @default(active)\n  createdAt    DateTime   @default(now())\n  lastLoginAt  DateTime?\n  deletedAt    DateTime?\n\n  profile             UserProfile?\n  listings            Listing[]\n  favorites           Favorite[]\n  conversationsBuyer  Conversation[]   @relation(\"buyer\")\n  conversationsSeller Conversation[]   @relation(\"seller\")\n  messages            Message[]\n  reports             Report[]         @relation(\"reporter\")\n  promoOrders         PromotionOrder[] @relation(\"buyerOrder\")\n}\n\nmodel UserProfile {\n  userId      String  @id\n  user        User    @relation(fields: [userId], references: [id])\n  displayName String\n  phone       String?\n  avatarUrl   String?\n  about       String?\n  provinceId  String?\n  cityId      String?\n  addressText String?\n}\n\n/**\n * Ubicaciones jerárquicas (provincia -> ciudad)\n */\nmodel Location {\n  id        String     @id @default(uuid())\n  country   String\n  name      String\n  slug      String     @unique // único para upsert.where { slug }\n  parentId  String?\n  parent    Location?  @relation(\"LocationToParent\", fields: [parentId], references: [id])\n  children  Location[] @relation(\"LocationToParent\")\n  createdAt DateTime   @default(now())\n\n  @@index([country, slug])\n}\n\n/**\n * Categorías (3 niveles)\n */\nmodel Category {\n  id        String     @id @default(uuid())\n  name      String\n  slug      String     @unique // único para upsert.where { slug }\n  parentId  String?\n  parent    Category?  @relation(\"CategoryToParent\", fields: [parentId], references: [id])\n  children  Category[] @relation(\"CategoryToParent\")\n  level     Int\n  isActive  Boolean    @default(true)\n  sortOrder Int        @default(0)\n\n  listings      Listing[]\n  attributeDefs ListingAttributeDef[] @relation(\"CategoryToAttrDefs\") // inversa requerida\n\n  // (Quitado @@unique([slug]) porque ya está @unique en el campo)\n}\n\n/**\n * Avisos\n */\nmodel Listing {\n  id         String   @id @default(uuid())\n  seller     User     @relation(fields: [sellerId], references: [id])\n  sellerId   String\n  category   Category @relation(fields: [categoryId], references: [id])\n  categoryId String\n\n  title       String\n  description String?\n  priceAmount Decimal       @db.Decimal(12, 2)\n  currency    String        @default(\"ARS\")\n  condition   Condition\n  quantity    Int           @default(1)\n  status      ListingStatus @default(pending)\n\n  provinceId String?\n  cityId     String?\n\n  viewsCount     Int       @default(0)\n  favoritesCount Int       @default(0)\n  contactsCount  Int       @default(0)\n  promotedUntil  DateTime?\n\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  publishedAt DateTime?\n  expiresAt   DateTime?\n  deletedAt   DateTime?\n\n  media         ListingMedia[]\n  attributes    ListingAttribute[]\n  favorites     Favorite[]\n  conversations Conversation[]\n  promoOrders   PromotionOrder[]\n\n  adImpressions AdImpression[] @relation(\"ListingToAdImpressions\") // inversa requerida\n\n  @@index([status, publishedAt])\n  @@index([categoryId, status, publishedAt])\n  @@index([provinceId, cityId])\n}\n\nmodel ListingMedia {\n  id        String   @id @default(uuid())\n  listing   Listing  @relation(fields: [listingId], references: [id])\n  listingId String\n  url       String\n  position  Int\n  width     Int?\n  height    Int?\n  mimeType  String?\n  createdAt DateTime @default(now())\n\n  @@index([listingId, position])\n}\n\n/**\n * Atributos por categoría (EAV)\n */\nmodel ListingAttributeDef {\n  id          String             @id @default(uuid())\n  category    Category           @relation(\"CategoryToAttrDefs\", fields: [categoryId], references: [id]) // relación nombrada\n  categoryId  String\n  name        String\n  key         String\n  dataType    String // text, number, boolean, enum\n  enumOptions Json?\n  isRequired  Boolean            @default(false)\n  sortOrder   Int                @default(0)\n  attributes  ListingAttribute[]\n\n  @@unique([categoryId, key])\n}\n\nmodel ListingAttribute {\n  id          String              @id @default(uuid())\n  listing     Listing             @relation(fields: [listingId], references: [id])\n  listingId   String\n  attrDef     ListingAttributeDef @relation(fields: [attrDefId], references: [id])\n  attrDefId   String\n  valueText   String?\n  valueNumber Decimal?            @db.Decimal(12, 2)\n  valueBool   Boolean?\n\n  @@unique([listingId, attrDefId])\n}\n\n/**\n * Sociales\n */\nmodel Favorite {\n  user      User     @relation(fields: [userId], references: [id])\n  userId    String\n  listing   Listing  @relation(fields: [listingId], references: [id])\n  listingId String\n  createdAt DateTime @default(now())\n\n  @@id([userId, listingId])\n}\n\nmodel Conversation {\n  id            String             @id @default(uuid())\n  listing       Listing            @relation(fields: [listingId], references: [id])\n  listingId     String\n  buyer         User               @relation(\"buyer\", fields: [buyerId], references: [id])\n  buyerId       String\n  seller        User               @relation(\"seller\", fields: [sellerId], references: [id])\n  sellerId      String\n  lastMessageAt DateTime?\n  status        ConversationStatus @default(open)\n  createdAt     DateTime           @default(now())\n  messages      Message[]\n\n  @@unique([listingId, buyerId, sellerId])\n}\n\nmodel Message {\n  id             String       @id @default(uuid())\n  conversation   Conversation @relation(fields: [conversationId], references: [id])\n  conversationId String\n  sender         User         @relation(fields: [senderId], references: [id])\n  senderId       String\n  body           String?\n  mediaUrl       String?\n  createdAt      DateTime     @default(now())\n  readAt         DateTime?\n\n  @@index([conversationId, createdAt])\n}\n\n/**\n * Moderación\n */\nmodel Report {\n  id          String       @id @default(uuid())\n  reporter    User         @relation(\"reporter\", fields: [reporterId], references: [id])\n  reporterId  String\n  targetType  ReportTarget\n  targetId    String\n  reason      String\n  detailsText String?\n  status      ReportStatus @default(open)\n  createdAt   DateTime     @default(now())\n  closedAt    DateTime?\n  adminId     String?\n}\n\n/**\n * Promociones (destacados) y pagos\n */\nmodel PromotionPlan {\n  id           String           @id @default(uuid())\n  code         String           @unique\n  name         String\n  description  String?\n  type         PromotionType\n  durationDays Int\n  priceAmount  Decimal          @db.Decimal(12, 2)\n  currency     String           @default(\"ARS\")\n  isActive     Boolean          @default(true)\n  sortOrder    Int              @default(0)\n  orders       PromotionOrder[]\n}\n\nmodel PromotionOrder {\n  id          String        @id @default(uuid())\n  buyer       User          @relation(\"buyerOrder\", fields: [buyerId], references: [id])\n  buyerId     String\n  listing     Listing       @relation(fields: [listingId], references: [id])\n  listingId   String\n  plan        PromotionPlan @relation(fields: [planId], references: [id])\n  planId      String\n  status      String        @default(\"pending\") // pending, paid, canceled, failed\n  subtotal    Decimal       @db.Decimal(12, 2)\n  tax         Decimal       @db.Decimal(12, 2)\n  total       Decimal       @db.Decimal(12, 2)\n  currency    String        @default(\"ARS\")\n  createdAt   DateTime      @default(now())\n  paidAt      DateTime?\n  externalRef String?\n  metadata    Json?\n  payments    Payment[]\n\n  @@index([buyerId, createdAt])\n}\n\nmodel Payment {\n  id                String         @id @default(uuid())\n  promotionOrder    PromotionOrder @relation(fields: [promotionOrderId], references: [id])\n  promotionOrderId  String\n  provider          String\n  providerPaymentId String\n  status            PaymentStatus\n  amount            Decimal        @db.Decimal(12, 2)\n  currency          String         @default(\"ARS\")\n  receiptUrl        String?\n  rawPayload        Json?\n  createdAt         DateTime       @default(now())\n  updatedAt         DateTime       @updatedAt\n\n  @@index([provider, providerPaymentId])\n}\n\n/**\n * Publicidad interna\n */\nmodel AdSlot {\n  id          String   @id @default(uuid())\n  code        String   @unique\n  placement   String // home_top, category_sidebar, etc.\n  description String?\n  isActive    Boolean  @default(true)\n  createdAt   DateTime @default(now())\n\n  impressions AdImpression[] @relation(\"AdSlotToImpressions\") // inversa requerida\n}\n\nmodel AdImpression {\n  id       String @id @default(uuid())\n  adSlot   AdSlot @relation(\"AdSlotToImpressions\", fields: [adSlotId], references: [id])\n  adSlotId String\n\n  listing   Listing? @relation(\"ListingToAdImpressions\", fields: [listingId], references: [id])\n  listingId String?\n\n  thirdPartyCampaignId String?\n  occurredAt           DateTime @default(now())\n  metadata             Json?\n}\n",
  "inlineSchemaHash": "1f08cd5e49b992dafcf449b47d24b3de8b1ddf7fe4180d7ea07c3f4e5f7806cd",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAdmin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"UserStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"UserProfile\",\"relationName\":\"UserToUserProfile\"},{\"name\":\"listings\",\"kind\":\"object\",\"type\":\"Listing\",\"relationName\":\"ListingToUser\"},{\"name\":\"favorites\",\"kind\":\"object\",\"type\":\"Favorite\",\"relationName\":\"FavoriteToUser\"},{\"name\":\"conversationsBuyer\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"buyer\"},{\"name\":\"conversationsSeller\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"seller\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToUser\"},{\"name\":\"reports\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"reporter\"},{\"name\":\"promoOrders\",\"kind\":\"object\",\"type\":\"PromotionOrder\",\"relationName\":\"buyerOrder\"}],\"dbName\":null},\"UserProfile\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserProfile\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"about\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provinceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressText\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Location\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"LocationToParent\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"LocationToParent\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToParent\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToParent\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"listings\",\"kind\":\"object\",\"type\":\"Listing\",\"relationName\":\"CategoryToListing\"},{\"name\":\"attributeDefs\",\"kind\":\"object\",\"type\":\"ListingAttributeDef\",\"relationName\":\"CategoryToAttrDefs\"}],\"dbName\":null},\"Listing\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ListingToUser\"},{\"name\":\"sellerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToListing\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"condition\",\"kind\":\"enum\",\"type\":\"Condition\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ListingStatus\"},{\"name\":\"provinceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"viewsCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"favoritesCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contactsCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"promotedUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"publishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"media\",\"kind\":\"object\",\"type\":\"ListingMedia\",\"relationName\":\"ListingToListingMedia\"},{\"name\":\"attributes\",\"kind\":\"object\",\"type\":\"ListingAttribute\",\"relationName\":\"ListingToListingAttribute\"},{\"name\":\"favorites\",\"kind\":\"object\",\"type\":\"Favorite\",\"relationName\":\"FavoriteToListing\"},{\"name\":\"conversations\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToListing\"},{\"name\":\"promoOrders\",\"kind\":\"object\",\"type\":\"PromotionOrder\",\"relationName\":\"ListingToPromotionOrder\"},{\"name\":\"adImpressions\",\"kind\":\"object\",\"type\":\"AdImpression\",\"relationName\":\"ListingToAdImpressions\"}],\"dbName\":null},\"ListingMedia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listing\",\"kind\":\"object\",\"type\":\"Listing\",\"relationName\":\"ListingToListingMedia\"},{\"name\":\"listingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ListingAttributeDef\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToAttrDefs\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dataType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enumOptions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"attributes\",\"kind\":\"object\",\"type\":\"ListingAttribute\",\"relationName\":\"ListingAttributeToListingAttributeDef\"}],\"dbName\":null},\"ListingAttribute\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listing\",\"kind\":\"object\",\"type\":\"Listing\",\"relationName\":\"ListingToListingAttribute\"},{\"name\":\"listingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attrDef\",\"kind\":\"object\",\"type\":\"ListingAttributeDef\",\"relationName\":\"ListingAttributeToListingAttributeDef\"},{\"name\":\"attrDefId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"valueText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"valueNumber\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"valueBool\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Favorite\":{\"fields\":[{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FavoriteToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listing\",\"kind\":\"object\",\"type\":\"Listing\",\"relationName\":\"FavoriteToListing\"},{\"name\":\"listingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Conversation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listing\",\"kind\":\"object\",\"type\":\"Listing\",\"relationName\":\"ConversationToListing\"},{\"name\":\"listingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buyer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"buyer\"},{\"name\":\"buyerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"seller\"},{\"name\":\"sellerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastMessageAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ConversationStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ConversationToMessage\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToMessage\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageToUser\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mediaUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Report\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reporter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"reporter\"},{\"name\":\"reporterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetType\",\"kind\":\"enum\",\"type\":\"ReportTarget\"},{\"name\":\"targetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"detailsText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReportStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"closedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"PromotionPlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"PromotionType\"},{\"name\":\"durationDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"priceAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"PromotionOrder\",\"relationName\":\"PromotionOrderToPromotionPlan\"}],\"dbName\":null},\"PromotionOrder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buyer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"buyerOrder\"},{\"name\":\"buyerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listing\",\"kind\":\"object\",\"type\":\"Listing\",\"relationName\":\"ListingToPromotionOrder\"},{\"name\":\"listingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"PromotionPlan\",\"relationName\":\"PromotionOrderToPromotionPlan\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subtotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"tax\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"externalRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToPromotionOrder\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"promotionOrder\",\"kind\":\"object\",\"type\":\"PromotionOrder\",\"relationName\":\"PaymentToPromotionOrder\"},{\"name\":\"promotionOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerPaymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receiptUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rawPayload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AdSlot\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"placement\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"impressions\",\"kind\":\"object\",\"type\":\"AdImpression\",\"relationName\":\"AdSlotToImpressions\"}],\"dbName\":null},\"AdImpression\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adSlot\",\"kind\":\"object\",\"type\":\"AdSlot\",\"relationName\":\"AdSlotToImpressions\"},{\"name\":\"adSlotId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listing\",\"kind\":\"object\",\"type\":\"Listing\",\"relationName\":\"ListingToAdImpressions\"},{\"name\":\"listingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thirdPartyCampaignId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"occurredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

