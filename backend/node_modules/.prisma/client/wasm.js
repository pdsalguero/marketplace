
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name'
};

exports.Prisma.CategoryNodeScalarFieldEnum = {
  id: 'id',
  key: 'key',
  name: 'name',
  parentId: 'parentId',
  order: 'order',
  active: 'active'
};

exports.Prisma.AdScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  price: 'price',
  imageKey: 'imageKey',
  imageKeys: 'imageKeys',
  category: 'category',
  subcategory: 'subcategory',
  categoryId: 'categoryId',
  subcategoryId: 'subcategoryId',
  brand: 'brand',
  model: 'model',
  year: 'year',
  mileage: 'mileage',
  transmission: 'transmission',
  fuel: 'fuel',
  location: 'location',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Category = exports.$Enums.Category = {
  AUTOS: 'AUTOS',
  INMUEBLES: 'INMUEBLES',
  ELECTRONICA: 'ELECTRONICA',
  HOGAR: 'HOGAR',
  EMPLEO: 'EMPLEO',
  SERVICIOS: 'SERVICIOS',
  MODA: 'MODA',
  MASCOTAS: 'MASCOTAS',
  OTROS: 'OTROS'
};

exports.Transmission = exports.$Enums.Transmission = {
  MANUAL: 'MANUAL',
  AUTOMATIC: 'AUTOMATIC'
};

exports.Fuel = exports.$Enums.Fuel = {
  GASOLINE: 'GASOLINE',
  DIESEL: 'DIESEL',
  EV: 'EV',
  HYBRID: 'HYBRID'
};

exports.Prisma.ModelName = {
  User: 'User',
  CategoryNode: 'CategoryNode',
  Ad: 'Ad'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Admin\\Documents\\Marketplace\\marketplace_full_v5\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Admin\\Documents\\Marketplace\\marketplace_full_v5\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Category {\n  AUTOS\n  INMUEBLES\n  ELECTRONICA\n  HOGAR\n  EMPLEO\n  SERVICIOS\n  MODA\n  MASCOTAS\n  OTROS\n}\n\nenum Transmission {\n  MANUAL\n  AUTOMATIC\n}\n\nenum Fuel {\n  GASOLINE\n  DIESEL\n  EV\n  HYBRID\n}\n\nmodel User {\n  id       Int     @id @default(autoincrement())\n  email    String  @unique\n  password String\n  name     String?\n\n  ads Ad[]\n}\n\nmodel CategoryNode {\n  id       Int            @id @default(autoincrement())\n  key      String         @unique\n  name     String\n  parentId Int?\n  parent   CategoryNode?  @relation(\"CategoryChildren\", fields: [parentId], references: [id])\n  children CategoryNode[] @relation(\"CategoryChildren\")\n  order    Int            @default(0)\n  active   Boolean        @default(true)\n\n  adsCategory    Ad[] @relation(\"AdCategory\")\n  adsSubcategory Ad[] @relation(\"AdSubcategory\")\n\n  @@index([parentId])\n  @@index([key])\n}\n\nmodel Ad {\n  id          Int     @id @default(autoincrement())\n  title       String\n  description String\n  price       Float\n  imageKey    String?\n  imageKeys   Json?\n\n  // Retrocompat\n  category    Category @default(OTROS)\n  subcategory String?  @db.VarChar(64)\n\n  // Taxonom√≠a por IDs (opcionales)\n  categoryId     Int?\n  categoryRef    CategoryNode? @relation(\"AdCategory\", fields: [categoryId], references: [id])\n  subcategoryId  Int?\n  subcategoryRef CategoryNode? @relation(\"AdSubcategory\", fields: [subcategoryId], references: [id])\n\n  // Autos (opcionales)\n  brand        String?\n  model        String?\n  year         Int?\n  mileage      Int?\n  transmission Transmission?\n  fuel         Fuel?\n  location     String?\n\n  userId Int\n  user   User @relation(fields: [userId], references: [id])\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([categoryId])\n  @@index([subcategoryId])\n}\n",
  "inlineSchemaHash": "c396a144a8a818a5339ee7294befbafc5b4f123c6a754d7938864569aba3577b",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ads\",\"kind\":\"object\",\"type\":\"Ad\",\"relationName\":\"AdToUser\"}],\"dbName\":null},\"CategoryNode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"CategoryNode\",\"relationName\":\"CategoryChildren\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"CategoryNode\",\"relationName\":\"CategoryChildren\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"adsCategory\",\"kind\":\"object\",\"type\":\"Ad\",\"relationName\":\"AdCategory\"},{\"name\":\"adsSubcategory\",\"kind\":\"object\",\"type\":\"Ad\",\"relationName\":\"AdSubcategory\"}],\"dbName\":null},\"Ad\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"imageKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageKeys\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"Category\"},{\"name\":\"subcategory\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"categoryRef\",\"kind\":\"object\",\"type\":\"CategoryNode\",\"relationName\":\"AdCategory\"},{\"name\":\"subcategoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subcategoryRef\",\"kind\":\"object\",\"type\":\"CategoryNode\",\"relationName\":\"AdSubcategory\"},{\"name\":\"brand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mileage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"transmission\",\"kind\":\"enum\",\"type\":\"Transmission\"},{\"name\":\"fuel\",\"kind\":\"enum\",\"type\":\"Fuel\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

