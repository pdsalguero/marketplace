
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model UserProfile
 * 
 */
export type UserProfile = $Result.DefaultSelection<Prisma.$UserProfilePayload>
/**
 * Model Location
 * *
 *  * Ubicaciones jerárquicas (provincia -> ciudad)
 */
export type Location = $Result.DefaultSelection<Prisma.$LocationPayload>
/**
 * Model Category
 * *
 *  * Categorías (3 niveles)
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Listing
 * *
 *  * Avisos
 */
export type Listing = $Result.DefaultSelection<Prisma.$ListingPayload>
/**
 * Model ListingMedia
 * 
 */
export type ListingMedia = $Result.DefaultSelection<Prisma.$ListingMediaPayload>
/**
 * Model ListingAttributeDef
 * *
 *  * Atributos por categoría (EAV)
 */
export type ListingAttributeDef = $Result.DefaultSelection<Prisma.$ListingAttributeDefPayload>
/**
 * Model ListingAttribute
 * 
 */
export type ListingAttribute = $Result.DefaultSelection<Prisma.$ListingAttributePayload>
/**
 * Model Favorite
 * *
 *  * Sociales
 */
export type Favorite = $Result.DefaultSelection<Prisma.$FavoritePayload>
/**
 * Model Conversation
 * 
 */
export type Conversation = $Result.DefaultSelection<Prisma.$ConversationPayload>
/**
 * Model Message
 * 
 */
export type Message = $Result.DefaultSelection<Prisma.$MessagePayload>
/**
 * Model Report
 * *
 *  * Moderación
 */
export type Report = $Result.DefaultSelection<Prisma.$ReportPayload>
/**
 * Model PromotionPlan
 * *
 *  * Promociones (destacados) y pagos
 */
export type PromotionPlan = $Result.DefaultSelection<Prisma.$PromotionPlanPayload>
/**
 * Model PromotionOrder
 * 
 */
export type PromotionOrder = $Result.DefaultSelection<Prisma.$PromotionOrderPayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model AdSlot
 * *
 *  * Publicidad interna
 */
export type AdSlot = $Result.DefaultSelection<Prisma.$AdSlotPayload>
/**
 * Model AdImpression
 * 
 */
export type AdImpression = $Result.DefaultSelection<Prisma.$AdImpressionPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const UserStatus: {
  active: 'active',
  banned: 'banned'
};

export type UserStatus = (typeof UserStatus)[keyof typeof UserStatus]


export const ListingStatus: {
  draft: 'draft',
  pending: 'pending',
  active: 'active',
  paused: 'paused',
  rejected: 'rejected',
  expired: 'expired',
  sold_out: 'sold_out'
};

export type ListingStatus = (typeof ListingStatus)[keyof typeof ListingStatus]


export const Condition: {
  new: 'new',
  used: 'used'
};

export type Condition = (typeof Condition)[keyof typeof Condition]


export const ConversationStatus: {
  open: 'open',
  blocked: 'blocked',
  archived: 'archived'
};

export type ConversationStatus = (typeof ConversationStatus)[keyof typeof ConversationStatus]


export const ReportTarget: {
  listing: 'listing',
  user: 'user',
  message: 'message'
};

export type ReportTarget = (typeof ReportTarget)[keyof typeof ReportTarget]


export const ReportStatus: {
  open: 'open',
  reviewing: 'reviewing',
  closed: 'closed'
};

export type ReportStatus = (typeof ReportStatus)[keyof typeof ReportStatus]


export const PromotionType: {
  home_featured: 'home_featured',
  top_list: 'top_list',
  urgent_badge: 'urgent_badge'
};

export type PromotionType = (typeof PromotionType)[keyof typeof PromotionType]


export const PaymentStatus: {
  created: 'created',
  approved: 'approved',
  rejected: 'rejected',
  refunded: 'refunded',
  chargeback: 'chargeback'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]

}

export type UserStatus = $Enums.UserStatus

export const UserStatus: typeof $Enums.UserStatus

export type ListingStatus = $Enums.ListingStatus

export const ListingStatus: typeof $Enums.ListingStatus

export type Condition = $Enums.Condition

export const Condition: typeof $Enums.Condition

export type ConversationStatus = $Enums.ConversationStatus

export const ConversationStatus: typeof $Enums.ConversationStatus

export type ReportTarget = $Enums.ReportTarget

export const ReportTarget: typeof $Enums.ReportTarget

export type ReportStatus = $Enums.ReportStatus

export const ReportStatus: typeof $Enums.ReportStatus

export type PromotionType = $Enums.PromotionType

export const PromotionType: typeof $Enums.PromotionType

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userProfile`: Exposes CRUD operations for the **UserProfile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserProfiles
    * const userProfiles = await prisma.userProfile.findMany()
    * ```
    */
  get userProfile(): Prisma.UserProfileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.location`: Exposes CRUD operations for the **Location** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Locations
    * const locations = await prisma.location.findMany()
    * ```
    */
  get location(): Prisma.LocationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listing`: Exposes CRUD operations for the **Listing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Listings
    * const listings = await prisma.listing.findMany()
    * ```
    */
  get listing(): Prisma.ListingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listingMedia`: Exposes CRUD operations for the **ListingMedia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ListingMedias
    * const listingMedias = await prisma.listingMedia.findMany()
    * ```
    */
  get listingMedia(): Prisma.ListingMediaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listingAttributeDef`: Exposes CRUD operations for the **ListingAttributeDef** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ListingAttributeDefs
    * const listingAttributeDefs = await prisma.listingAttributeDef.findMany()
    * ```
    */
  get listingAttributeDef(): Prisma.ListingAttributeDefDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listingAttribute`: Exposes CRUD operations for the **ListingAttribute** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ListingAttributes
    * const listingAttributes = await prisma.listingAttribute.findMany()
    * ```
    */
  get listingAttribute(): Prisma.ListingAttributeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.favorite`: Exposes CRUD operations for the **Favorite** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favorites
    * const favorites = await prisma.favorite.findMany()
    * ```
    */
  get favorite(): Prisma.FavoriteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.conversation`: Exposes CRUD operations for the **Conversation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Conversations
    * const conversations = await prisma.conversation.findMany()
    * ```
    */
  get conversation(): Prisma.ConversationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.message`: Exposes CRUD operations for the **Message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.message.findMany()
    * ```
    */
  get message(): Prisma.MessageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.report`: Exposes CRUD operations for the **Report** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reports
    * const reports = await prisma.report.findMany()
    * ```
    */
  get report(): Prisma.ReportDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promotionPlan`: Exposes CRUD operations for the **PromotionPlan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PromotionPlans
    * const promotionPlans = await prisma.promotionPlan.findMany()
    * ```
    */
  get promotionPlan(): Prisma.PromotionPlanDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promotionOrder`: Exposes CRUD operations for the **PromotionOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PromotionOrders
    * const promotionOrders = await prisma.promotionOrder.findMany()
    * ```
    */
  get promotionOrder(): Prisma.PromotionOrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.adSlot`: Exposes CRUD operations for the **AdSlot** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AdSlots
    * const adSlots = await prisma.adSlot.findMany()
    * ```
    */
  get adSlot(): Prisma.AdSlotDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.adImpression`: Exposes CRUD operations for the **AdImpression** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AdImpressions
    * const adImpressions = await prisma.adImpression.findMany()
    * ```
    */
  get adImpression(): Prisma.AdImpressionDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.16.2
   * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    UserProfile: 'UserProfile',
    Location: 'Location',
    Category: 'Category',
    Listing: 'Listing',
    ListingMedia: 'ListingMedia',
    ListingAttributeDef: 'ListingAttributeDef',
    ListingAttribute: 'ListingAttribute',
    Favorite: 'Favorite',
    Conversation: 'Conversation',
    Message: 'Message',
    Report: 'Report',
    PromotionPlan: 'PromotionPlan',
    PromotionOrder: 'PromotionOrder',
    Payment: 'Payment',
    AdSlot: 'AdSlot',
    AdImpression: 'AdImpression'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "userProfile" | "location" | "category" | "listing" | "listingMedia" | "listingAttributeDef" | "listingAttribute" | "favorite" | "conversation" | "message" | "report" | "promotionPlan" | "promotionOrder" | "payment" | "adSlot" | "adImpression"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      UserProfile: {
        payload: Prisma.$UserProfilePayload<ExtArgs>
        fields: Prisma.UserProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>
          }
          findFirst: {
            args: Prisma.UserProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>
          }
          findMany: {
            args: Prisma.UserProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>[]
          }
          create: {
            args: Prisma.UserProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>
          }
          createMany: {
            args: Prisma.UserProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserProfileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>[]
          }
          delete: {
            args: Prisma.UserProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>
          }
          update: {
            args: Prisma.UserProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>
          }
          deleteMany: {
            args: Prisma.UserProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserProfileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>[]
          }
          upsert: {
            args: Prisma.UserProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>
          }
          aggregate: {
            args: Prisma.UserProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserProfile>
          }
          groupBy: {
            args: Prisma.UserProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserProfileCountArgs<ExtArgs>
            result: $Utils.Optional<UserProfileCountAggregateOutputType> | number
          }
        }
      }
      Location: {
        payload: Prisma.$LocationPayload<ExtArgs>
        fields: Prisma.LocationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LocationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LocationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          findFirst: {
            args: Prisma.LocationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LocationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          findMany: {
            args: Prisma.LocationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>[]
          }
          create: {
            args: Prisma.LocationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          createMany: {
            args: Prisma.LocationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LocationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>[]
          }
          delete: {
            args: Prisma.LocationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          update: {
            args: Prisma.LocationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          deleteMany: {
            args: Prisma.LocationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LocationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LocationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>[]
          }
          upsert: {
            args: Prisma.LocationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          aggregate: {
            args: Prisma.LocationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLocation>
          }
          groupBy: {
            args: Prisma.LocationGroupByArgs<ExtArgs>
            result: $Utils.Optional<LocationGroupByOutputType>[]
          }
          count: {
            args: Prisma.LocationCountArgs<ExtArgs>
            result: $Utils.Optional<LocationCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Listing: {
        payload: Prisma.$ListingPayload<ExtArgs>
        fields: Prisma.ListingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>
          }
          findFirst: {
            args: Prisma.ListingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>
          }
          findMany: {
            args: Prisma.ListingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>[]
          }
          create: {
            args: Prisma.ListingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>
          }
          createMany: {
            args: Prisma.ListingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>[]
          }
          delete: {
            args: Prisma.ListingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>
          }
          update: {
            args: Prisma.ListingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>
          }
          deleteMany: {
            args: Prisma.ListingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>[]
          }
          upsert: {
            args: Prisma.ListingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>
          }
          aggregate: {
            args: Prisma.ListingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListing>
          }
          groupBy: {
            args: Prisma.ListingGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListingGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListingCountArgs<ExtArgs>
            result: $Utils.Optional<ListingCountAggregateOutputType> | number
          }
        }
      }
      ListingMedia: {
        payload: Prisma.$ListingMediaPayload<ExtArgs>
        fields: Prisma.ListingMediaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListingMediaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingMediaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListingMediaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingMediaPayload>
          }
          findFirst: {
            args: Prisma.ListingMediaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingMediaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListingMediaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingMediaPayload>
          }
          findMany: {
            args: Prisma.ListingMediaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingMediaPayload>[]
          }
          create: {
            args: Prisma.ListingMediaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingMediaPayload>
          }
          createMany: {
            args: Prisma.ListingMediaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListingMediaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingMediaPayload>[]
          }
          delete: {
            args: Prisma.ListingMediaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingMediaPayload>
          }
          update: {
            args: Prisma.ListingMediaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingMediaPayload>
          }
          deleteMany: {
            args: Prisma.ListingMediaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListingMediaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListingMediaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingMediaPayload>[]
          }
          upsert: {
            args: Prisma.ListingMediaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingMediaPayload>
          }
          aggregate: {
            args: Prisma.ListingMediaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListingMedia>
          }
          groupBy: {
            args: Prisma.ListingMediaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListingMediaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListingMediaCountArgs<ExtArgs>
            result: $Utils.Optional<ListingMediaCountAggregateOutputType> | number
          }
        }
      }
      ListingAttributeDef: {
        payload: Prisma.$ListingAttributeDefPayload<ExtArgs>
        fields: Prisma.ListingAttributeDefFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListingAttributeDefFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributeDefPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListingAttributeDefFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributeDefPayload>
          }
          findFirst: {
            args: Prisma.ListingAttributeDefFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributeDefPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListingAttributeDefFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributeDefPayload>
          }
          findMany: {
            args: Prisma.ListingAttributeDefFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributeDefPayload>[]
          }
          create: {
            args: Prisma.ListingAttributeDefCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributeDefPayload>
          }
          createMany: {
            args: Prisma.ListingAttributeDefCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListingAttributeDefCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributeDefPayload>[]
          }
          delete: {
            args: Prisma.ListingAttributeDefDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributeDefPayload>
          }
          update: {
            args: Prisma.ListingAttributeDefUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributeDefPayload>
          }
          deleteMany: {
            args: Prisma.ListingAttributeDefDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListingAttributeDefUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListingAttributeDefUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributeDefPayload>[]
          }
          upsert: {
            args: Prisma.ListingAttributeDefUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributeDefPayload>
          }
          aggregate: {
            args: Prisma.ListingAttributeDefAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListingAttributeDef>
          }
          groupBy: {
            args: Prisma.ListingAttributeDefGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListingAttributeDefGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListingAttributeDefCountArgs<ExtArgs>
            result: $Utils.Optional<ListingAttributeDefCountAggregateOutputType> | number
          }
        }
      }
      ListingAttribute: {
        payload: Prisma.$ListingAttributePayload<ExtArgs>
        fields: Prisma.ListingAttributeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListingAttributeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListingAttributeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributePayload>
          }
          findFirst: {
            args: Prisma.ListingAttributeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListingAttributeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributePayload>
          }
          findMany: {
            args: Prisma.ListingAttributeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributePayload>[]
          }
          create: {
            args: Prisma.ListingAttributeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributePayload>
          }
          createMany: {
            args: Prisma.ListingAttributeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListingAttributeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributePayload>[]
          }
          delete: {
            args: Prisma.ListingAttributeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributePayload>
          }
          update: {
            args: Prisma.ListingAttributeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributePayload>
          }
          deleteMany: {
            args: Prisma.ListingAttributeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListingAttributeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListingAttributeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributePayload>[]
          }
          upsert: {
            args: Prisma.ListingAttributeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAttributePayload>
          }
          aggregate: {
            args: Prisma.ListingAttributeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListingAttribute>
          }
          groupBy: {
            args: Prisma.ListingAttributeGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListingAttributeGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListingAttributeCountArgs<ExtArgs>
            result: $Utils.Optional<ListingAttributeCountAggregateOutputType> | number
          }
        }
      }
      Favorite: {
        payload: Prisma.$FavoritePayload<ExtArgs>
        fields: Prisma.FavoriteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoriteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoriteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          findFirst: {
            args: Prisma.FavoriteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoriteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          findMany: {
            args: Prisma.FavoriteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          create: {
            args: Prisma.FavoriteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          createMany: {
            args: Prisma.FavoriteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FavoriteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          delete: {
            args: Prisma.FavoriteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          update: {
            args: Prisma.FavoriteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          deleteMany: {
            args: Prisma.FavoriteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoriteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FavoriteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          upsert: {
            args: Prisma.FavoriteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          aggregate: {
            args: Prisma.FavoriteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavorite>
          }
          groupBy: {
            args: Prisma.FavoriteGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoriteGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoriteCountArgs<ExtArgs>
            result: $Utils.Optional<FavoriteCountAggregateOutputType> | number
          }
        }
      }
      Conversation: {
        payload: Prisma.$ConversationPayload<ExtArgs>
        fields: Prisma.ConversationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConversationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConversationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          findFirst: {
            args: Prisma.ConversationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConversationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          findMany: {
            args: Prisma.ConversationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>[]
          }
          create: {
            args: Prisma.ConversationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          createMany: {
            args: Prisma.ConversationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConversationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>[]
          }
          delete: {
            args: Prisma.ConversationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          update: {
            args: Prisma.ConversationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          deleteMany: {
            args: Prisma.ConversationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConversationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ConversationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>[]
          }
          upsert: {
            args: Prisma.ConversationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          aggregate: {
            args: Prisma.ConversationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConversation>
          }
          groupBy: {
            args: Prisma.ConversationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConversationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConversationCountArgs<ExtArgs>
            result: $Utils.Optional<ConversationCountAggregateOutputType> | number
          }
        }
      }
      Message: {
        payload: Prisma.$MessagePayload<ExtArgs>
        fields: Prisma.MessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findFirst: {
            args: Prisma.MessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findMany: {
            args: Prisma.MessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          create: {
            args: Prisma.MessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          createMany: {
            args: Prisma.MessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MessageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          delete: {
            args: Prisma.MessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          update: {
            args: Prisma.MessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          deleteMany: {
            args: Prisma.MessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MessageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          upsert: {
            args: Prisma.MessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          aggregate: {
            args: Prisma.MessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessage>
          }
          groupBy: {
            args: Prisma.MessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.MessageCountArgs<ExtArgs>
            result: $Utils.Optional<MessageCountAggregateOutputType> | number
          }
        }
      }
      Report: {
        payload: Prisma.$ReportPayload<ExtArgs>
        fields: Prisma.ReportFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReportFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReportFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          findFirst: {
            args: Prisma.ReportFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReportFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          findMany: {
            args: Prisma.ReportFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>[]
          }
          create: {
            args: Prisma.ReportCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          createMany: {
            args: Prisma.ReportCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReportCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>[]
          }
          delete: {
            args: Prisma.ReportDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          update: {
            args: Prisma.ReportUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          deleteMany: {
            args: Prisma.ReportDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReportUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReportUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>[]
          }
          upsert: {
            args: Prisma.ReportUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          aggregate: {
            args: Prisma.ReportAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReport>
          }
          groupBy: {
            args: Prisma.ReportGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReportCountArgs<ExtArgs>
            result: $Utils.Optional<ReportCountAggregateOutputType> | number
          }
        }
      }
      PromotionPlan: {
        payload: Prisma.$PromotionPlanPayload<ExtArgs>
        fields: Prisma.PromotionPlanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionPlanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPlanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionPlanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPlanPayload>
          }
          findFirst: {
            args: Prisma.PromotionPlanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPlanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionPlanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPlanPayload>
          }
          findMany: {
            args: Prisma.PromotionPlanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPlanPayload>[]
          }
          create: {
            args: Prisma.PromotionPlanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPlanPayload>
          }
          createMany: {
            args: Prisma.PromotionPlanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PromotionPlanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPlanPayload>[]
          }
          delete: {
            args: Prisma.PromotionPlanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPlanPayload>
          }
          update: {
            args: Prisma.PromotionPlanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPlanPayload>
          }
          deleteMany: {
            args: Prisma.PromotionPlanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionPlanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PromotionPlanUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPlanPayload>[]
          }
          upsert: {
            args: Prisma.PromotionPlanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPlanPayload>
          }
          aggregate: {
            args: Prisma.PromotionPlanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotionPlan>
          }
          groupBy: {
            args: Prisma.PromotionPlanGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionPlanGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionPlanCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionPlanCountAggregateOutputType> | number
          }
        }
      }
      PromotionOrder: {
        payload: Prisma.$PromotionOrderPayload<ExtArgs>
        fields: Prisma.PromotionOrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionOrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionOrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionOrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionOrderPayload>
          }
          findFirst: {
            args: Prisma.PromotionOrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionOrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionOrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionOrderPayload>
          }
          findMany: {
            args: Prisma.PromotionOrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionOrderPayload>[]
          }
          create: {
            args: Prisma.PromotionOrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionOrderPayload>
          }
          createMany: {
            args: Prisma.PromotionOrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PromotionOrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionOrderPayload>[]
          }
          delete: {
            args: Prisma.PromotionOrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionOrderPayload>
          }
          update: {
            args: Prisma.PromotionOrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionOrderPayload>
          }
          deleteMany: {
            args: Prisma.PromotionOrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionOrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PromotionOrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionOrderPayload>[]
          }
          upsert: {
            args: Prisma.PromotionOrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionOrderPayload>
          }
          aggregate: {
            args: Prisma.PromotionOrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotionOrder>
          }
          groupBy: {
            args: Prisma.PromotionOrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionOrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionOrderCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionOrderCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      AdSlot: {
        payload: Prisma.$AdSlotPayload<ExtArgs>
        fields: Prisma.AdSlotFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdSlotFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdSlotPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdSlotFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdSlotPayload>
          }
          findFirst: {
            args: Prisma.AdSlotFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdSlotPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdSlotFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdSlotPayload>
          }
          findMany: {
            args: Prisma.AdSlotFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdSlotPayload>[]
          }
          create: {
            args: Prisma.AdSlotCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdSlotPayload>
          }
          createMany: {
            args: Prisma.AdSlotCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdSlotCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdSlotPayload>[]
          }
          delete: {
            args: Prisma.AdSlotDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdSlotPayload>
          }
          update: {
            args: Prisma.AdSlotUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdSlotPayload>
          }
          deleteMany: {
            args: Prisma.AdSlotDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdSlotUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AdSlotUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdSlotPayload>[]
          }
          upsert: {
            args: Prisma.AdSlotUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdSlotPayload>
          }
          aggregate: {
            args: Prisma.AdSlotAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdSlot>
          }
          groupBy: {
            args: Prisma.AdSlotGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdSlotGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdSlotCountArgs<ExtArgs>
            result: $Utils.Optional<AdSlotCountAggregateOutputType> | number
          }
        }
      }
      AdImpression: {
        payload: Prisma.$AdImpressionPayload<ExtArgs>
        fields: Prisma.AdImpressionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdImpressionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdImpressionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdImpressionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdImpressionPayload>
          }
          findFirst: {
            args: Prisma.AdImpressionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdImpressionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdImpressionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdImpressionPayload>
          }
          findMany: {
            args: Prisma.AdImpressionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdImpressionPayload>[]
          }
          create: {
            args: Prisma.AdImpressionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdImpressionPayload>
          }
          createMany: {
            args: Prisma.AdImpressionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdImpressionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdImpressionPayload>[]
          }
          delete: {
            args: Prisma.AdImpressionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdImpressionPayload>
          }
          update: {
            args: Prisma.AdImpressionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdImpressionPayload>
          }
          deleteMany: {
            args: Prisma.AdImpressionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdImpressionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AdImpressionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdImpressionPayload>[]
          }
          upsert: {
            args: Prisma.AdImpressionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdImpressionPayload>
          }
          aggregate: {
            args: Prisma.AdImpressionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdImpression>
          }
          groupBy: {
            args: Prisma.AdImpressionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdImpressionGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdImpressionCountArgs<ExtArgs>
            result: $Utils.Optional<AdImpressionCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    userProfile?: UserProfileOmit
    location?: LocationOmit
    category?: CategoryOmit
    listing?: ListingOmit
    listingMedia?: ListingMediaOmit
    listingAttributeDef?: ListingAttributeDefOmit
    listingAttribute?: ListingAttributeOmit
    favorite?: FavoriteOmit
    conversation?: ConversationOmit
    message?: MessageOmit
    report?: ReportOmit
    promotionPlan?: PromotionPlanOmit
    promotionOrder?: PromotionOrderOmit
    payment?: PaymentOmit
    adSlot?: AdSlotOmit
    adImpression?: AdImpressionOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    listings: number
    favorites: number
    conversationsBuyer: number
    conversationsSeller: number
    messages: number
    reports: number
    promoOrders: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listings?: boolean | UserCountOutputTypeCountListingsArgs
    favorites?: boolean | UserCountOutputTypeCountFavoritesArgs
    conversationsBuyer?: boolean | UserCountOutputTypeCountConversationsBuyerArgs
    conversationsSeller?: boolean | UserCountOutputTypeCountConversationsSellerArgs
    messages?: boolean | UserCountOutputTypeCountMessagesArgs
    reports?: boolean | UserCountOutputTypeCountReportsArgs
    promoOrders?: boolean | UserCountOutputTypeCountPromoOrdersArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountListingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFavoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountConversationsBuyerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConversationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountConversationsSellerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConversationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPromoOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionOrderWhereInput
  }


  /**
   * Count Type LocationCountOutputType
   */

  export type LocationCountOutputType = {
    children: number
  }

  export type LocationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    children?: boolean | LocationCountOutputTypeCountChildrenArgs
  }

  // Custom InputTypes
  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationCountOutputType
     */
    select?: LocationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeCountChildrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LocationWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    children: number
    listings: number
    attributeDefs: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    children?: boolean | CategoryCountOutputTypeCountChildrenArgs
    listings?: boolean | CategoryCountOutputTypeCountListingsArgs
    attributeDefs?: boolean | CategoryCountOutputTypeCountAttributeDefsArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountChildrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountListingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountAttributeDefsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingAttributeDefWhereInput
  }


  /**
   * Count Type ListingCountOutputType
   */

  export type ListingCountOutputType = {
    media: number
    attributes: number
    favorites: number
    conversations: number
    promoOrders: number
    adImpressions: number
  }

  export type ListingCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    media?: boolean | ListingCountOutputTypeCountMediaArgs
    attributes?: boolean | ListingCountOutputTypeCountAttributesArgs
    favorites?: boolean | ListingCountOutputTypeCountFavoritesArgs
    conversations?: boolean | ListingCountOutputTypeCountConversationsArgs
    promoOrders?: boolean | ListingCountOutputTypeCountPromoOrdersArgs
    adImpressions?: boolean | ListingCountOutputTypeCountAdImpressionsArgs
  }

  // Custom InputTypes
  /**
   * ListingCountOutputType without action
   */
  export type ListingCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingCountOutputType
     */
    select?: ListingCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ListingCountOutputType without action
   */
  export type ListingCountOutputTypeCountMediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingMediaWhereInput
  }

  /**
   * ListingCountOutputType without action
   */
  export type ListingCountOutputTypeCountAttributesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingAttributeWhereInput
  }

  /**
   * ListingCountOutputType without action
   */
  export type ListingCountOutputTypeCountFavoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
  }

  /**
   * ListingCountOutputType without action
   */
  export type ListingCountOutputTypeCountConversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConversationWhereInput
  }

  /**
   * ListingCountOutputType without action
   */
  export type ListingCountOutputTypeCountPromoOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionOrderWhereInput
  }

  /**
   * ListingCountOutputType without action
   */
  export type ListingCountOutputTypeCountAdImpressionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdImpressionWhereInput
  }


  /**
   * Count Type ListingAttributeDefCountOutputType
   */

  export type ListingAttributeDefCountOutputType = {
    attributes: number
  }

  export type ListingAttributeDefCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attributes?: boolean | ListingAttributeDefCountOutputTypeCountAttributesArgs
  }

  // Custom InputTypes
  /**
   * ListingAttributeDefCountOutputType without action
   */
  export type ListingAttributeDefCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDefCountOutputType
     */
    select?: ListingAttributeDefCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ListingAttributeDefCountOutputType without action
   */
  export type ListingAttributeDefCountOutputTypeCountAttributesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingAttributeWhereInput
  }


  /**
   * Count Type ConversationCountOutputType
   */

  export type ConversationCountOutputType = {
    messages: number
  }

  export type ConversationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    messages?: boolean | ConversationCountOutputTypeCountMessagesArgs
  }

  // Custom InputTypes
  /**
   * ConversationCountOutputType without action
   */
  export type ConversationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversationCountOutputType
     */
    select?: ConversationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ConversationCountOutputType without action
   */
  export type ConversationCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }


  /**
   * Count Type PromotionPlanCountOutputType
   */

  export type PromotionPlanCountOutputType = {
    orders: number
  }

  export type PromotionPlanCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | PromotionPlanCountOutputTypeCountOrdersArgs
  }

  // Custom InputTypes
  /**
   * PromotionPlanCountOutputType without action
   */
  export type PromotionPlanCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlanCountOutputType
     */
    select?: PromotionPlanCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PromotionPlanCountOutputType without action
   */
  export type PromotionPlanCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionOrderWhereInput
  }


  /**
   * Count Type PromotionOrderCountOutputType
   */

  export type PromotionOrderCountOutputType = {
    payments: number
  }

  export type PromotionOrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payments?: boolean | PromotionOrderCountOutputTypeCountPaymentsArgs
  }

  // Custom InputTypes
  /**
   * PromotionOrderCountOutputType without action
   */
  export type PromotionOrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrderCountOutputType
     */
    select?: PromotionOrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PromotionOrderCountOutputType without action
   */
  export type PromotionOrderCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }


  /**
   * Count Type AdSlotCountOutputType
   */

  export type AdSlotCountOutputType = {
    impressions: number
  }

  export type AdSlotCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    impressions?: boolean | AdSlotCountOutputTypeCountImpressionsArgs
  }

  // Custom InputTypes
  /**
   * AdSlotCountOutputType without action
   */
  export type AdSlotCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlotCountOutputType
     */
    select?: AdSlotCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AdSlotCountOutputType without action
   */
  export type AdSlotCountOutputTypeCountImpressionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdImpressionWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    passwordHash: string | null
    isAdmin: boolean | null
    status: $Enums.UserStatus | null
    createdAt: Date | null
    lastLoginAt: Date | null
    deletedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    passwordHash: string | null
    isAdmin: boolean | null
    status: $Enums.UserStatus | null
    createdAt: Date | null
    lastLoginAt: Date | null
    deletedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    passwordHash: number
    isAdmin: number
    status: number
    createdAt: number
    lastLoginAt: number
    deletedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    passwordHash?: true
    isAdmin?: true
    status?: true
    createdAt?: true
    lastLoginAt?: true
    deletedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    passwordHash?: true
    isAdmin?: true
    status?: true
    createdAt?: true
    lastLoginAt?: true
    deletedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    passwordHash?: true
    isAdmin?: true
    status?: true
    createdAt?: true
    lastLoginAt?: true
    deletedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    passwordHash: string
    isAdmin: boolean
    status: $Enums.UserStatus
    createdAt: Date
    lastLoginAt: Date | null
    deletedAt: Date | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    isAdmin?: boolean
    status?: boolean
    createdAt?: boolean
    lastLoginAt?: boolean
    deletedAt?: boolean
    profile?: boolean | User$profileArgs<ExtArgs>
    listings?: boolean | User$listingsArgs<ExtArgs>
    favorites?: boolean | User$favoritesArgs<ExtArgs>
    conversationsBuyer?: boolean | User$conversationsBuyerArgs<ExtArgs>
    conversationsSeller?: boolean | User$conversationsSellerArgs<ExtArgs>
    messages?: boolean | User$messagesArgs<ExtArgs>
    reports?: boolean | User$reportsArgs<ExtArgs>
    promoOrders?: boolean | User$promoOrdersArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    isAdmin?: boolean
    status?: boolean
    createdAt?: boolean
    lastLoginAt?: boolean
    deletedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    isAdmin?: boolean
    status?: boolean
    createdAt?: boolean
    lastLoginAt?: boolean
    deletedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    isAdmin?: boolean
    status?: boolean
    createdAt?: boolean
    lastLoginAt?: boolean
    deletedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "passwordHash" | "isAdmin" | "status" | "createdAt" | "lastLoginAt" | "deletedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profile?: boolean | User$profileArgs<ExtArgs>
    listings?: boolean | User$listingsArgs<ExtArgs>
    favorites?: boolean | User$favoritesArgs<ExtArgs>
    conversationsBuyer?: boolean | User$conversationsBuyerArgs<ExtArgs>
    conversationsSeller?: boolean | User$conversationsSellerArgs<ExtArgs>
    messages?: boolean | User$messagesArgs<ExtArgs>
    reports?: boolean | User$reportsArgs<ExtArgs>
    promoOrders?: boolean | User$promoOrdersArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      profile: Prisma.$UserProfilePayload<ExtArgs> | null
      listings: Prisma.$ListingPayload<ExtArgs>[]
      favorites: Prisma.$FavoritePayload<ExtArgs>[]
      conversationsBuyer: Prisma.$ConversationPayload<ExtArgs>[]
      conversationsSeller: Prisma.$ConversationPayload<ExtArgs>[]
      messages: Prisma.$MessagePayload<ExtArgs>[]
      reports: Prisma.$ReportPayload<ExtArgs>[]
      promoOrders: Prisma.$PromotionOrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      passwordHash: string
      isAdmin: boolean
      status: $Enums.UserStatus
      createdAt: Date
      lastLoginAt: Date | null
      deletedAt: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    profile<T extends User$profileArgs<ExtArgs> = {}>(args?: Subset<T, User$profileArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    listings<T extends User$listingsArgs<ExtArgs> = {}>(args?: Subset<T, User$listingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favorites<T extends User$favoritesArgs<ExtArgs> = {}>(args?: Subset<T, User$favoritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    conversationsBuyer<T extends User$conversationsBuyerArgs<ExtArgs> = {}>(args?: Subset<T, User$conversationsBuyerArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    conversationsSeller<T extends User$conversationsSellerArgs<ExtArgs> = {}>(args?: Subset<T, User$conversationsSellerArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    messages<T extends User$messagesArgs<ExtArgs> = {}>(args?: Subset<T, User$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reports<T extends User$reportsArgs<ExtArgs> = {}>(args?: Subset<T, User$reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    promoOrders<T extends User$promoOrdersArgs<ExtArgs> = {}>(args?: Subset<T, User$promoOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly passwordHash: FieldRef<"User", 'String'>
    readonly isAdmin: FieldRef<"User", 'Boolean'>
    readonly status: FieldRef<"User", 'UserStatus'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly lastLoginAt: FieldRef<"User", 'DateTime'>
    readonly deletedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.profile
   */
  export type User$profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    where?: UserProfileWhereInput
  }

  /**
   * User.listings
   */
  export type User$listingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    where?: ListingWhereInput
    orderBy?: ListingOrderByWithRelationInput | ListingOrderByWithRelationInput[]
    cursor?: ListingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListingScalarFieldEnum | ListingScalarFieldEnum[]
  }

  /**
   * User.favorites
   */
  export type User$favoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    cursor?: FavoriteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * User.conversationsBuyer
   */
  export type User$conversationsBuyerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    where?: ConversationWhereInput
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    cursor?: ConversationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * User.conversationsSeller
   */
  export type User$conversationsSellerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    where?: ConversationWhereInput
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    cursor?: ConversationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * User.messages
   */
  export type User$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * User.reports
   */
  export type User$reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    cursor?: ReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * User.promoOrders
   */
  export type User$promoOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
    where?: PromotionOrderWhereInput
    orderBy?: PromotionOrderOrderByWithRelationInput | PromotionOrderOrderByWithRelationInput[]
    cursor?: PromotionOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionOrderScalarFieldEnum | PromotionOrderScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model UserProfile
   */

  export type AggregateUserProfile = {
    _count: UserProfileCountAggregateOutputType | null
    _min: UserProfileMinAggregateOutputType | null
    _max: UserProfileMaxAggregateOutputType | null
  }

  export type UserProfileMinAggregateOutputType = {
    userId: string | null
    displayName: string | null
    phone: string | null
    avatarUrl: string | null
    about: string | null
    provinceId: string | null
    cityId: string | null
    addressText: string | null
  }

  export type UserProfileMaxAggregateOutputType = {
    userId: string | null
    displayName: string | null
    phone: string | null
    avatarUrl: string | null
    about: string | null
    provinceId: string | null
    cityId: string | null
    addressText: string | null
  }

  export type UserProfileCountAggregateOutputType = {
    userId: number
    displayName: number
    phone: number
    avatarUrl: number
    about: number
    provinceId: number
    cityId: number
    addressText: number
    _all: number
  }


  export type UserProfileMinAggregateInputType = {
    userId?: true
    displayName?: true
    phone?: true
    avatarUrl?: true
    about?: true
    provinceId?: true
    cityId?: true
    addressText?: true
  }

  export type UserProfileMaxAggregateInputType = {
    userId?: true
    displayName?: true
    phone?: true
    avatarUrl?: true
    about?: true
    provinceId?: true
    cityId?: true
    addressText?: true
  }

  export type UserProfileCountAggregateInputType = {
    userId?: true
    displayName?: true
    phone?: true
    avatarUrl?: true
    about?: true
    provinceId?: true
    cityId?: true
    addressText?: true
    _all?: true
  }

  export type UserProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserProfile to aggregate.
     */
    where?: UserProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserProfiles to fetch.
     */
    orderBy?: UserProfileOrderByWithRelationInput | UserProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserProfiles
    **/
    _count?: true | UserProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserProfileMaxAggregateInputType
  }

  export type GetUserProfileAggregateType<T extends UserProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateUserProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserProfile[P]>
      : GetScalarType<T[P], AggregateUserProfile[P]>
  }




  export type UserProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserProfileWhereInput
    orderBy?: UserProfileOrderByWithAggregationInput | UserProfileOrderByWithAggregationInput[]
    by: UserProfileScalarFieldEnum[] | UserProfileScalarFieldEnum
    having?: UserProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserProfileCountAggregateInputType | true
    _min?: UserProfileMinAggregateInputType
    _max?: UserProfileMaxAggregateInputType
  }

  export type UserProfileGroupByOutputType = {
    userId: string
    displayName: string
    phone: string | null
    avatarUrl: string | null
    about: string | null
    provinceId: string | null
    cityId: string | null
    addressText: string | null
    _count: UserProfileCountAggregateOutputType | null
    _min: UserProfileMinAggregateOutputType | null
    _max: UserProfileMaxAggregateOutputType | null
  }

  type GetUserProfileGroupByPayload<T extends UserProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserProfileGroupByOutputType[P]>
            : GetScalarType<T[P], UserProfileGroupByOutputType[P]>
        }
      >
    >


  export type UserProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    displayName?: boolean
    phone?: boolean
    avatarUrl?: boolean
    about?: boolean
    provinceId?: boolean
    cityId?: boolean
    addressText?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userProfile"]>

  export type UserProfileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    displayName?: boolean
    phone?: boolean
    avatarUrl?: boolean
    about?: boolean
    provinceId?: boolean
    cityId?: boolean
    addressText?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userProfile"]>

  export type UserProfileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    displayName?: boolean
    phone?: boolean
    avatarUrl?: boolean
    about?: boolean
    provinceId?: boolean
    cityId?: boolean
    addressText?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userProfile"]>

  export type UserProfileSelectScalar = {
    userId?: boolean
    displayName?: boolean
    phone?: boolean
    avatarUrl?: boolean
    about?: boolean
    provinceId?: boolean
    cityId?: boolean
    addressText?: boolean
  }

  export type UserProfileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"userId" | "displayName" | "phone" | "avatarUrl" | "about" | "provinceId" | "cityId" | "addressText", ExtArgs["result"]["userProfile"]>
  export type UserProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserProfileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserProfileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserProfile"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      userId: string
      displayName: string
      phone: string | null
      avatarUrl: string | null
      about: string | null
      provinceId: string | null
      cityId: string | null
      addressText: string | null
    }, ExtArgs["result"]["userProfile"]>
    composites: {}
  }

  type UserProfileGetPayload<S extends boolean | null | undefined | UserProfileDefaultArgs> = $Result.GetResult<Prisma.$UserProfilePayload, S>

  type UserProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserProfileCountAggregateInputType | true
    }

  export interface UserProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserProfile'], meta: { name: 'UserProfile' } }
    /**
     * Find zero or one UserProfile that matches the filter.
     * @param {UserProfileFindUniqueArgs} args - Arguments to find a UserProfile
     * @example
     * // Get one UserProfile
     * const userProfile = await prisma.userProfile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserProfileFindUniqueArgs>(args: SelectSubset<T, UserProfileFindUniqueArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserProfile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserProfileFindUniqueOrThrowArgs} args - Arguments to find a UserProfile
     * @example
     * // Get one UserProfile
     * const userProfile = await prisma.userProfile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, UserProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserProfile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileFindFirstArgs} args - Arguments to find a UserProfile
     * @example
     * // Get one UserProfile
     * const userProfile = await prisma.userProfile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserProfileFindFirstArgs>(args?: SelectSubset<T, UserProfileFindFirstArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserProfile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileFindFirstOrThrowArgs} args - Arguments to find a UserProfile
     * @example
     * // Get one UserProfile
     * const userProfile = await prisma.userProfile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, UserProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserProfiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserProfiles
     * const userProfiles = await prisma.userProfile.findMany()
     * 
     * // Get first 10 UserProfiles
     * const userProfiles = await prisma.userProfile.findMany({ take: 10 })
     * 
     * // Only select the `userId`
     * const userProfileWithUserIdOnly = await prisma.userProfile.findMany({ select: { userId: true } })
     * 
     */
    findMany<T extends UserProfileFindManyArgs>(args?: SelectSubset<T, UserProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserProfile.
     * @param {UserProfileCreateArgs} args - Arguments to create a UserProfile.
     * @example
     * // Create one UserProfile
     * const UserProfile = await prisma.userProfile.create({
     *   data: {
     *     // ... data to create a UserProfile
     *   }
     * })
     * 
     */
    create<T extends UserProfileCreateArgs>(args: SelectSubset<T, UserProfileCreateArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserProfiles.
     * @param {UserProfileCreateManyArgs} args - Arguments to create many UserProfiles.
     * @example
     * // Create many UserProfiles
     * const userProfile = await prisma.userProfile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserProfileCreateManyArgs>(args?: SelectSubset<T, UserProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserProfiles and returns the data saved in the database.
     * @param {UserProfileCreateManyAndReturnArgs} args - Arguments to create many UserProfiles.
     * @example
     * // Create many UserProfiles
     * const userProfile = await prisma.userProfile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserProfiles and only return the `userId`
     * const userProfileWithUserIdOnly = await prisma.userProfile.createManyAndReturn({
     *   select: { userId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserProfileCreateManyAndReturnArgs>(args?: SelectSubset<T, UserProfileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserProfile.
     * @param {UserProfileDeleteArgs} args - Arguments to delete one UserProfile.
     * @example
     * // Delete one UserProfile
     * const UserProfile = await prisma.userProfile.delete({
     *   where: {
     *     // ... filter to delete one UserProfile
     *   }
     * })
     * 
     */
    delete<T extends UserProfileDeleteArgs>(args: SelectSubset<T, UserProfileDeleteArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserProfile.
     * @param {UserProfileUpdateArgs} args - Arguments to update one UserProfile.
     * @example
     * // Update one UserProfile
     * const userProfile = await prisma.userProfile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserProfileUpdateArgs>(args: SelectSubset<T, UserProfileUpdateArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserProfiles.
     * @param {UserProfileDeleteManyArgs} args - Arguments to filter UserProfiles to delete.
     * @example
     * // Delete a few UserProfiles
     * const { count } = await prisma.userProfile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserProfileDeleteManyArgs>(args?: SelectSubset<T, UserProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserProfiles
     * const userProfile = await prisma.userProfile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserProfileUpdateManyArgs>(args: SelectSubset<T, UserProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserProfiles and returns the data updated in the database.
     * @param {UserProfileUpdateManyAndReturnArgs} args - Arguments to update many UserProfiles.
     * @example
     * // Update many UserProfiles
     * const userProfile = await prisma.userProfile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserProfiles and only return the `userId`
     * const userProfileWithUserIdOnly = await prisma.userProfile.updateManyAndReturn({
     *   select: { userId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserProfileUpdateManyAndReturnArgs>(args: SelectSubset<T, UserProfileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserProfile.
     * @param {UserProfileUpsertArgs} args - Arguments to update or create a UserProfile.
     * @example
     * // Update or create a UserProfile
     * const userProfile = await prisma.userProfile.upsert({
     *   create: {
     *     // ... data to create a UserProfile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserProfile we want to update
     *   }
     * })
     */
    upsert<T extends UserProfileUpsertArgs>(args: SelectSubset<T, UserProfileUpsertArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileCountArgs} args - Arguments to filter UserProfiles to count.
     * @example
     * // Count the number of UserProfiles
     * const count = await prisma.userProfile.count({
     *   where: {
     *     // ... the filter for the UserProfiles we want to count
     *   }
     * })
    **/
    count<T extends UserProfileCountArgs>(
      args?: Subset<T, UserProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserProfileAggregateArgs>(args: Subset<T, UserProfileAggregateArgs>): Prisma.PrismaPromise<GetUserProfileAggregateType<T>>

    /**
     * Group by UserProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserProfileGroupByArgs['orderBy'] }
        : { orderBy?: UserProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserProfile model
   */
  readonly fields: UserProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserProfile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserProfile model
   */
  interface UserProfileFieldRefs {
    readonly userId: FieldRef<"UserProfile", 'String'>
    readonly displayName: FieldRef<"UserProfile", 'String'>
    readonly phone: FieldRef<"UserProfile", 'String'>
    readonly avatarUrl: FieldRef<"UserProfile", 'String'>
    readonly about: FieldRef<"UserProfile", 'String'>
    readonly provinceId: FieldRef<"UserProfile", 'String'>
    readonly cityId: FieldRef<"UserProfile", 'String'>
    readonly addressText: FieldRef<"UserProfile", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UserProfile findUnique
   */
  export type UserProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * Filter, which UserProfile to fetch.
     */
    where: UserProfileWhereUniqueInput
  }

  /**
   * UserProfile findUniqueOrThrow
   */
  export type UserProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * Filter, which UserProfile to fetch.
     */
    where: UserProfileWhereUniqueInput
  }

  /**
   * UserProfile findFirst
   */
  export type UserProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * Filter, which UserProfile to fetch.
     */
    where?: UserProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserProfiles to fetch.
     */
    orderBy?: UserProfileOrderByWithRelationInput | UserProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserProfiles.
     */
    cursor?: UserProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserProfiles.
     */
    distinct?: UserProfileScalarFieldEnum | UserProfileScalarFieldEnum[]
  }

  /**
   * UserProfile findFirstOrThrow
   */
  export type UserProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * Filter, which UserProfile to fetch.
     */
    where?: UserProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserProfiles to fetch.
     */
    orderBy?: UserProfileOrderByWithRelationInput | UserProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserProfiles.
     */
    cursor?: UserProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserProfiles.
     */
    distinct?: UserProfileScalarFieldEnum | UserProfileScalarFieldEnum[]
  }

  /**
   * UserProfile findMany
   */
  export type UserProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * Filter, which UserProfiles to fetch.
     */
    where?: UserProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserProfiles to fetch.
     */
    orderBy?: UserProfileOrderByWithRelationInput | UserProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserProfiles.
     */
    cursor?: UserProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserProfiles.
     */
    skip?: number
    distinct?: UserProfileScalarFieldEnum | UserProfileScalarFieldEnum[]
  }

  /**
   * UserProfile create
   */
  export type UserProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a UserProfile.
     */
    data: XOR<UserProfileCreateInput, UserProfileUncheckedCreateInput>
  }

  /**
   * UserProfile createMany
   */
  export type UserProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserProfiles.
     */
    data: UserProfileCreateManyInput | UserProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserProfile createManyAndReturn
   */
  export type UserProfileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * The data used to create many UserProfiles.
     */
    data: UserProfileCreateManyInput | UserProfileCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserProfile update
   */
  export type UserProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a UserProfile.
     */
    data: XOR<UserProfileUpdateInput, UserProfileUncheckedUpdateInput>
    /**
     * Choose, which UserProfile to update.
     */
    where: UserProfileWhereUniqueInput
  }

  /**
   * UserProfile updateMany
   */
  export type UserProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserProfiles.
     */
    data: XOR<UserProfileUpdateManyMutationInput, UserProfileUncheckedUpdateManyInput>
    /**
     * Filter which UserProfiles to update
     */
    where?: UserProfileWhereInput
    /**
     * Limit how many UserProfiles to update.
     */
    limit?: number
  }

  /**
   * UserProfile updateManyAndReturn
   */
  export type UserProfileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * The data used to update UserProfiles.
     */
    data: XOR<UserProfileUpdateManyMutationInput, UserProfileUncheckedUpdateManyInput>
    /**
     * Filter which UserProfiles to update
     */
    where?: UserProfileWhereInput
    /**
     * Limit how many UserProfiles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserProfile upsert
   */
  export type UserProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the UserProfile to update in case it exists.
     */
    where: UserProfileWhereUniqueInput
    /**
     * In case the UserProfile found by the `where` argument doesn't exist, create a new UserProfile with this data.
     */
    create: XOR<UserProfileCreateInput, UserProfileUncheckedCreateInput>
    /**
     * In case the UserProfile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserProfileUpdateInput, UserProfileUncheckedUpdateInput>
  }

  /**
   * UserProfile delete
   */
  export type UserProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * Filter which UserProfile to delete.
     */
    where: UserProfileWhereUniqueInput
  }

  /**
   * UserProfile deleteMany
   */
  export type UserProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserProfiles to delete
     */
    where?: UserProfileWhereInput
    /**
     * Limit how many UserProfiles to delete.
     */
    limit?: number
  }

  /**
   * UserProfile without action
   */
  export type UserProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
  }


  /**
   * Model Location
   */

  export type AggregateLocation = {
    _count: LocationCountAggregateOutputType | null
    _min: LocationMinAggregateOutputType | null
    _max: LocationMaxAggregateOutputType | null
  }

  export type LocationMinAggregateOutputType = {
    id: string | null
    country: string | null
    name: string | null
    slug: string | null
    parentId: string | null
    createdAt: Date | null
  }

  export type LocationMaxAggregateOutputType = {
    id: string | null
    country: string | null
    name: string | null
    slug: string | null
    parentId: string | null
    createdAt: Date | null
  }

  export type LocationCountAggregateOutputType = {
    id: number
    country: number
    name: number
    slug: number
    parentId: number
    createdAt: number
    _all: number
  }


  export type LocationMinAggregateInputType = {
    id?: true
    country?: true
    name?: true
    slug?: true
    parentId?: true
    createdAt?: true
  }

  export type LocationMaxAggregateInputType = {
    id?: true
    country?: true
    name?: true
    slug?: true
    parentId?: true
    createdAt?: true
  }

  export type LocationCountAggregateInputType = {
    id?: true
    country?: true
    name?: true
    slug?: true
    parentId?: true
    createdAt?: true
    _all?: true
  }

  export type LocationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Location to aggregate.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Locations
    **/
    _count?: true | LocationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LocationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LocationMaxAggregateInputType
  }

  export type GetLocationAggregateType<T extends LocationAggregateArgs> = {
        [P in keyof T & keyof AggregateLocation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLocation[P]>
      : GetScalarType<T[P], AggregateLocation[P]>
  }




  export type LocationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LocationWhereInput
    orderBy?: LocationOrderByWithAggregationInput | LocationOrderByWithAggregationInput[]
    by: LocationScalarFieldEnum[] | LocationScalarFieldEnum
    having?: LocationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LocationCountAggregateInputType | true
    _min?: LocationMinAggregateInputType
    _max?: LocationMaxAggregateInputType
  }

  export type LocationGroupByOutputType = {
    id: string
    country: string
    name: string
    slug: string
    parentId: string | null
    createdAt: Date
    _count: LocationCountAggregateOutputType | null
    _min: LocationMinAggregateOutputType | null
    _max: LocationMaxAggregateOutputType | null
  }

  type GetLocationGroupByPayload<T extends LocationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LocationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LocationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LocationGroupByOutputType[P]>
            : GetScalarType<T[P], LocationGroupByOutputType[P]>
        }
      >
    >


  export type LocationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    country?: boolean
    name?: boolean
    slug?: boolean
    parentId?: boolean
    createdAt?: boolean
    parent?: boolean | Location$parentArgs<ExtArgs>
    children?: boolean | Location$childrenArgs<ExtArgs>
    _count?: boolean | LocationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["location"]>

  export type LocationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    country?: boolean
    name?: boolean
    slug?: boolean
    parentId?: boolean
    createdAt?: boolean
    parent?: boolean | Location$parentArgs<ExtArgs>
  }, ExtArgs["result"]["location"]>

  export type LocationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    country?: boolean
    name?: boolean
    slug?: boolean
    parentId?: boolean
    createdAt?: boolean
    parent?: boolean | Location$parentArgs<ExtArgs>
  }, ExtArgs["result"]["location"]>

  export type LocationSelectScalar = {
    id?: boolean
    country?: boolean
    name?: boolean
    slug?: boolean
    parentId?: boolean
    createdAt?: boolean
  }

  export type LocationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "country" | "name" | "slug" | "parentId" | "createdAt", ExtArgs["result"]["location"]>
  export type LocationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Location$parentArgs<ExtArgs>
    children?: boolean | Location$childrenArgs<ExtArgs>
    _count?: boolean | LocationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LocationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Location$parentArgs<ExtArgs>
  }
  export type LocationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Location$parentArgs<ExtArgs>
  }

  export type $LocationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Location"
    objects: {
      parent: Prisma.$LocationPayload<ExtArgs> | null
      children: Prisma.$LocationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      country: string
      name: string
      slug: string
      parentId: string | null
      createdAt: Date
    }, ExtArgs["result"]["location"]>
    composites: {}
  }

  type LocationGetPayload<S extends boolean | null | undefined | LocationDefaultArgs> = $Result.GetResult<Prisma.$LocationPayload, S>

  type LocationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LocationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LocationCountAggregateInputType | true
    }

  export interface LocationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Location'], meta: { name: 'Location' } }
    /**
     * Find zero or one Location that matches the filter.
     * @param {LocationFindUniqueArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LocationFindUniqueArgs>(args: SelectSubset<T, LocationFindUniqueArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Location that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LocationFindUniqueOrThrowArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LocationFindUniqueOrThrowArgs>(args: SelectSubset<T, LocationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Location that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindFirstArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LocationFindFirstArgs>(args?: SelectSubset<T, LocationFindFirstArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Location that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindFirstOrThrowArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LocationFindFirstOrThrowArgs>(args?: SelectSubset<T, LocationFindFirstOrThrowArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Locations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Locations
     * const locations = await prisma.location.findMany()
     * 
     * // Get first 10 Locations
     * const locations = await prisma.location.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const locationWithIdOnly = await prisma.location.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LocationFindManyArgs>(args?: SelectSubset<T, LocationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Location.
     * @param {LocationCreateArgs} args - Arguments to create a Location.
     * @example
     * // Create one Location
     * const Location = await prisma.location.create({
     *   data: {
     *     // ... data to create a Location
     *   }
     * })
     * 
     */
    create<T extends LocationCreateArgs>(args: SelectSubset<T, LocationCreateArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Locations.
     * @param {LocationCreateManyArgs} args - Arguments to create many Locations.
     * @example
     * // Create many Locations
     * const location = await prisma.location.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LocationCreateManyArgs>(args?: SelectSubset<T, LocationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Locations and returns the data saved in the database.
     * @param {LocationCreateManyAndReturnArgs} args - Arguments to create many Locations.
     * @example
     * // Create many Locations
     * const location = await prisma.location.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Locations and only return the `id`
     * const locationWithIdOnly = await prisma.location.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LocationCreateManyAndReturnArgs>(args?: SelectSubset<T, LocationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Location.
     * @param {LocationDeleteArgs} args - Arguments to delete one Location.
     * @example
     * // Delete one Location
     * const Location = await prisma.location.delete({
     *   where: {
     *     // ... filter to delete one Location
     *   }
     * })
     * 
     */
    delete<T extends LocationDeleteArgs>(args: SelectSubset<T, LocationDeleteArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Location.
     * @param {LocationUpdateArgs} args - Arguments to update one Location.
     * @example
     * // Update one Location
     * const location = await prisma.location.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LocationUpdateArgs>(args: SelectSubset<T, LocationUpdateArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Locations.
     * @param {LocationDeleteManyArgs} args - Arguments to filter Locations to delete.
     * @example
     * // Delete a few Locations
     * const { count } = await prisma.location.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LocationDeleteManyArgs>(args?: SelectSubset<T, LocationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Locations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Locations
     * const location = await prisma.location.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LocationUpdateManyArgs>(args: SelectSubset<T, LocationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Locations and returns the data updated in the database.
     * @param {LocationUpdateManyAndReturnArgs} args - Arguments to update many Locations.
     * @example
     * // Update many Locations
     * const location = await prisma.location.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Locations and only return the `id`
     * const locationWithIdOnly = await prisma.location.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LocationUpdateManyAndReturnArgs>(args: SelectSubset<T, LocationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Location.
     * @param {LocationUpsertArgs} args - Arguments to update or create a Location.
     * @example
     * // Update or create a Location
     * const location = await prisma.location.upsert({
     *   create: {
     *     // ... data to create a Location
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Location we want to update
     *   }
     * })
     */
    upsert<T extends LocationUpsertArgs>(args: SelectSubset<T, LocationUpsertArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Locations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationCountArgs} args - Arguments to filter Locations to count.
     * @example
     * // Count the number of Locations
     * const count = await prisma.location.count({
     *   where: {
     *     // ... the filter for the Locations we want to count
     *   }
     * })
    **/
    count<T extends LocationCountArgs>(
      args?: Subset<T, LocationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LocationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Location.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LocationAggregateArgs>(args: Subset<T, LocationAggregateArgs>): Prisma.PrismaPromise<GetLocationAggregateType<T>>

    /**
     * Group by Location.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LocationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LocationGroupByArgs['orderBy'] }
        : { orderBy?: LocationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LocationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLocationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Location model
   */
  readonly fields: LocationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Location.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LocationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parent<T extends Location$parentArgs<ExtArgs> = {}>(args?: Subset<T, Location$parentArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    children<T extends Location$childrenArgs<ExtArgs> = {}>(args?: Subset<T, Location$childrenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Location model
   */
  interface LocationFieldRefs {
    readonly id: FieldRef<"Location", 'String'>
    readonly country: FieldRef<"Location", 'String'>
    readonly name: FieldRef<"Location", 'String'>
    readonly slug: FieldRef<"Location", 'String'>
    readonly parentId: FieldRef<"Location", 'String'>
    readonly createdAt: FieldRef<"Location", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Location findUnique
   */
  export type LocationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location findUniqueOrThrow
   */
  export type LocationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location findFirst
   */
  export type LocationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Locations.
     */
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location findFirstOrThrow
   */
  export type LocationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Locations.
     */
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location findMany
   */
  export type LocationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Locations to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location create
   */
  export type LocationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The data needed to create a Location.
     */
    data: XOR<LocationCreateInput, LocationUncheckedCreateInput>
  }

  /**
   * Location createMany
   */
  export type LocationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Locations.
     */
    data: LocationCreateManyInput | LocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Location createManyAndReturn
   */
  export type LocationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * The data used to create many Locations.
     */
    data: LocationCreateManyInput | LocationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Location update
   */
  export type LocationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The data needed to update a Location.
     */
    data: XOR<LocationUpdateInput, LocationUncheckedUpdateInput>
    /**
     * Choose, which Location to update.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location updateMany
   */
  export type LocationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Locations.
     */
    data: XOR<LocationUpdateManyMutationInput, LocationUncheckedUpdateManyInput>
    /**
     * Filter which Locations to update
     */
    where?: LocationWhereInput
    /**
     * Limit how many Locations to update.
     */
    limit?: number
  }

  /**
   * Location updateManyAndReturn
   */
  export type LocationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * The data used to update Locations.
     */
    data: XOR<LocationUpdateManyMutationInput, LocationUncheckedUpdateManyInput>
    /**
     * Filter which Locations to update
     */
    where?: LocationWhereInput
    /**
     * Limit how many Locations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Location upsert
   */
  export type LocationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The filter to search for the Location to update in case it exists.
     */
    where: LocationWhereUniqueInput
    /**
     * In case the Location found by the `where` argument doesn't exist, create a new Location with this data.
     */
    create: XOR<LocationCreateInput, LocationUncheckedCreateInput>
    /**
     * In case the Location was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LocationUpdateInput, LocationUncheckedUpdateInput>
  }

  /**
   * Location delete
   */
  export type LocationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter which Location to delete.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location deleteMany
   */
  export type LocationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Locations to delete
     */
    where?: LocationWhereInput
    /**
     * Limit how many Locations to delete.
     */
    limit?: number
  }

  /**
   * Location.parent
   */
  export type Location$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    where?: LocationWhereInput
  }

  /**
   * Location.children
   */
  export type Location$childrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    where?: LocationWhereInput
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    cursor?: LocationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location without action
   */
  export type LocationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Location
     */
    omit?: LocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryAvgAggregateOutputType = {
    level: number | null
    sortOrder: number | null
  }

  export type CategorySumAggregateOutputType = {
    level: number | null
    sortOrder: number | null
  }

  export type CategoryMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    parentId: string | null
    level: number | null
    isActive: boolean | null
    sortOrder: number | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    parentId: string | null
    level: number | null
    isActive: boolean | null
    sortOrder: number | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    parentId: number
    level: number
    isActive: number
    sortOrder: number
    _all: number
  }


  export type CategoryAvgAggregateInputType = {
    level?: true
    sortOrder?: true
  }

  export type CategorySumAggregateInputType = {
    level?: true
    sortOrder?: true
  }

  export type CategoryMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    parentId?: true
    level?: true
    isActive?: true
    sortOrder?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    parentId?: true
    level?: true
    isActive?: true
    sortOrder?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    parentId?: true
    level?: true
    isActive?: true
    sortOrder?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _avg?: CategoryAvgAggregateInputType
    _sum?: CategorySumAggregateInputType
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: string
    name: string
    slug: string
    parentId: string | null
    level: number
    isActive: boolean
    sortOrder: number
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    parentId?: boolean
    level?: boolean
    isActive?: boolean
    sortOrder?: boolean
    parent?: boolean | Category$parentArgs<ExtArgs>
    children?: boolean | Category$childrenArgs<ExtArgs>
    listings?: boolean | Category$listingsArgs<ExtArgs>
    attributeDefs?: boolean | Category$attributeDefsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    parentId?: boolean
    level?: boolean
    isActive?: boolean
    sortOrder?: boolean
    parent?: boolean | Category$parentArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    parentId?: boolean
    level?: boolean
    isActive?: boolean
    sortOrder?: boolean
    parent?: boolean | Category$parentArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    parentId?: boolean
    level?: boolean
    isActive?: boolean
    sortOrder?: boolean
  }

  export type CategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "slug" | "parentId" | "level" | "isActive" | "sortOrder", ExtArgs["result"]["category"]>
  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Category$parentArgs<ExtArgs>
    children?: boolean | Category$childrenArgs<ExtArgs>
    listings?: boolean | Category$listingsArgs<ExtArgs>
    attributeDefs?: boolean | Category$attributeDefsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Category$parentArgs<ExtArgs>
  }
  export type CategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Category$parentArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      parent: Prisma.$CategoryPayload<ExtArgs> | null
      children: Prisma.$CategoryPayload<ExtArgs>[]
      listings: Prisma.$ListingPayload<ExtArgs>[]
      attributeDefs: Prisma.$ListingAttributeDefPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      parentId: string | null
      level: number
      isActive: boolean
      sortOrder: number
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categories and returns the data saved in the database.
     * @param {CategoryCreateManyAndReturnArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories and returns the data updated in the database.
     * @param {CategoryUpdateManyAndReturnArgs} args - Arguments to update many Categories.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parent<T extends Category$parentArgs<ExtArgs> = {}>(args?: Subset<T, Category$parentArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    children<T extends Category$childrenArgs<ExtArgs> = {}>(args?: Subset<T, Category$childrenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    listings<T extends Category$listingsArgs<ExtArgs> = {}>(args?: Subset<T, Category$listingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    attributeDefs<T extends Category$attributeDefsArgs<ExtArgs> = {}>(args?: Subset<T, Category$attributeDefsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'String'>
    readonly name: FieldRef<"Category", 'String'>
    readonly slug: FieldRef<"Category", 'String'>
    readonly parentId: FieldRef<"Category", 'String'>
    readonly level: FieldRef<"Category", 'Int'>
    readonly isActive: FieldRef<"Category", 'Boolean'>
    readonly sortOrder: FieldRef<"Category", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category createManyAndReturn
   */
  export type CategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category updateManyAndReturn
   */
  export type CategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to delete.
     */
    limit?: number
  }

  /**
   * Category.parent
   */
  export type Category$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Category.children
   */
  export type Category$childrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category.listings
   */
  export type Category$listingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    where?: ListingWhereInput
    orderBy?: ListingOrderByWithRelationInput | ListingOrderByWithRelationInput[]
    cursor?: ListingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListingScalarFieldEnum | ListingScalarFieldEnum[]
  }

  /**
   * Category.attributeDefs
   */
  export type Category$attributeDefsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefInclude<ExtArgs> | null
    where?: ListingAttributeDefWhereInput
    orderBy?: ListingAttributeDefOrderByWithRelationInput | ListingAttributeDefOrderByWithRelationInput[]
    cursor?: ListingAttributeDefWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListingAttributeDefScalarFieldEnum | ListingAttributeDefScalarFieldEnum[]
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model Listing
   */

  export type AggregateListing = {
    _count: ListingCountAggregateOutputType | null
    _avg: ListingAvgAggregateOutputType | null
    _sum: ListingSumAggregateOutputType | null
    _min: ListingMinAggregateOutputType | null
    _max: ListingMaxAggregateOutputType | null
  }

  export type ListingAvgAggregateOutputType = {
    priceAmount: Decimal | null
    quantity: number | null
    viewsCount: number | null
    favoritesCount: number | null
    contactsCount: number | null
  }

  export type ListingSumAggregateOutputType = {
    priceAmount: Decimal | null
    quantity: number | null
    viewsCount: number | null
    favoritesCount: number | null
    contactsCount: number | null
  }

  export type ListingMinAggregateOutputType = {
    id: string | null
    sellerId: string | null
    categoryId: string | null
    title: string | null
    description: string | null
    priceAmount: Decimal | null
    currency: string | null
    condition: $Enums.Condition | null
    quantity: number | null
    status: $Enums.ListingStatus | null
    provinceId: string | null
    cityId: string | null
    viewsCount: number | null
    favoritesCount: number | null
    contactsCount: number | null
    promotedUntil: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    publishedAt: Date | null
    expiresAt: Date | null
    deletedAt: Date | null
  }

  export type ListingMaxAggregateOutputType = {
    id: string | null
    sellerId: string | null
    categoryId: string | null
    title: string | null
    description: string | null
    priceAmount: Decimal | null
    currency: string | null
    condition: $Enums.Condition | null
    quantity: number | null
    status: $Enums.ListingStatus | null
    provinceId: string | null
    cityId: string | null
    viewsCount: number | null
    favoritesCount: number | null
    contactsCount: number | null
    promotedUntil: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    publishedAt: Date | null
    expiresAt: Date | null
    deletedAt: Date | null
  }

  export type ListingCountAggregateOutputType = {
    id: number
    sellerId: number
    categoryId: number
    title: number
    description: number
    priceAmount: number
    currency: number
    condition: number
    quantity: number
    status: number
    provinceId: number
    cityId: number
    viewsCount: number
    favoritesCount: number
    contactsCount: number
    promotedUntil: number
    createdAt: number
    updatedAt: number
    publishedAt: number
    expiresAt: number
    deletedAt: number
    _all: number
  }


  export type ListingAvgAggregateInputType = {
    priceAmount?: true
    quantity?: true
    viewsCount?: true
    favoritesCount?: true
    contactsCount?: true
  }

  export type ListingSumAggregateInputType = {
    priceAmount?: true
    quantity?: true
    viewsCount?: true
    favoritesCount?: true
    contactsCount?: true
  }

  export type ListingMinAggregateInputType = {
    id?: true
    sellerId?: true
    categoryId?: true
    title?: true
    description?: true
    priceAmount?: true
    currency?: true
    condition?: true
    quantity?: true
    status?: true
    provinceId?: true
    cityId?: true
    viewsCount?: true
    favoritesCount?: true
    contactsCount?: true
    promotedUntil?: true
    createdAt?: true
    updatedAt?: true
    publishedAt?: true
    expiresAt?: true
    deletedAt?: true
  }

  export type ListingMaxAggregateInputType = {
    id?: true
    sellerId?: true
    categoryId?: true
    title?: true
    description?: true
    priceAmount?: true
    currency?: true
    condition?: true
    quantity?: true
    status?: true
    provinceId?: true
    cityId?: true
    viewsCount?: true
    favoritesCount?: true
    contactsCount?: true
    promotedUntil?: true
    createdAt?: true
    updatedAt?: true
    publishedAt?: true
    expiresAt?: true
    deletedAt?: true
  }

  export type ListingCountAggregateInputType = {
    id?: true
    sellerId?: true
    categoryId?: true
    title?: true
    description?: true
    priceAmount?: true
    currency?: true
    condition?: true
    quantity?: true
    status?: true
    provinceId?: true
    cityId?: true
    viewsCount?: true
    favoritesCount?: true
    contactsCount?: true
    promotedUntil?: true
    createdAt?: true
    updatedAt?: true
    publishedAt?: true
    expiresAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ListingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Listing to aggregate.
     */
    where?: ListingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Listings to fetch.
     */
    orderBy?: ListingOrderByWithRelationInput | ListingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Listings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Listings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Listings
    **/
    _count?: true | ListingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ListingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ListingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListingMaxAggregateInputType
  }

  export type GetListingAggregateType<T extends ListingAggregateArgs> = {
        [P in keyof T & keyof AggregateListing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListing[P]>
      : GetScalarType<T[P], AggregateListing[P]>
  }




  export type ListingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingWhereInput
    orderBy?: ListingOrderByWithAggregationInput | ListingOrderByWithAggregationInput[]
    by: ListingScalarFieldEnum[] | ListingScalarFieldEnum
    having?: ListingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListingCountAggregateInputType | true
    _avg?: ListingAvgAggregateInputType
    _sum?: ListingSumAggregateInputType
    _min?: ListingMinAggregateInputType
    _max?: ListingMaxAggregateInputType
  }

  export type ListingGroupByOutputType = {
    id: string
    sellerId: string
    categoryId: string
    title: string
    description: string | null
    priceAmount: Decimal
    currency: string
    condition: $Enums.Condition
    quantity: number
    status: $Enums.ListingStatus
    provinceId: string | null
    cityId: string | null
    viewsCount: number
    favoritesCount: number
    contactsCount: number
    promotedUntil: Date | null
    createdAt: Date
    updatedAt: Date
    publishedAt: Date | null
    expiresAt: Date | null
    deletedAt: Date | null
    _count: ListingCountAggregateOutputType | null
    _avg: ListingAvgAggregateOutputType | null
    _sum: ListingSumAggregateOutputType | null
    _min: ListingMinAggregateOutputType | null
    _max: ListingMaxAggregateOutputType | null
  }

  type GetListingGroupByPayload<T extends ListingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListingGroupByOutputType[P]>
            : GetScalarType<T[P], ListingGroupByOutputType[P]>
        }
      >
    >


  export type ListingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sellerId?: boolean
    categoryId?: boolean
    title?: boolean
    description?: boolean
    priceAmount?: boolean
    currency?: boolean
    condition?: boolean
    quantity?: boolean
    status?: boolean
    provinceId?: boolean
    cityId?: boolean
    viewsCount?: boolean
    favoritesCount?: boolean
    contactsCount?: boolean
    promotedUntil?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    publishedAt?: boolean
    expiresAt?: boolean
    deletedAt?: boolean
    seller?: boolean | UserDefaultArgs<ExtArgs>
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    media?: boolean | Listing$mediaArgs<ExtArgs>
    attributes?: boolean | Listing$attributesArgs<ExtArgs>
    favorites?: boolean | Listing$favoritesArgs<ExtArgs>
    conversations?: boolean | Listing$conversationsArgs<ExtArgs>
    promoOrders?: boolean | Listing$promoOrdersArgs<ExtArgs>
    adImpressions?: boolean | Listing$adImpressionsArgs<ExtArgs>
    _count?: boolean | ListingCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listing"]>

  export type ListingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sellerId?: boolean
    categoryId?: boolean
    title?: boolean
    description?: boolean
    priceAmount?: boolean
    currency?: boolean
    condition?: boolean
    quantity?: boolean
    status?: boolean
    provinceId?: boolean
    cityId?: boolean
    viewsCount?: boolean
    favoritesCount?: boolean
    contactsCount?: boolean
    promotedUntil?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    publishedAt?: boolean
    expiresAt?: boolean
    deletedAt?: boolean
    seller?: boolean | UserDefaultArgs<ExtArgs>
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listing"]>

  export type ListingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sellerId?: boolean
    categoryId?: boolean
    title?: boolean
    description?: boolean
    priceAmount?: boolean
    currency?: boolean
    condition?: boolean
    quantity?: boolean
    status?: boolean
    provinceId?: boolean
    cityId?: boolean
    viewsCount?: boolean
    favoritesCount?: boolean
    contactsCount?: boolean
    promotedUntil?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    publishedAt?: boolean
    expiresAt?: boolean
    deletedAt?: boolean
    seller?: boolean | UserDefaultArgs<ExtArgs>
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listing"]>

  export type ListingSelectScalar = {
    id?: boolean
    sellerId?: boolean
    categoryId?: boolean
    title?: boolean
    description?: boolean
    priceAmount?: boolean
    currency?: boolean
    condition?: boolean
    quantity?: boolean
    status?: boolean
    provinceId?: boolean
    cityId?: boolean
    viewsCount?: boolean
    favoritesCount?: boolean
    contactsCount?: boolean
    promotedUntil?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    publishedAt?: boolean
    expiresAt?: boolean
    deletedAt?: boolean
  }

  export type ListingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sellerId" | "categoryId" | "title" | "description" | "priceAmount" | "currency" | "condition" | "quantity" | "status" | "provinceId" | "cityId" | "viewsCount" | "favoritesCount" | "contactsCount" | "promotedUntil" | "createdAt" | "updatedAt" | "publishedAt" | "expiresAt" | "deletedAt", ExtArgs["result"]["listing"]>
  export type ListingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    seller?: boolean | UserDefaultArgs<ExtArgs>
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    media?: boolean | Listing$mediaArgs<ExtArgs>
    attributes?: boolean | Listing$attributesArgs<ExtArgs>
    favorites?: boolean | Listing$favoritesArgs<ExtArgs>
    conversations?: boolean | Listing$conversationsArgs<ExtArgs>
    promoOrders?: boolean | Listing$promoOrdersArgs<ExtArgs>
    adImpressions?: boolean | Listing$adImpressionsArgs<ExtArgs>
    _count?: boolean | ListingCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ListingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    seller?: boolean | UserDefaultArgs<ExtArgs>
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }
  export type ListingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    seller?: boolean | UserDefaultArgs<ExtArgs>
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }

  export type $ListingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Listing"
    objects: {
      seller: Prisma.$UserPayload<ExtArgs>
      category: Prisma.$CategoryPayload<ExtArgs>
      media: Prisma.$ListingMediaPayload<ExtArgs>[]
      attributes: Prisma.$ListingAttributePayload<ExtArgs>[]
      favorites: Prisma.$FavoritePayload<ExtArgs>[]
      conversations: Prisma.$ConversationPayload<ExtArgs>[]
      promoOrders: Prisma.$PromotionOrderPayload<ExtArgs>[]
      adImpressions: Prisma.$AdImpressionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sellerId: string
      categoryId: string
      title: string
      description: string | null
      priceAmount: Prisma.Decimal
      currency: string
      condition: $Enums.Condition
      quantity: number
      status: $Enums.ListingStatus
      provinceId: string | null
      cityId: string | null
      viewsCount: number
      favoritesCount: number
      contactsCount: number
      promotedUntil: Date | null
      createdAt: Date
      updatedAt: Date
      publishedAt: Date | null
      expiresAt: Date | null
      deletedAt: Date | null
    }, ExtArgs["result"]["listing"]>
    composites: {}
  }

  type ListingGetPayload<S extends boolean | null | undefined | ListingDefaultArgs> = $Result.GetResult<Prisma.$ListingPayload, S>

  type ListingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListingCountAggregateInputType | true
    }

  export interface ListingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Listing'], meta: { name: 'Listing' } }
    /**
     * Find zero or one Listing that matches the filter.
     * @param {ListingFindUniqueArgs} args - Arguments to find a Listing
     * @example
     * // Get one Listing
     * const listing = await prisma.listing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListingFindUniqueArgs>(args: SelectSubset<T, ListingFindUniqueArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Listing that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListingFindUniqueOrThrowArgs} args - Arguments to find a Listing
     * @example
     * // Get one Listing
     * const listing = await prisma.listing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListingFindUniqueOrThrowArgs>(args: SelectSubset<T, ListingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Listing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingFindFirstArgs} args - Arguments to find a Listing
     * @example
     * // Get one Listing
     * const listing = await prisma.listing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListingFindFirstArgs>(args?: SelectSubset<T, ListingFindFirstArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Listing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingFindFirstOrThrowArgs} args - Arguments to find a Listing
     * @example
     * // Get one Listing
     * const listing = await prisma.listing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListingFindFirstOrThrowArgs>(args?: SelectSubset<T, ListingFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Listings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Listings
     * const listings = await prisma.listing.findMany()
     * 
     * // Get first 10 Listings
     * const listings = await prisma.listing.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const listingWithIdOnly = await prisma.listing.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ListingFindManyArgs>(args?: SelectSubset<T, ListingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Listing.
     * @param {ListingCreateArgs} args - Arguments to create a Listing.
     * @example
     * // Create one Listing
     * const Listing = await prisma.listing.create({
     *   data: {
     *     // ... data to create a Listing
     *   }
     * })
     * 
     */
    create<T extends ListingCreateArgs>(args: SelectSubset<T, ListingCreateArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Listings.
     * @param {ListingCreateManyArgs} args - Arguments to create many Listings.
     * @example
     * // Create many Listings
     * const listing = await prisma.listing.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListingCreateManyArgs>(args?: SelectSubset<T, ListingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Listings and returns the data saved in the database.
     * @param {ListingCreateManyAndReturnArgs} args - Arguments to create many Listings.
     * @example
     * // Create many Listings
     * const listing = await prisma.listing.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Listings and only return the `id`
     * const listingWithIdOnly = await prisma.listing.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListingCreateManyAndReturnArgs>(args?: SelectSubset<T, ListingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Listing.
     * @param {ListingDeleteArgs} args - Arguments to delete one Listing.
     * @example
     * // Delete one Listing
     * const Listing = await prisma.listing.delete({
     *   where: {
     *     // ... filter to delete one Listing
     *   }
     * })
     * 
     */
    delete<T extends ListingDeleteArgs>(args: SelectSubset<T, ListingDeleteArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Listing.
     * @param {ListingUpdateArgs} args - Arguments to update one Listing.
     * @example
     * // Update one Listing
     * const listing = await prisma.listing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListingUpdateArgs>(args: SelectSubset<T, ListingUpdateArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Listings.
     * @param {ListingDeleteManyArgs} args - Arguments to filter Listings to delete.
     * @example
     * // Delete a few Listings
     * const { count } = await prisma.listing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListingDeleteManyArgs>(args?: SelectSubset<T, ListingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Listings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Listings
     * const listing = await prisma.listing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListingUpdateManyArgs>(args: SelectSubset<T, ListingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Listings and returns the data updated in the database.
     * @param {ListingUpdateManyAndReturnArgs} args - Arguments to update many Listings.
     * @example
     * // Update many Listings
     * const listing = await prisma.listing.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Listings and only return the `id`
     * const listingWithIdOnly = await prisma.listing.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListingUpdateManyAndReturnArgs>(args: SelectSubset<T, ListingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Listing.
     * @param {ListingUpsertArgs} args - Arguments to update or create a Listing.
     * @example
     * // Update or create a Listing
     * const listing = await prisma.listing.upsert({
     *   create: {
     *     // ... data to create a Listing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Listing we want to update
     *   }
     * })
     */
    upsert<T extends ListingUpsertArgs>(args: SelectSubset<T, ListingUpsertArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Listings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingCountArgs} args - Arguments to filter Listings to count.
     * @example
     * // Count the number of Listings
     * const count = await prisma.listing.count({
     *   where: {
     *     // ... the filter for the Listings we want to count
     *   }
     * })
    **/
    count<T extends ListingCountArgs>(
      args?: Subset<T, ListingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Listing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListingAggregateArgs>(args: Subset<T, ListingAggregateArgs>): Prisma.PrismaPromise<GetListingAggregateType<T>>

    /**
     * Group by Listing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListingGroupByArgs['orderBy'] }
        : { orderBy?: ListingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Listing model
   */
  readonly fields: ListingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Listing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    seller<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    media<T extends Listing$mediaArgs<ExtArgs> = {}>(args?: Subset<T, Listing$mediaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingMediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    attributes<T extends Listing$attributesArgs<ExtArgs> = {}>(args?: Subset<T, Listing$attributesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favorites<T extends Listing$favoritesArgs<ExtArgs> = {}>(args?: Subset<T, Listing$favoritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    conversations<T extends Listing$conversationsArgs<ExtArgs> = {}>(args?: Subset<T, Listing$conversationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    promoOrders<T extends Listing$promoOrdersArgs<ExtArgs> = {}>(args?: Subset<T, Listing$promoOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    adImpressions<T extends Listing$adImpressionsArgs<ExtArgs> = {}>(args?: Subset<T, Listing$adImpressionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Listing model
   */
  interface ListingFieldRefs {
    readonly id: FieldRef<"Listing", 'String'>
    readonly sellerId: FieldRef<"Listing", 'String'>
    readonly categoryId: FieldRef<"Listing", 'String'>
    readonly title: FieldRef<"Listing", 'String'>
    readonly description: FieldRef<"Listing", 'String'>
    readonly priceAmount: FieldRef<"Listing", 'Decimal'>
    readonly currency: FieldRef<"Listing", 'String'>
    readonly condition: FieldRef<"Listing", 'Condition'>
    readonly quantity: FieldRef<"Listing", 'Int'>
    readonly status: FieldRef<"Listing", 'ListingStatus'>
    readonly provinceId: FieldRef<"Listing", 'String'>
    readonly cityId: FieldRef<"Listing", 'String'>
    readonly viewsCount: FieldRef<"Listing", 'Int'>
    readonly favoritesCount: FieldRef<"Listing", 'Int'>
    readonly contactsCount: FieldRef<"Listing", 'Int'>
    readonly promotedUntil: FieldRef<"Listing", 'DateTime'>
    readonly createdAt: FieldRef<"Listing", 'DateTime'>
    readonly updatedAt: FieldRef<"Listing", 'DateTime'>
    readonly publishedAt: FieldRef<"Listing", 'DateTime'>
    readonly expiresAt: FieldRef<"Listing", 'DateTime'>
    readonly deletedAt: FieldRef<"Listing", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Listing findUnique
   */
  export type ListingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * Filter, which Listing to fetch.
     */
    where: ListingWhereUniqueInput
  }

  /**
   * Listing findUniqueOrThrow
   */
  export type ListingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * Filter, which Listing to fetch.
     */
    where: ListingWhereUniqueInput
  }

  /**
   * Listing findFirst
   */
  export type ListingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * Filter, which Listing to fetch.
     */
    where?: ListingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Listings to fetch.
     */
    orderBy?: ListingOrderByWithRelationInput | ListingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Listings.
     */
    cursor?: ListingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Listings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Listings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Listings.
     */
    distinct?: ListingScalarFieldEnum | ListingScalarFieldEnum[]
  }

  /**
   * Listing findFirstOrThrow
   */
  export type ListingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * Filter, which Listing to fetch.
     */
    where?: ListingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Listings to fetch.
     */
    orderBy?: ListingOrderByWithRelationInput | ListingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Listings.
     */
    cursor?: ListingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Listings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Listings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Listings.
     */
    distinct?: ListingScalarFieldEnum | ListingScalarFieldEnum[]
  }

  /**
   * Listing findMany
   */
  export type ListingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * Filter, which Listings to fetch.
     */
    where?: ListingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Listings to fetch.
     */
    orderBy?: ListingOrderByWithRelationInput | ListingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Listings.
     */
    cursor?: ListingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Listings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Listings.
     */
    skip?: number
    distinct?: ListingScalarFieldEnum | ListingScalarFieldEnum[]
  }

  /**
   * Listing create
   */
  export type ListingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * The data needed to create a Listing.
     */
    data: XOR<ListingCreateInput, ListingUncheckedCreateInput>
  }

  /**
   * Listing createMany
   */
  export type ListingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Listings.
     */
    data: ListingCreateManyInput | ListingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Listing createManyAndReturn
   */
  export type ListingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * The data used to create many Listings.
     */
    data: ListingCreateManyInput | ListingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Listing update
   */
  export type ListingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * The data needed to update a Listing.
     */
    data: XOR<ListingUpdateInput, ListingUncheckedUpdateInput>
    /**
     * Choose, which Listing to update.
     */
    where: ListingWhereUniqueInput
  }

  /**
   * Listing updateMany
   */
  export type ListingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Listings.
     */
    data: XOR<ListingUpdateManyMutationInput, ListingUncheckedUpdateManyInput>
    /**
     * Filter which Listings to update
     */
    where?: ListingWhereInput
    /**
     * Limit how many Listings to update.
     */
    limit?: number
  }

  /**
   * Listing updateManyAndReturn
   */
  export type ListingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * The data used to update Listings.
     */
    data: XOR<ListingUpdateManyMutationInput, ListingUncheckedUpdateManyInput>
    /**
     * Filter which Listings to update
     */
    where?: ListingWhereInput
    /**
     * Limit how many Listings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Listing upsert
   */
  export type ListingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * The filter to search for the Listing to update in case it exists.
     */
    where: ListingWhereUniqueInput
    /**
     * In case the Listing found by the `where` argument doesn't exist, create a new Listing with this data.
     */
    create: XOR<ListingCreateInput, ListingUncheckedCreateInput>
    /**
     * In case the Listing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListingUpdateInput, ListingUncheckedUpdateInput>
  }

  /**
   * Listing delete
   */
  export type ListingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * Filter which Listing to delete.
     */
    where: ListingWhereUniqueInput
  }

  /**
   * Listing deleteMany
   */
  export type ListingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Listings to delete
     */
    where?: ListingWhereInput
    /**
     * Limit how many Listings to delete.
     */
    limit?: number
  }

  /**
   * Listing.media
   */
  export type Listing$mediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaInclude<ExtArgs> | null
    where?: ListingMediaWhereInput
    orderBy?: ListingMediaOrderByWithRelationInput | ListingMediaOrderByWithRelationInput[]
    cursor?: ListingMediaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListingMediaScalarFieldEnum | ListingMediaScalarFieldEnum[]
  }

  /**
   * Listing.attributes
   */
  export type Listing$attributesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeInclude<ExtArgs> | null
    where?: ListingAttributeWhereInput
    orderBy?: ListingAttributeOrderByWithRelationInput | ListingAttributeOrderByWithRelationInput[]
    cursor?: ListingAttributeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListingAttributeScalarFieldEnum | ListingAttributeScalarFieldEnum[]
  }

  /**
   * Listing.favorites
   */
  export type Listing$favoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    cursor?: FavoriteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Listing.conversations
   */
  export type Listing$conversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    where?: ConversationWhereInput
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    cursor?: ConversationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * Listing.promoOrders
   */
  export type Listing$promoOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
    where?: PromotionOrderWhereInput
    orderBy?: PromotionOrderOrderByWithRelationInput | PromotionOrderOrderByWithRelationInput[]
    cursor?: PromotionOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionOrderScalarFieldEnum | PromotionOrderScalarFieldEnum[]
  }

  /**
   * Listing.adImpressions
   */
  export type Listing$adImpressionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionInclude<ExtArgs> | null
    where?: AdImpressionWhereInput
    orderBy?: AdImpressionOrderByWithRelationInput | AdImpressionOrderByWithRelationInput[]
    cursor?: AdImpressionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdImpressionScalarFieldEnum | AdImpressionScalarFieldEnum[]
  }

  /**
   * Listing without action
   */
  export type ListingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
  }


  /**
   * Model ListingMedia
   */

  export type AggregateListingMedia = {
    _count: ListingMediaCountAggregateOutputType | null
    _avg: ListingMediaAvgAggregateOutputType | null
    _sum: ListingMediaSumAggregateOutputType | null
    _min: ListingMediaMinAggregateOutputType | null
    _max: ListingMediaMaxAggregateOutputType | null
  }

  export type ListingMediaAvgAggregateOutputType = {
    position: number | null
    width: number | null
    height: number | null
  }

  export type ListingMediaSumAggregateOutputType = {
    position: number | null
    width: number | null
    height: number | null
  }

  export type ListingMediaMinAggregateOutputType = {
    id: string | null
    listingId: string | null
    url: string | null
    position: number | null
    width: number | null
    height: number | null
    mimeType: string | null
    createdAt: Date | null
  }

  export type ListingMediaMaxAggregateOutputType = {
    id: string | null
    listingId: string | null
    url: string | null
    position: number | null
    width: number | null
    height: number | null
    mimeType: string | null
    createdAt: Date | null
  }

  export type ListingMediaCountAggregateOutputType = {
    id: number
    listingId: number
    url: number
    position: number
    width: number
    height: number
    mimeType: number
    createdAt: number
    _all: number
  }


  export type ListingMediaAvgAggregateInputType = {
    position?: true
    width?: true
    height?: true
  }

  export type ListingMediaSumAggregateInputType = {
    position?: true
    width?: true
    height?: true
  }

  export type ListingMediaMinAggregateInputType = {
    id?: true
    listingId?: true
    url?: true
    position?: true
    width?: true
    height?: true
    mimeType?: true
    createdAt?: true
  }

  export type ListingMediaMaxAggregateInputType = {
    id?: true
    listingId?: true
    url?: true
    position?: true
    width?: true
    height?: true
    mimeType?: true
    createdAt?: true
  }

  export type ListingMediaCountAggregateInputType = {
    id?: true
    listingId?: true
    url?: true
    position?: true
    width?: true
    height?: true
    mimeType?: true
    createdAt?: true
    _all?: true
  }

  export type ListingMediaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingMedia to aggregate.
     */
    where?: ListingMediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingMedias to fetch.
     */
    orderBy?: ListingMediaOrderByWithRelationInput | ListingMediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListingMediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingMedias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingMedias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ListingMedias
    **/
    _count?: true | ListingMediaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ListingMediaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ListingMediaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListingMediaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListingMediaMaxAggregateInputType
  }

  export type GetListingMediaAggregateType<T extends ListingMediaAggregateArgs> = {
        [P in keyof T & keyof AggregateListingMedia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListingMedia[P]>
      : GetScalarType<T[P], AggregateListingMedia[P]>
  }




  export type ListingMediaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingMediaWhereInput
    orderBy?: ListingMediaOrderByWithAggregationInput | ListingMediaOrderByWithAggregationInput[]
    by: ListingMediaScalarFieldEnum[] | ListingMediaScalarFieldEnum
    having?: ListingMediaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListingMediaCountAggregateInputType | true
    _avg?: ListingMediaAvgAggregateInputType
    _sum?: ListingMediaSumAggregateInputType
    _min?: ListingMediaMinAggregateInputType
    _max?: ListingMediaMaxAggregateInputType
  }

  export type ListingMediaGroupByOutputType = {
    id: string
    listingId: string
    url: string
    position: number
    width: number | null
    height: number | null
    mimeType: string | null
    createdAt: Date
    _count: ListingMediaCountAggregateOutputType | null
    _avg: ListingMediaAvgAggregateOutputType | null
    _sum: ListingMediaSumAggregateOutputType | null
    _min: ListingMediaMinAggregateOutputType | null
    _max: ListingMediaMaxAggregateOutputType | null
  }

  type GetListingMediaGroupByPayload<T extends ListingMediaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListingMediaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListingMediaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListingMediaGroupByOutputType[P]>
            : GetScalarType<T[P], ListingMediaGroupByOutputType[P]>
        }
      >
    >


  export type ListingMediaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    url?: boolean
    position?: boolean
    width?: boolean
    height?: boolean
    mimeType?: boolean
    createdAt?: boolean
    listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingMedia"]>

  export type ListingMediaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    url?: boolean
    position?: boolean
    width?: boolean
    height?: boolean
    mimeType?: boolean
    createdAt?: boolean
    listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingMedia"]>

  export type ListingMediaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    url?: boolean
    position?: boolean
    width?: boolean
    height?: boolean
    mimeType?: boolean
    createdAt?: boolean
    listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingMedia"]>

  export type ListingMediaSelectScalar = {
    id?: boolean
    listingId?: boolean
    url?: boolean
    position?: boolean
    width?: boolean
    height?: boolean
    mimeType?: boolean
    createdAt?: boolean
  }

  export type ListingMediaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "listingId" | "url" | "position" | "width" | "height" | "mimeType" | "createdAt", ExtArgs["result"]["listingMedia"]>
  export type ListingMediaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type ListingMediaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type ListingMediaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | ListingDefaultArgs<ExtArgs>
  }

  export type $ListingMediaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ListingMedia"
    objects: {
      listing: Prisma.$ListingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      listingId: string
      url: string
      position: number
      width: number | null
      height: number | null
      mimeType: string | null
      createdAt: Date
    }, ExtArgs["result"]["listingMedia"]>
    composites: {}
  }

  type ListingMediaGetPayload<S extends boolean | null | undefined | ListingMediaDefaultArgs> = $Result.GetResult<Prisma.$ListingMediaPayload, S>

  type ListingMediaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListingMediaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListingMediaCountAggregateInputType | true
    }

  export interface ListingMediaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListingMedia'], meta: { name: 'ListingMedia' } }
    /**
     * Find zero or one ListingMedia that matches the filter.
     * @param {ListingMediaFindUniqueArgs} args - Arguments to find a ListingMedia
     * @example
     * // Get one ListingMedia
     * const listingMedia = await prisma.listingMedia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListingMediaFindUniqueArgs>(args: SelectSubset<T, ListingMediaFindUniqueArgs<ExtArgs>>): Prisma__ListingMediaClient<$Result.GetResult<Prisma.$ListingMediaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ListingMedia that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListingMediaFindUniqueOrThrowArgs} args - Arguments to find a ListingMedia
     * @example
     * // Get one ListingMedia
     * const listingMedia = await prisma.listingMedia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListingMediaFindUniqueOrThrowArgs>(args: SelectSubset<T, ListingMediaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListingMediaClient<$Result.GetResult<Prisma.$ListingMediaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingMedia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingMediaFindFirstArgs} args - Arguments to find a ListingMedia
     * @example
     * // Get one ListingMedia
     * const listingMedia = await prisma.listingMedia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListingMediaFindFirstArgs>(args?: SelectSubset<T, ListingMediaFindFirstArgs<ExtArgs>>): Prisma__ListingMediaClient<$Result.GetResult<Prisma.$ListingMediaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingMedia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingMediaFindFirstOrThrowArgs} args - Arguments to find a ListingMedia
     * @example
     * // Get one ListingMedia
     * const listingMedia = await prisma.listingMedia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListingMediaFindFirstOrThrowArgs>(args?: SelectSubset<T, ListingMediaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListingMediaClient<$Result.GetResult<Prisma.$ListingMediaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ListingMedias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingMediaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ListingMedias
     * const listingMedias = await prisma.listingMedia.findMany()
     * 
     * // Get first 10 ListingMedias
     * const listingMedias = await prisma.listingMedia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const listingMediaWithIdOnly = await prisma.listingMedia.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ListingMediaFindManyArgs>(args?: SelectSubset<T, ListingMediaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingMediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ListingMedia.
     * @param {ListingMediaCreateArgs} args - Arguments to create a ListingMedia.
     * @example
     * // Create one ListingMedia
     * const ListingMedia = await prisma.listingMedia.create({
     *   data: {
     *     // ... data to create a ListingMedia
     *   }
     * })
     * 
     */
    create<T extends ListingMediaCreateArgs>(args: SelectSubset<T, ListingMediaCreateArgs<ExtArgs>>): Prisma__ListingMediaClient<$Result.GetResult<Prisma.$ListingMediaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ListingMedias.
     * @param {ListingMediaCreateManyArgs} args - Arguments to create many ListingMedias.
     * @example
     * // Create many ListingMedias
     * const listingMedia = await prisma.listingMedia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListingMediaCreateManyArgs>(args?: SelectSubset<T, ListingMediaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ListingMedias and returns the data saved in the database.
     * @param {ListingMediaCreateManyAndReturnArgs} args - Arguments to create many ListingMedias.
     * @example
     * // Create many ListingMedias
     * const listingMedia = await prisma.listingMedia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ListingMedias and only return the `id`
     * const listingMediaWithIdOnly = await prisma.listingMedia.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListingMediaCreateManyAndReturnArgs>(args?: SelectSubset<T, ListingMediaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingMediaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ListingMedia.
     * @param {ListingMediaDeleteArgs} args - Arguments to delete one ListingMedia.
     * @example
     * // Delete one ListingMedia
     * const ListingMedia = await prisma.listingMedia.delete({
     *   where: {
     *     // ... filter to delete one ListingMedia
     *   }
     * })
     * 
     */
    delete<T extends ListingMediaDeleteArgs>(args: SelectSubset<T, ListingMediaDeleteArgs<ExtArgs>>): Prisma__ListingMediaClient<$Result.GetResult<Prisma.$ListingMediaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ListingMedia.
     * @param {ListingMediaUpdateArgs} args - Arguments to update one ListingMedia.
     * @example
     * // Update one ListingMedia
     * const listingMedia = await prisma.listingMedia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListingMediaUpdateArgs>(args: SelectSubset<T, ListingMediaUpdateArgs<ExtArgs>>): Prisma__ListingMediaClient<$Result.GetResult<Prisma.$ListingMediaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ListingMedias.
     * @param {ListingMediaDeleteManyArgs} args - Arguments to filter ListingMedias to delete.
     * @example
     * // Delete a few ListingMedias
     * const { count } = await prisma.listingMedia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListingMediaDeleteManyArgs>(args?: SelectSubset<T, ListingMediaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingMedias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingMediaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ListingMedias
     * const listingMedia = await prisma.listingMedia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListingMediaUpdateManyArgs>(args: SelectSubset<T, ListingMediaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingMedias and returns the data updated in the database.
     * @param {ListingMediaUpdateManyAndReturnArgs} args - Arguments to update many ListingMedias.
     * @example
     * // Update many ListingMedias
     * const listingMedia = await prisma.listingMedia.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ListingMedias and only return the `id`
     * const listingMediaWithIdOnly = await prisma.listingMedia.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListingMediaUpdateManyAndReturnArgs>(args: SelectSubset<T, ListingMediaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingMediaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ListingMedia.
     * @param {ListingMediaUpsertArgs} args - Arguments to update or create a ListingMedia.
     * @example
     * // Update or create a ListingMedia
     * const listingMedia = await prisma.listingMedia.upsert({
     *   create: {
     *     // ... data to create a ListingMedia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ListingMedia we want to update
     *   }
     * })
     */
    upsert<T extends ListingMediaUpsertArgs>(args: SelectSubset<T, ListingMediaUpsertArgs<ExtArgs>>): Prisma__ListingMediaClient<$Result.GetResult<Prisma.$ListingMediaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ListingMedias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingMediaCountArgs} args - Arguments to filter ListingMedias to count.
     * @example
     * // Count the number of ListingMedias
     * const count = await prisma.listingMedia.count({
     *   where: {
     *     // ... the filter for the ListingMedias we want to count
     *   }
     * })
    **/
    count<T extends ListingMediaCountArgs>(
      args?: Subset<T, ListingMediaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListingMediaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ListingMedia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingMediaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListingMediaAggregateArgs>(args: Subset<T, ListingMediaAggregateArgs>): Prisma.PrismaPromise<GetListingMediaAggregateType<T>>

    /**
     * Group by ListingMedia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingMediaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListingMediaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListingMediaGroupByArgs['orderBy'] }
        : { orderBy?: ListingMediaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListingMediaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingMediaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ListingMedia model
   */
  readonly fields: ListingMediaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ListingMedia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListingMediaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    listing<T extends ListingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListingDefaultArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ListingMedia model
   */
  interface ListingMediaFieldRefs {
    readonly id: FieldRef<"ListingMedia", 'String'>
    readonly listingId: FieldRef<"ListingMedia", 'String'>
    readonly url: FieldRef<"ListingMedia", 'String'>
    readonly position: FieldRef<"ListingMedia", 'Int'>
    readonly width: FieldRef<"ListingMedia", 'Int'>
    readonly height: FieldRef<"ListingMedia", 'Int'>
    readonly mimeType: FieldRef<"ListingMedia", 'String'>
    readonly createdAt: FieldRef<"ListingMedia", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ListingMedia findUnique
   */
  export type ListingMediaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaInclude<ExtArgs> | null
    /**
     * Filter, which ListingMedia to fetch.
     */
    where: ListingMediaWhereUniqueInput
  }

  /**
   * ListingMedia findUniqueOrThrow
   */
  export type ListingMediaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaInclude<ExtArgs> | null
    /**
     * Filter, which ListingMedia to fetch.
     */
    where: ListingMediaWhereUniqueInput
  }

  /**
   * ListingMedia findFirst
   */
  export type ListingMediaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaInclude<ExtArgs> | null
    /**
     * Filter, which ListingMedia to fetch.
     */
    where?: ListingMediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingMedias to fetch.
     */
    orderBy?: ListingMediaOrderByWithRelationInput | ListingMediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingMedias.
     */
    cursor?: ListingMediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingMedias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingMedias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingMedias.
     */
    distinct?: ListingMediaScalarFieldEnum | ListingMediaScalarFieldEnum[]
  }

  /**
   * ListingMedia findFirstOrThrow
   */
  export type ListingMediaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaInclude<ExtArgs> | null
    /**
     * Filter, which ListingMedia to fetch.
     */
    where?: ListingMediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingMedias to fetch.
     */
    orderBy?: ListingMediaOrderByWithRelationInput | ListingMediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingMedias.
     */
    cursor?: ListingMediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingMedias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingMedias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingMedias.
     */
    distinct?: ListingMediaScalarFieldEnum | ListingMediaScalarFieldEnum[]
  }

  /**
   * ListingMedia findMany
   */
  export type ListingMediaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaInclude<ExtArgs> | null
    /**
     * Filter, which ListingMedias to fetch.
     */
    where?: ListingMediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingMedias to fetch.
     */
    orderBy?: ListingMediaOrderByWithRelationInput | ListingMediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ListingMedias.
     */
    cursor?: ListingMediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingMedias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingMedias.
     */
    skip?: number
    distinct?: ListingMediaScalarFieldEnum | ListingMediaScalarFieldEnum[]
  }

  /**
   * ListingMedia create
   */
  export type ListingMediaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaInclude<ExtArgs> | null
    /**
     * The data needed to create a ListingMedia.
     */
    data: XOR<ListingMediaCreateInput, ListingMediaUncheckedCreateInput>
  }

  /**
   * ListingMedia createMany
   */
  export type ListingMediaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ListingMedias.
     */
    data: ListingMediaCreateManyInput | ListingMediaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ListingMedia createManyAndReturn
   */
  export type ListingMediaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * The data used to create many ListingMedias.
     */
    data: ListingMediaCreateManyInput | ListingMediaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingMedia update
   */
  export type ListingMediaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaInclude<ExtArgs> | null
    /**
     * The data needed to update a ListingMedia.
     */
    data: XOR<ListingMediaUpdateInput, ListingMediaUncheckedUpdateInput>
    /**
     * Choose, which ListingMedia to update.
     */
    where: ListingMediaWhereUniqueInput
  }

  /**
   * ListingMedia updateMany
   */
  export type ListingMediaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ListingMedias.
     */
    data: XOR<ListingMediaUpdateManyMutationInput, ListingMediaUncheckedUpdateManyInput>
    /**
     * Filter which ListingMedias to update
     */
    where?: ListingMediaWhereInput
    /**
     * Limit how many ListingMedias to update.
     */
    limit?: number
  }

  /**
   * ListingMedia updateManyAndReturn
   */
  export type ListingMediaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * The data used to update ListingMedias.
     */
    data: XOR<ListingMediaUpdateManyMutationInput, ListingMediaUncheckedUpdateManyInput>
    /**
     * Filter which ListingMedias to update
     */
    where?: ListingMediaWhereInput
    /**
     * Limit how many ListingMedias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingMedia upsert
   */
  export type ListingMediaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaInclude<ExtArgs> | null
    /**
     * The filter to search for the ListingMedia to update in case it exists.
     */
    where: ListingMediaWhereUniqueInput
    /**
     * In case the ListingMedia found by the `where` argument doesn't exist, create a new ListingMedia with this data.
     */
    create: XOR<ListingMediaCreateInput, ListingMediaUncheckedCreateInput>
    /**
     * In case the ListingMedia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListingMediaUpdateInput, ListingMediaUncheckedUpdateInput>
  }

  /**
   * ListingMedia delete
   */
  export type ListingMediaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaInclude<ExtArgs> | null
    /**
     * Filter which ListingMedia to delete.
     */
    where: ListingMediaWhereUniqueInput
  }

  /**
   * ListingMedia deleteMany
   */
  export type ListingMediaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingMedias to delete
     */
    where?: ListingMediaWhereInput
    /**
     * Limit how many ListingMedias to delete.
     */
    limit?: number
  }

  /**
   * ListingMedia without action
   */
  export type ListingMediaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingMedia
     */
    select?: ListingMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingMedia
     */
    omit?: ListingMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingMediaInclude<ExtArgs> | null
  }


  /**
   * Model ListingAttributeDef
   */

  export type AggregateListingAttributeDef = {
    _count: ListingAttributeDefCountAggregateOutputType | null
    _avg: ListingAttributeDefAvgAggregateOutputType | null
    _sum: ListingAttributeDefSumAggregateOutputType | null
    _min: ListingAttributeDefMinAggregateOutputType | null
    _max: ListingAttributeDefMaxAggregateOutputType | null
  }

  export type ListingAttributeDefAvgAggregateOutputType = {
    sortOrder: number | null
  }

  export type ListingAttributeDefSumAggregateOutputType = {
    sortOrder: number | null
  }

  export type ListingAttributeDefMinAggregateOutputType = {
    id: string | null
    categoryId: string | null
    name: string | null
    key: string | null
    dataType: string | null
    isRequired: boolean | null
    sortOrder: number | null
  }

  export type ListingAttributeDefMaxAggregateOutputType = {
    id: string | null
    categoryId: string | null
    name: string | null
    key: string | null
    dataType: string | null
    isRequired: boolean | null
    sortOrder: number | null
  }

  export type ListingAttributeDefCountAggregateOutputType = {
    id: number
    categoryId: number
    name: number
    key: number
    dataType: number
    enumOptions: number
    isRequired: number
    sortOrder: number
    _all: number
  }


  export type ListingAttributeDefAvgAggregateInputType = {
    sortOrder?: true
  }

  export type ListingAttributeDefSumAggregateInputType = {
    sortOrder?: true
  }

  export type ListingAttributeDefMinAggregateInputType = {
    id?: true
    categoryId?: true
    name?: true
    key?: true
    dataType?: true
    isRequired?: true
    sortOrder?: true
  }

  export type ListingAttributeDefMaxAggregateInputType = {
    id?: true
    categoryId?: true
    name?: true
    key?: true
    dataType?: true
    isRequired?: true
    sortOrder?: true
  }

  export type ListingAttributeDefCountAggregateInputType = {
    id?: true
    categoryId?: true
    name?: true
    key?: true
    dataType?: true
    enumOptions?: true
    isRequired?: true
    sortOrder?: true
    _all?: true
  }

  export type ListingAttributeDefAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingAttributeDef to aggregate.
     */
    where?: ListingAttributeDefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingAttributeDefs to fetch.
     */
    orderBy?: ListingAttributeDefOrderByWithRelationInput | ListingAttributeDefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListingAttributeDefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingAttributeDefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingAttributeDefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ListingAttributeDefs
    **/
    _count?: true | ListingAttributeDefCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ListingAttributeDefAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ListingAttributeDefSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListingAttributeDefMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListingAttributeDefMaxAggregateInputType
  }

  export type GetListingAttributeDefAggregateType<T extends ListingAttributeDefAggregateArgs> = {
        [P in keyof T & keyof AggregateListingAttributeDef]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListingAttributeDef[P]>
      : GetScalarType<T[P], AggregateListingAttributeDef[P]>
  }




  export type ListingAttributeDefGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingAttributeDefWhereInput
    orderBy?: ListingAttributeDefOrderByWithAggregationInput | ListingAttributeDefOrderByWithAggregationInput[]
    by: ListingAttributeDefScalarFieldEnum[] | ListingAttributeDefScalarFieldEnum
    having?: ListingAttributeDefScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListingAttributeDefCountAggregateInputType | true
    _avg?: ListingAttributeDefAvgAggregateInputType
    _sum?: ListingAttributeDefSumAggregateInputType
    _min?: ListingAttributeDefMinAggregateInputType
    _max?: ListingAttributeDefMaxAggregateInputType
  }

  export type ListingAttributeDefGroupByOutputType = {
    id: string
    categoryId: string
    name: string
    key: string
    dataType: string
    enumOptions: JsonValue | null
    isRequired: boolean
    sortOrder: number
    _count: ListingAttributeDefCountAggregateOutputType | null
    _avg: ListingAttributeDefAvgAggregateOutputType | null
    _sum: ListingAttributeDefSumAggregateOutputType | null
    _min: ListingAttributeDefMinAggregateOutputType | null
    _max: ListingAttributeDefMaxAggregateOutputType | null
  }

  type GetListingAttributeDefGroupByPayload<T extends ListingAttributeDefGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListingAttributeDefGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListingAttributeDefGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListingAttributeDefGroupByOutputType[P]>
            : GetScalarType<T[P], ListingAttributeDefGroupByOutputType[P]>
        }
      >
    >


  export type ListingAttributeDefSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    name?: boolean
    key?: boolean
    dataType?: boolean
    enumOptions?: boolean
    isRequired?: boolean
    sortOrder?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    attributes?: boolean | ListingAttributeDef$attributesArgs<ExtArgs>
    _count?: boolean | ListingAttributeDefCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingAttributeDef"]>

  export type ListingAttributeDefSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    name?: boolean
    key?: boolean
    dataType?: boolean
    enumOptions?: boolean
    isRequired?: boolean
    sortOrder?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingAttributeDef"]>

  export type ListingAttributeDefSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    name?: boolean
    key?: boolean
    dataType?: boolean
    enumOptions?: boolean
    isRequired?: boolean
    sortOrder?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingAttributeDef"]>

  export type ListingAttributeDefSelectScalar = {
    id?: boolean
    categoryId?: boolean
    name?: boolean
    key?: boolean
    dataType?: boolean
    enumOptions?: boolean
    isRequired?: boolean
    sortOrder?: boolean
  }

  export type ListingAttributeDefOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "categoryId" | "name" | "key" | "dataType" | "enumOptions" | "isRequired" | "sortOrder", ExtArgs["result"]["listingAttributeDef"]>
  export type ListingAttributeDefInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    attributes?: boolean | ListingAttributeDef$attributesArgs<ExtArgs>
    _count?: boolean | ListingAttributeDefCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ListingAttributeDefIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }
  export type ListingAttributeDefIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }

  export type $ListingAttributeDefPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ListingAttributeDef"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs>
      attributes: Prisma.$ListingAttributePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      categoryId: string
      name: string
      key: string
      dataType: string
      enumOptions: Prisma.JsonValue | null
      isRequired: boolean
      sortOrder: number
    }, ExtArgs["result"]["listingAttributeDef"]>
    composites: {}
  }

  type ListingAttributeDefGetPayload<S extends boolean | null | undefined | ListingAttributeDefDefaultArgs> = $Result.GetResult<Prisma.$ListingAttributeDefPayload, S>

  type ListingAttributeDefCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListingAttributeDefFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListingAttributeDefCountAggregateInputType | true
    }

  export interface ListingAttributeDefDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListingAttributeDef'], meta: { name: 'ListingAttributeDef' } }
    /**
     * Find zero or one ListingAttributeDef that matches the filter.
     * @param {ListingAttributeDefFindUniqueArgs} args - Arguments to find a ListingAttributeDef
     * @example
     * // Get one ListingAttributeDef
     * const listingAttributeDef = await prisma.listingAttributeDef.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListingAttributeDefFindUniqueArgs>(args: SelectSubset<T, ListingAttributeDefFindUniqueArgs<ExtArgs>>): Prisma__ListingAttributeDefClient<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ListingAttributeDef that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListingAttributeDefFindUniqueOrThrowArgs} args - Arguments to find a ListingAttributeDef
     * @example
     * // Get one ListingAttributeDef
     * const listingAttributeDef = await prisma.listingAttributeDef.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListingAttributeDefFindUniqueOrThrowArgs>(args: SelectSubset<T, ListingAttributeDefFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListingAttributeDefClient<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingAttributeDef that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeDefFindFirstArgs} args - Arguments to find a ListingAttributeDef
     * @example
     * // Get one ListingAttributeDef
     * const listingAttributeDef = await prisma.listingAttributeDef.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListingAttributeDefFindFirstArgs>(args?: SelectSubset<T, ListingAttributeDefFindFirstArgs<ExtArgs>>): Prisma__ListingAttributeDefClient<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingAttributeDef that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeDefFindFirstOrThrowArgs} args - Arguments to find a ListingAttributeDef
     * @example
     * // Get one ListingAttributeDef
     * const listingAttributeDef = await prisma.listingAttributeDef.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListingAttributeDefFindFirstOrThrowArgs>(args?: SelectSubset<T, ListingAttributeDefFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListingAttributeDefClient<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ListingAttributeDefs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeDefFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ListingAttributeDefs
     * const listingAttributeDefs = await prisma.listingAttributeDef.findMany()
     * 
     * // Get first 10 ListingAttributeDefs
     * const listingAttributeDefs = await prisma.listingAttributeDef.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const listingAttributeDefWithIdOnly = await prisma.listingAttributeDef.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ListingAttributeDefFindManyArgs>(args?: SelectSubset<T, ListingAttributeDefFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ListingAttributeDef.
     * @param {ListingAttributeDefCreateArgs} args - Arguments to create a ListingAttributeDef.
     * @example
     * // Create one ListingAttributeDef
     * const ListingAttributeDef = await prisma.listingAttributeDef.create({
     *   data: {
     *     // ... data to create a ListingAttributeDef
     *   }
     * })
     * 
     */
    create<T extends ListingAttributeDefCreateArgs>(args: SelectSubset<T, ListingAttributeDefCreateArgs<ExtArgs>>): Prisma__ListingAttributeDefClient<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ListingAttributeDefs.
     * @param {ListingAttributeDefCreateManyArgs} args - Arguments to create many ListingAttributeDefs.
     * @example
     * // Create many ListingAttributeDefs
     * const listingAttributeDef = await prisma.listingAttributeDef.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListingAttributeDefCreateManyArgs>(args?: SelectSubset<T, ListingAttributeDefCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ListingAttributeDefs and returns the data saved in the database.
     * @param {ListingAttributeDefCreateManyAndReturnArgs} args - Arguments to create many ListingAttributeDefs.
     * @example
     * // Create many ListingAttributeDefs
     * const listingAttributeDef = await prisma.listingAttributeDef.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ListingAttributeDefs and only return the `id`
     * const listingAttributeDefWithIdOnly = await prisma.listingAttributeDef.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListingAttributeDefCreateManyAndReturnArgs>(args?: SelectSubset<T, ListingAttributeDefCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ListingAttributeDef.
     * @param {ListingAttributeDefDeleteArgs} args - Arguments to delete one ListingAttributeDef.
     * @example
     * // Delete one ListingAttributeDef
     * const ListingAttributeDef = await prisma.listingAttributeDef.delete({
     *   where: {
     *     // ... filter to delete one ListingAttributeDef
     *   }
     * })
     * 
     */
    delete<T extends ListingAttributeDefDeleteArgs>(args: SelectSubset<T, ListingAttributeDefDeleteArgs<ExtArgs>>): Prisma__ListingAttributeDefClient<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ListingAttributeDef.
     * @param {ListingAttributeDefUpdateArgs} args - Arguments to update one ListingAttributeDef.
     * @example
     * // Update one ListingAttributeDef
     * const listingAttributeDef = await prisma.listingAttributeDef.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListingAttributeDefUpdateArgs>(args: SelectSubset<T, ListingAttributeDefUpdateArgs<ExtArgs>>): Prisma__ListingAttributeDefClient<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ListingAttributeDefs.
     * @param {ListingAttributeDefDeleteManyArgs} args - Arguments to filter ListingAttributeDefs to delete.
     * @example
     * // Delete a few ListingAttributeDefs
     * const { count } = await prisma.listingAttributeDef.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListingAttributeDefDeleteManyArgs>(args?: SelectSubset<T, ListingAttributeDefDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingAttributeDefs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeDefUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ListingAttributeDefs
     * const listingAttributeDef = await prisma.listingAttributeDef.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListingAttributeDefUpdateManyArgs>(args: SelectSubset<T, ListingAttributeDefUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingAttributeDefs and returns the data updated in the database.
     * @param {ListingAttributeDefUpdateManyAndReturnArgs} args - Arguments to update many ListingAttributeDefs.
     * @example
     * // Update many ListingAttributeDefs
     * const listingAttributeDef = await prisma.listingAttributeDef.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ListingAttributeDefs and only return the `id`
     * const listingAttributeDefWithIdOnly = await prisma.listingAttributeDef.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListingAttributeDefUpdateManyAndReturnArgs>(args: SelectSubset<T, ListingAttributeDefUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ListingAttributeDef.
     * @param {ListingAttributeDefUpsertArgs} args - Arguments to update or create a ListingAttributeDef.
     * @example
     * // Update or create a ListingAttributeDef
     * const listingAttributeDef = await prisma.listingAttributeDef.upsert({
     *   create: {
     *     // ... data to create a ListingAttributeDef
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ListingAttributeDef we want to update
     *   }
     * })
     */
    upsert<T extends ListingAttributeDefUpsertArgs>(args: SelectSubset<T, ListingAttributeDefUpsertArgs<ExtArgs>>): Prisma__ListingAttributeDefClient<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ListingAttributeDefs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeDefCountArgs} args - Arguments to filter ListingAttributeDefs to count.
     * @example
     * // Count the number of ListingAttributeDefs
     * const count = await prisma.listingAttributeDef.count({
     *   where: {
     *     // ... the filter for the ListingAttributeDefs we want to count
     *   }
     * })
    **/
    count<T extends ListingAttributeDefCountArgs>(
      args?: Subset<T, ListingAttributeDefCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListingAttributeDefCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ListingAttributeDef.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeDefAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListingAttributeDefAggregateArgs>(args: Subset<T, ListingAttributeDefAggregateArgs>): Prisma.PrismaPromise<GetListingAttributeDefAggregateType<T>>

    /**
     * Group by ListingAttributeDef.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeDefGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListingAttributeDefGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListingAttributeDefGroupByArgs['orderBy'] }
        : { orderBy?: ListingAttributeDefGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListingAttributeDefGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingAttributeDefGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ListingAttributeDef model
   */
  readonly fields: ListingAttributeDefFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ListingAttributeDef.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListingAttributeDefClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    attributes<T extends ListingAttributeDef$attributesArgs<ExtArgs> = {}>(args?: Subset<T, ListingAttributeDef$attributesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ListingAttributeDef model
   */
  interface ListingAttributeDefFieldRefs {
    readonly id: FieldRef<"ListingAttributeDef", 'String'>
    readonly categoryId: FieldRef<"ListingAttributeDef", 'String'>
    readonly name: FieldRef<"ListingAttributeDef", 'String'>
    readonly key: FieldRef<"ListingAttributeDef", 'String'>
    readonly dataType: FieldRef<"ListingAttributeDef", 'String'>
    readonly enumOptions: FieldRef<"ListingAttributeDef", 'Json'>
    readonly isRequired: FieldRef<"ListingAttributeDef", 'Boolean'>
    readonly sortOrder: FieldRef<"ListingAttributeDef", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ListingAttributeDef findUnique
   */
  export type ListingAttributeDefFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefInclude<ExtArgs> | null
    /**
     * Filter, which ListingAttributeDef to fetch.
     */
    where: ListingAttributeDefWhereUniqueInput
  }

  /**
   * ListingAttributeDef findUniqueOrThrow
   */
  export type ListingAttributeDefFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefInclude<ExtArgs> | null
    /**
     * Filter, which ListingAttributeDef to fetch.
     */
    where: ListingAttributeDefWhereUniqueInput
  }

  /**
   * ListingAttributeDef findFirst
   */
  export type ListingAttributeDefFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefInclude<ExtArgs> | null
    /**
     * Filter, which ListingAttributeDef to fetch.
     */
    where?: ListingAttributeDefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingAttributeDefs to fetch.
     */
    orderBy?: ListingAttributeDefOrderByWithRelationInput | ListingAttributeDefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingAttributeDefs.
     */
    cursor?: ListingAttributeDefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingAttributeDefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingAttributeDefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingAttributeDefs.
     */
    distinct?: ListingAttributeDefScalarFieldEnum | ListingAttributeDefScalarFieldEnum[]
  }

  /**
   * ListingAttributeDef findFirstOrThrow
   */
  export type ListingAttributeDefFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefInclude<ExtArgs> | null
    /**
     * Filter, which ListingAttributeDef to fetch.
     */
    where?: ListingAttributeDefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingAttributeDefs to fetch.
     */
    orderBy?: ListingAttributeDefOrderByWithRelationInput | ListingAttributeDefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingAttributeDefs.
     */
    cursor?: ListingAttributeDefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingAttributeDefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingAttributeDefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingAttributeDefs.
     */
    distinct?: ListingAttributeDefScalarFieldEnum | ListingAttributeDefScalarFieldEnum[]
  }

  /**
   * ListingAttributeDef findMany
   */
  export type ListingAttributeDefFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefInclude<ExtArgs> | null
    /**
     * Filter, which ListingAttributeDefs to fetch.
     */
    where?: ListingAttributeDefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingAttributeDefs to fetch.
     */
    orderBy?: ListingAttributeDefOrderByWithRelationInput | ListingAttributeDefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ListingAttributeDefs.
     */
    cursor?: ListingAttributeDefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingAttributeDefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingAttributeDefs.
     */
    skip?: number
    distinct?: ListingAttributeDefScalarFieldEnum | ListingAttributeDefScalarFieldEnum[]
  }

  /**
   * ListingAttributeDef create
   */
  export type ListingAttributeDefCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefInclude<ExtArgs> | null
    /**
     * The data needed to create a ListingAttributeDef.
     */
    data: XOR<ListingAttributeDefCreateInput, ListingAttributeDefUncheckedCreateInput>
  }

  /**
   * ListingAttributeDef createMany
   */
  export type ListingAttributeDefCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ListingAttributeDefs.
     */
    data: ListingAttributeDefCreateManyInput | ListingAttributeDefCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ListingAttributeDef createManyAndReturn
   */
  export type ListingAttributeDefCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * The data used to create many ListingAttributeDefs.
     */
    data: ListingAttributeDefCreateManyInput | ListingAttributeDefCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingAttributeDef update
   */
  export type ListingAttributeDefUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefInclude<ExtArgs> | null
    /**
     * The data needed to update a ListingAttributeDef.
     */
    data: XOR<ListingAttributeDefUpdateInput, ListingAttributeDefUncheckedUpdateInput>
    /**
     * Choose, which ListingAttributeDef to update.
     */
    where: ListingAttributeDefWhereUniqueInput
  }

  /**
   * ListingAttributeDef updateMany
   */
  export type ListingAttributeDefUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ListingAttributeDefs.
     */
    data: XOR<ListingAttributeDefUpdateManyMutationInput, ListingAttributeDefUncheckedUpdateManyInput>
    /**
     * Filter which ListingAttributeDefs to update
     */
    where?: ListingAttributeDefWhereInput
    /**
     * Limit how many ListingAttributeDefs to update.
     */
    limit?: number
  }

  /**
   * ListingAttributeDef updateManyAndReturn
   */
  export type ListingAttributeDefUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * The data used to update ListingAttributeDefs.
     */
    data: XOR<ListingAttributeDefUpdateManyMutationInput, ListingAttributeDefUncheckedUpdateManyInput>
    /**
     * Filter which ListingAttributeDefs to update
     */
    where?: ListingAttributeDefWhereInput
    /**
     * Limit how many ListingAttributeDefs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingAttributeDef upsert
   */
  export type ListingAttributeDefUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefInclude<ExtArgs> | null
    /**
     * The filter to search for the ListingAttributeDef to update in case it exists.
     */
    where: ListingAttributeDefWhereUniqueInput
    /**
     * In case the ListingAttributeDef found by the `where` argument doesn't exist, create a new ListingAttributeDef with this data.
     */
    create: XOR<ListingAttributeDefCreateInput, ListingAttributeDefUncheckedCreateInput>
    /**
     * In case the ListingAttributeDef was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListingAttributeDefUpdateInput, ListingAttributeDefUncheckedUpdateInput>
  }

  /**
   * ListingAttributeDef delete
   */
  export type ListingAttributeDefDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefInclude<ExtArgs> | null
    /**
     * Filter which ListingAttributeDef to delete.
     */
    where: ListingAttributeDefWhereUniqueInput
  }

  /**
   * ListingAttributeDef deleteMany
   */
  export type ListingAttributeDefDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingAttributeDefs to delete
     */
    where?: ListingAttributeDefWhereInput
    /**
     * Limit how many ListingAttributeDefs to delete.
     */
    limit?: number
  }

  /**
   * ListingAttributeDef.attributes
   */
  export type ListingAttributeDef$attributesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeInclude<ExtArgs> | null
    where?: ListingAttributeWhereInput
    orderBy?: ListingAttributeOrderByWithRelationInput | ListingAttributeOrderByWithRelationInput[]
    cursor?: ListingAttributeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListingAttributeScalarFieldEnum | ListingAttributeScalarFieldEnum[]
  }

  /**
   * ListingAttributeDef without action
   */
  export type ListingAttributeDefDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttributeDef
     */
    select?: ListingAttributeDefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttributeDef
     */
    omit?: ListingAttributeDefOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeDefInclude<ExtArgs> | null
  }


  /**
   * Model ListingAttribute
   */

  export type AggregateListingAttribute = {
    _count: ListingAttributeCountAggregateOutputType | null
    _avg: ListingAttributeAvgAggregateOutputType | null
    _sum: ListingAttributeSumAggregateOutputType | null
    _min: ListingAttributeMinAggregateOutputType | null
    _max: ListingAttributeMaxAggregateOutputType | null
  }

  export type ListingAttributeAvgAggregateOutputType = {
    valueNumber: Decimal | null
  }

  export type ListingAttributeSumAggregateOutputType = {
    valueNumber: Decimal | null
  }

  export type ListingAttributeMinAggregateOutputType = {
    id: string | null
    listingId: string | null
    attrDefId: string | null
    valueText: string | null
    valueNumber: Decimal | null
    valueBool: boolean | null
  }

  export type ListingAttributeMaxAggregateOutputType = {
    id: string | null
    listingId: string | null
    attrDefId: string | null
    valueText: string | null
    valueNumber: Decimal | null
    valueBool: boolean | null
  }

  export type ListingAttributeCountAggregateOutputType = {
    id: number
    listingId: number
    attrDefId: number
    valueText: number
    valueNumber: number
    valueBool: number
    _all: number
  }


  export type ListingAttributeAvgAggregateInputType = {
    valueNumber?: true
  }

  export type ListingAttributeSumAggregateInputType = {
    valueNumber?: true
  }

  export type ListingAttributeMinAggregateInputType = {
    id?: true
    listingId?: true
    attrDefId?: true
    valueText?: true
    valueNumber?: true
    valueBool?: true
  }

  export type ListingAttributeMaxAggregateInputType = {
    id?: true
    listingId?: true
    attrDefId?: true
    valueText?: true
    valueNumber?: true
    valueBool?: true
  }

  export type ListingAttributeCountAggregateInputType = {
    id?: true
    listingId?: true
    attrDefId?: true
    valueText?: true
    valueNumber?: true
    valueBool?: true
    _all?: true
  }

  export type ListingAttributeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingAttribute to aggregate.
     */
    where?: ListingAttributeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingAttributes to fetch.
     */
    orderBy?: ListingAttributeOrderByWithRelationInput | ListingAttributeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListingAttributeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingAttributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingAttributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ListingAttributes
    **/
    _count?: true | ListingAttributeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ListingAttributeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ListingAttributeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListingAttributeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListingAttributeMaxAggregateInputType
  }

  export type GetListingAttributeAggregateType<T extends ListingAttributeAggregateArgs> = {
        [P in keyof T & keyof AggregateListingAttribute]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListingAttribute[P]>
      : GetScalarType<T[P], AggregateListingAttribute[P]>
  }




  export type ListingAttributeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingAttributeWhereInput
    orderBy?: ListingAttributeOrderByWithAggregationInput | ListingAttributeOrderByWithAggregationInput[]
    by: ListingAttributeScalarFieldEnum[] | ListingAttributeScalarFieldEnum
    having?: ListingAttributeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListingAttributeCountAggregateInputType | true
    _avg?: ListingAttributeAvgAggregateInputType
    _sum?: ListingAttributeSumAggregateInputType
    _min?: ListingAttributeMinAggregateInputType
    _max?: ListingAttributeMaxAggregateInputType
  }

  export type ListingAttributeGroupByOutputType = {
    id: string
    listingId: string
    attrDefId: string
    valueText: string | null
    valueNumber: Decimal | null
    valueBool: boolean | null
    _count: ListingAttributeCountAggregateOutputType | null
    _avg: ListingAttributeAvgAggregateOutputType | null
    _sum: ListingAttributeSumAggregateOutputType | null
    _min: ListingAttributeMinAggregateOutputType | null
    _max: ListingAttributeMaxAggregateOutputType | null
  }

  type GetListingAttributeGroupByPayload<T extends ListingAttributeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListingAttributeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListingAttributeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListingAttributeGroupByOutputType[P]>
            : GetScalarType<T[P], ListingAttributeGroupByOutputType[P]>
        }
      >
    >


  export type ListingAttributeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    attrDefId?: boolean
    valueText?: boolean
    valueNumber?: boolean
    valueBool?: boolean
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    attrDef?: boolean | ListingAttributeDefDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingAttribute"]>

  export type ListingAttributeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    attrDefId?: boolean
    valueText?: boolean
    valueNumber?: boolean
    valueBool?: boolean
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    attrDef?: boolean | ListingAttributeDefDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingAttribute"]>

  export type ListingAttributeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    attrDefId?: boolean
    valueText?: boolean
    valueNumber?: boolean
    valueBool?: boolean
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    attrDef?: boolean | ListingAttributeDefDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingAttribute"]>

  export type ListingAttributeSelectScalar = {
    id?: boolean
    listingId?: boolean
    attrDefId?: boolean
    valueText?: boolean
    valueNumber?: boolean
    valueBool?: boolean
  }

  export type ListingAttributeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "listingId" | "attrDefId" | "valueText" | "valueNumber" | "valueBool", ExtArgs["result"]["listingAttribute"]>
  export type ListingAttributeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    attrDef?: boolean | ListingAttributeDefDefaultArgs<ExtArgs>
  }
  export type ListingAttributeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    attrDef?: boolean | ListingAttributeDefDefaultArgs<ExtArgs>
  }
  export type ListingAttributeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    attrDef?: boolean | ListingAttributeDefDefaultArgs<ExtArgs>
  }

  export type $ListingAttributePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ListingAttribute"
    objects: {
      listing: Prisma.$ListingPayload<ExtArgs>
      attrDef: Prisma.$ListingAttributeDefPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      listingId: string
      attrDefId: string
      valueText: string | null
      valueNumber: Prisma.Decimal | null
      valueBool: boolean | null
    }, ExtArgs["result"]["listingAttribute"]>
    composites: {}
  }

  type ListingAttributeGetPayload<S extends boolean | null | undefined | ListingAttributeDefaultArgs> = $Result.GetResult<Prisma.$ListingAttributePayload, S>

  type ListingAttributeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListingAttributeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListingAttributeCountAggregateInputType | true
    }

  export interface ListingAttributeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListingAttribute'], meta: { name: 'ListingAttribute' } }
    /**
     * Find zero or one ListingAttribute that matches the filter.
     * @param {ListingAttributeFindUniqueArgs} args - Arguments to find a ListingAttribute
     * @example
     * // Get one ListingAttribute
     * const listingAttribute = await prisma.listingAttribute.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListingAttributeFindUniqueArgs>(args: SelectSubset<T, ListingAttributeFindUniqueArgs<ExtArgs>>): Prisma__ListingAttributeClient<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ListingAttribute that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListingAttributeFindUniqueOrThrowArgs} args - Arguments to find a ListingAttribute
     * @example
     * // Get one ListingAttribute
     * const listingAttribute = await prisma.listingAttribute.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListingAttributeFindUniqueOrThrowArgs>(args: SelectSubset<T, ListingAttributeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListingAttributeClient<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingAttribute that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeFindFirstArgs} args - Arguments to find a ListingAttribute
     * @example
     * // Get one ListingAttribute
     * const listingAttribute = await prisma.listingAttribute.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListingAttributeFindFirstArgs>(args?: SelectSubset<T, ListingAttributeFindFirstArgs<ExtArgs>>): Prisma__ListingAttributeClient<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingAttribute that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeFindFirstOrThrowArgs} args - Arguments to find a ListingAttribute
     * @example
     * // Get one ListingAttribute
     * const listingAttribute = await prisma.listingAttribute.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListingAttributeFindFirstOrThrowArgs>(args?: SelectSubset<T, ListingAttributeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListingAttributeClient<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ListingAttributes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ListingAttributes
     * const listingAttributes = await prisma.listingAttribute.findMany()
     * 
     * // Get first 10 ListingAttributes
     * const listingAttributes = await prisma.listingAttribute.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const listingAttributeWithIdOnly = await prisma.listingAttribute.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ListingAttributeFindManyArgs>(args?: SelectSubset<T, ListingAttributeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ListingAttribute.
     * @param {ListingAttributeCreateArgs} args - Arguments to create a ListingAttribute.
     * @example
     * // Create one ListingAttribute
     * const ListingAttribute = await prisma.listingAttribute.create({
     *   data: {
     *     // ... data to create a ListingAttribute
     *   }
     * })
     * 
     */
    create<T extends ListingAttributeCreateArgs>(args: SelectSubset<T, ListingAttributeCreateArgs<ExtArgs>>): Prisma__ListingAttributeClient<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ListingAttributes.
     * @param {ListingAttributeCreateManyArgs} args - Arguments to create many ListingAttributes.
     * @example
     * // Create many ListingAttributes
     * const listingAttribute = await prisma.listingAttribute.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListingAttributeCreateManyArgs>(args?: SelectSubset<T, ListingAttributeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ListingAttributes and returns the data saved in the database.
     * @param {ListingAttributeCreateManyAndReturnArgs} args - Arguments to create many ListingAttributes.
     * @example
     * // Create many ListingAttributes
     * const listingAttribute = await prisma.listingAttribute.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ListingAttributes and only return the `id`
     * const listingAttributeWithIdOnly = await prisma.listingAttribute.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListingAttributeCreateManyAndReturnArgs>(args?: SelectSubset<T, ListingAttributeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ListingAttribute.
     * @param {ListingAttributeDeleteArgs} args - Arguments to delete one ListingAttribute.
     * @example
     * // Delete one ListingAttribute
     * const ListingAttribute = await prisma.listingAttribute.delete({
     *   where: {
     *     // ... filter to delete one ListingAttribute
     *   }
     * })
     * 
     */
    delete<T extends ListingAttributeDeleteArgs>(args: SelectSubset<T, ListingAttributeDeleteArgs<ExtArgs>>): Prisma__ListingAttributeClient<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ListingAttribute.
     * @param {ListingAttributeUpdateArgs} args - Arguments to update one ListingAttribute.
     * @example
     * // Update one ListingAttribute
     * const listingAttribute = await prisma.listingAttribute.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListingAttributeUpdateArgs>(args: SelectSubset<T, ListingAttributeUpdateArgs<ExtArgs>>): Prisma__ListingAttributeClient<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ListingAttributes.
     * @param {ListingAttributeDeleteManyArgs} args - Arguments to filter ListingAttributes to delete.
     * @example
     * // Delete a few ListingAttributes
     * const { count } = await prisma.listingAttribute.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListingAttributeDeleteManyArgs>(args?: SelectSubset<T, ListingAttributeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingAttributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ListingAttributes
     * const listingAttribute = await prisma.listingAttribute.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListingAttributeUpdateManyArgs>(args: SelectSubset<T, ListingAttributeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingAttributes and returns the data updated in the database.
     * @param {ListingAttributeUpdateManyAndReturnArgs} args - Arguments to update many ListingAttributes.
     * @example
     * // Update many ListingAttributes
     * const listingAttribute = await prisma.listingAttribute.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ListingAttributes and only return the `id`
     * const listingAttributeWithIdOnly = await prisma.listingAttribute.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListingAttributeUpdateManyAndReturnArgs>(args: SelectSubset<T, ListingAttributeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ListingAttribute.
     * @param {ListingAttributeUpsertArgs} args - Arguments to update or create a ListingAttribute.
     * @example
     * // Update or create a ListingAttribute
     * const listingAttribute = await prisma.listingAttribute.upsert({
     *   create: {
     *     // ... data to create a ListingAttribute
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ListingAttribute we want to update
     *   }
     * })
     */
    upsert<T extends ListingAttributeUpsertArgs>(args: SelectSubset<T, ListingAttributeUpsertArgs<ExtArgs>>): Prisma__ListingAttributeClient<$Result.GetResult<Prisma.$ListingAttributePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ListingAttributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeCountArgs} args - Arguments to filter ListingAttributes to count.
     * @example
     * // Count the number of ListingAttributes
     * const count = await prisma.listingAttribute.count({
     *   where: {
     *     // ... the filter for the ListingAttributes we want to count
     *   }
     * })
    **/
    count<T extends ListingAttributeCountArgs>(
      args?: Subset<T, ListingAttributeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListingAttributeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ListingAttribute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListingAttributeAggregateArgs>(args: Subset<T, ListingAttributeAggregateArgs>): Prisma.PrismaPromise<GetListingAttributeAggregateType<T>>

    /**
     * Group by ListingAttribute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAttributeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListingAttributeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListingAttributeGroupByArgs['orderBy'] }
        : { orderBy?: ListingAttributeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListingAttributeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingAttributeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ListingAttribute model
   */
  readonly fields: ListingAttributeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ListingAttribute.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListingAttributeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    listing<T extends ListingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListingDefaultArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    attrDef<T extends ListingAttributeDefDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListingAttributeDefDefaultArgs<ExtArgs>>): Prisma__ListingAttributeDefClient<$Result.GetResult<Prisma.$ListingAttributeDefPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ListingAttribute model
   */
  interface ListingAttributeFieldRefs {
    readonly id: FieldRef<"ListingAttribute", 'String'>
    readonly listingId: FieldRef<"ListingAttribute", 'String'>
    readonly attrDefId: FieldRef<"ListingAttribute", 'String'>
    readonly valueText: FieldRef<"ListingAttribute", 'String'>
    readonly valueNumber: FieldRef<"ListingAttribute", 'Decimal'>
    readonly valueBool: FieldRef<"ListingAttribute", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * ListingAttribute findUnique
   */
  export type ListingAttributeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ListingAttribute to fetch.
     */
    where: ListingAttributeWhereUniqueInput
  }

  /**
   * ListingAttribute findUniqueOrThrow
   */
  export type ListingAttributeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ListingAttribute to fetch.
     */
    where: ListingAttributeWhereUniqueInput
  }

  /**
   * ListingAttribute findFirst
   */
  export type ListingAttributeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ListingAttribute to fetch.
     */
    where?: ListingAttributeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingAttributes to fetch.
     */
    orderBy?: ListingAttributeOrderByWithRelationInput | ListingAttributeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingAttributes.
     */
    cursor?: ListingAttributeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingAttributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingAttributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingAttributes.
     */
    distinct?: ListingAttributeScalarFieldEnum | ListingAttributeScalarFieldEnum[]
  }

  /**
   * ListingAttribute findFirstOrThrow
   */
  export type ListingAttributeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ListingAttribute to fetch.
     */
    where?: ListingAttributeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingAttributes to fetch.
     */
    orderBy?: ListingAttributeOrderByWithRelationInput | ListingAttributeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingAttributes.
     */
    cursor?: ListingAttributeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingAttributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingAttributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingAttributes.
     */
    distinct?: ListingAttributeScalarFieldEnum | ListingAttributeScalarFieldEnum[]
  }

  /**
   * ListingAttribute findMany
   */
  export type ListingAttributeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ListingAttributes to fetch.
     */
    where?: ListingAttributeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingAttributes to fetch.
     */
    orderBy?: ListingAttributeOrderByWithRelationInput | ListingAttributeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ListingAttributes.
     */
    cursor?: ListingAttributeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingAttributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingAttributes.
     */
    skip?: number
    distinct?: ListingAttributeScalarFieldEnum | ListingAttributeScalarFieldEnum[]
  }

  /**
   * ListingAttribute create
   */
  export type ListingAttributeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeInclude<ExtArgs> | null
    /**
     * The data needed to create a ListingAttribute.
     */
    data: XOR<ListingAttributeCreateInput, ListingAttributeUncheckedCreateInput>
  }

  /**
   * ListingAttribute createMany
   */
  export type ListingAttributeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ListingAttributes.
     */
    data: ListingAttributeCreateManyInput | ListingAttributeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ListingAttribute createManyAndReturn
   */
  export type ListingAttributeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * The data used to create many ListingAttributes.
     */
    data: ListingAttributeCreateManyInput | ListingAttributeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingAttribute update
   */
  export type ListingAttributeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeInclude<ExtArgs> | null
    /**
     * The data needed to update a ListingAttribute.
     */
    data: XOR<ListingAttributeUpdateInput, ListingAttributeUncheckedUpdateInput>
    /**
     * Choose, which ListingAttribute to update.
     */
    where: ListingAttributeWhereUniqueInput
  }

  /**
   * ListingAttribute updateMany
   */
  export type ListingAttributeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ListingAttributes.
     */
    data: XOR<ListingAttributeUpdateManyMutationInput, ListingAttributeUncheckedUpdateManyInput>
    /**
     * Filter which ListingAttributes to update
     */
    where?: ListingAttributeWhereInput
    /**
     * Limit how many ListingAttributes to update.
     */
    limit?: number
  }

  /**
   * ListingAttribute updateManyAndReturn
   */
  export type ListingAttributeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * The data used to update ListingAttributes.
     */
    data: XOR<ListingAttributeUpdateManyMutationInput, ListingAttributeUncheckedUpdateManyInput>
    /**
     * Filter which ListingAttributes to update
     */
    where?: ListingAttributeWhereInput
    /**
     * Limit how many ListingAttributes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingAttribute upsert
   */
  export type ListingAttributeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeInclude<ExtArgs> | null
    /**
     * The filter to search for the ListingAttribute to update in case it exists.
     */
    where: ListingAttributeWhereUniqueInput
    /**
     * In case the ListingAttribute found by the `where` argument doesn't exist, create a new ListingAttribute with this data.
     */
    create: XOR<ListingAttributeCreateInput, ListingAttributeUncheckedCreateInput>
    /**
     * In case the ListingAttribute was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListingAttributeUpdateInput, ListingAttributeUncheckedUpdateInput>
  }

  /**
   * ListingAttribute delete
   */
  export type ListingAttributeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeInclude<ExtArgs> | null
    /**
     * Filter which ListingAttribute to delete.
     */
    where: ListingAttributeWhereUniqueInput
  }

  /**
   * ListingAttribute deleteMany
   */
  export type ListingAttributeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingAttributes to delete
     */
    where?: ListingAttributeWhereInput
    /**
     * Limit how many ListingAttributes to delete.
     */
    limit?: number
  }

  /**
   * ListingAttribute without action
   */
  export type ListingAttributeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAttribute
     */
    select?: ListingAttributeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAttribute
     */
    omit?: ListingAttributeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAttributeInclude<ExtArgs> | null
  }


  /**
   * Model Favorite
   */

  export type AggregateFavorite = {
    _count: FavoriteCountAggregateOutputType | null
    _min: FavoriteMinAggregateOutputType | null
    _max: FavoriteMaxAggregateOutputType | null
  }

  export type FavoriteMinAggregateOutputType = {
    userId: string | null
    listingId: string | null
    createdAt: Date | null
  }

  export type FavoriteMaxAggregateOutputType = {
    userId: string | null
    listingId: string | null
    createdAt: Date | null
  }

  export type FavoriteCountAggregateOutputType = {
    userId: number
    listingId: number
    createdAt: number
    _all: number
  }


  export type FavoriteMinAggregateInputType = {
    userId?: true
    listingId?: true
    createdAt?: true
  }

  export type FavoriteMaxAggregateInputType = {
    userId?: true
    listingId?: true
    createdAt?: true
  }

  export type FavoriteCountAggregateInputType = {
    userId?: true
    listingId?: true
    createdAt?: true
    _all?: true
  }

  export type FavoriteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorite to aggregate.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Favorites
    **/
    _count?: true | FavoriteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoriteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoriteMaxAggregateInputType
  }

  export type GetFavoriteAggregateType<T extends FavoriteAggregateArgs> = {
        [P in keyof T & keyof AggregateFavorite]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavorite[P]>
      : GetScalarType<T[P], AggregateFavorite[P]>
  }




  export type FavoriteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithAggregationInput | FavoriteOrderByWithAggregationInput[]
    by: FavoriteScalarFieldEnum[] | FavoriteScalarFieldEnum
    having?: FavoriteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoriteCountAggregateInputType | true
    _min?: FavoriteMinAggregateInputType
    _max?: FavoriteMaxAggregateInputType
  }

  export type FavoriteGroupByOutputType = {
    userId: string
    listingId: string
    createdAt: Date
    _count: FavoriteCountAggregateOutputType | null
    _min: FavoriteMinAggregateOutputType | null
    _max: FavoriteMaxAggregateOutputType | null
  }

  type GetFavoriteGroupByPayload<T extends FavoriteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoriteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoriteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoriteGroupByOutputType[P]>
            : GetScalarType<T[P], FavoriteGroupByOutputType[P]>
        }
      >
    >


  export type FavoriteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    listingId?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    listingId?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    listingId?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectScalar = {
    userId?: boolean
    listingId?: boolean
    createdAt?: boolean
  }

  export type FavoriteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"userId" | "listingId" | "createdAt", ExtArgs["result"]["favorite"]>
  export type FavoriteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type FavoriteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type FavoriteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    listing?: boolean | ListingDefaultArgs<ExtArgs>
  }

  export type $FavoritePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Favorite"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      listing: Prisma.$ListingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      userId: string
      listingId: string
      createdAt: Date
    }, ExtArgs["result"]["favorite"]>
    composites: {}
  }

  type FavoriteGetPayload<S extends boolean | null | undefined | FavoriteDefaultArgs> = $Result.GetResult<Prisma.$FavoritePayload, S>

  type FavoriteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FavoriteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavoriteCountAggregateInputType | true
    }

  export interface FavoriteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Favorite'], meta: { name: 'Favorite' } }
    /**
     * Find zero or one Favorite that matches the filter.
     * @param {FavoriteFindUniqueArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoriteFindUniqueArgs>(args: SelectSubset<T, FavoriteFindUniqueArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Favorite that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FavoriteFindUniqueOrThrowArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoriteFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoriteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favorite that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindFirstArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoriteFindFirstArgs>(args?: SelectSubset<T, FavoriteFindFirstArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favorite that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindFirstOrThrowArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoriteFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoriteFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Favorites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favorites
     * const favorites = await prisma.favorite.findMany()
     * 
     * // Get first 10 Favorites
     * const favorites = await prisma.favorite.findMany({ take: 10 })
     * 
     * // Only select the `userId`
     * const favoriteWithUserIdOnly = await prisma.favorite.findMany({ select: { userId: true } })
     * 
     */
    findMany<T extends FavoriteFindManyArgs>(args?: SelectSubset<T, FavoriteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Favorite.
     * @param {FavoriteCreateArgs} args - Arguments to create a Favorite.
     * @example
     * // Create one Favorite
     * const Favorite = await prisma.favorite.create({
     *   data: {
     *     // ... data to create a Favorite
     *   }
     * })
     * 
     */
    create<T extends FavoriteCreateArgs>(args: SelectSubset<T, FavoriteCreateArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Favorites.
     * @param {FavoriteCreateManyArgs} args - Arguments to create many Favorites.
     * @example
     * // Create many Favorites
     * const favorite = await prisma.favorite.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoriteCreateManyArgs>(args?: SelectSubset<T, FavoriteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favorites and returns the data saved in the database.
     * @param {FavoriteCreateManyAndReturnArgs} args - Arguments to create many Favorites.
     * @example
     * // Create many Favorites
     * const favorite = await prisma.favorite.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favorites and only return the `userId`
     * const favoriteWithUserIdOnly = await prisma.favorite.createManyAndReturn({
     *   select: { userId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FavoriteCreateManyAndReturnArgs>(args?: SelectSubset<T, FavoriteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Favorite.
     * @param {FavoriteDeleteArgs} args - Arguments to delete one Favorite.
     * @example
     * // Delete one Favorite
     * const Favorite = await prisma.favorite.delete({
     *   where: {
     *     // ... filter to delete one Favorite
     *   }
     * })
     * 
     */
    delete<T extends FavoriteDeleteArgs>(args: SelectSubset<T, FavoriteDeleteArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Favorite.
     * @param {FavoriteUpdateArgs} args - Arguments to update one Favorite.
     * @example
     * // Update one Favorite
     * const favorite = await prisma.favorite.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoriteUpdateArgs>(args: SelectSubset<T, FavoriteUpdateArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Favorites.
     * @param {FavoriteDeleteManyArgs} args - Arguments to filter Favorites to delete.
     * @example
     * // Delete a few Favorites
     * const { count } = await prisma.favorite.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoriteDeleteManyArgs>(args?: SelectSubset<T, FavoriteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favorites
     * const favorite = await prisma.favorite.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoriteUpdateManyArgs>(args: SelectSubset<T, FavoriteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favorites and returns the data updated in the database.
     * @param {FavoriteUpdateManyAndReturnArgs} args - Arguments to update many Favorites.
     * @example
     * // Update many Favorites
     * const favorite = await prisma.favorite.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Favorites and only return the `userId`
     * const favoriteWithUserIdOnly = await prisma.favorite.updateManyAndReturn({
     *   select: { userId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FavoriteUpdateManyAndReturnArgs>(args: SelectSubset<T, FavoriteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Favorite.
     * @param {FavoriteUpsertArgs} args - Arguments to update or create a Favorite.
     * @example
     * // Update or create a Favorite
     * const favorite = await prisma.favorite.upsert({
     *   create: {
     *     // ... data to create a Favorite
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favorite we want to update
     *   }
     * })
     */
    upsert<T extends FavoriteUpsertArgs>(args: SelectSubset<T, FavoriteUpsertArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteCountArgs} args - Arguments to filter Favorites to count.
     * @example
     * // Count the number of Favorites
     * const count = await prisma.favorite.count({
     *   where: {
     *     // ... the filter for the Favorites we want to count
     *   }
     * })
    **/
    count<T extends FavoriteCountArgs>(
      args?: Subset<T, FavoriteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoriteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favorite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoriteAggregateArgs>(args: Subset<T, FavoriteAggregateArgs>): Prisma.PrismaPromise<GetFavoriteAggregateType<T>>

    /**
     * Group by Favorite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoriteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoriteGroupByArgs['orderBy'] }
        : { orderBy?: FavoriteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoriteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoriteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Favorite model
   */
  readonly fields: FavoriteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Favorite.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoriteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    listing<T extends ListingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListingDefaultArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Favorite model
   */
  interface FavoriteFieldRefs {
    readonly userId: FieldRef<"Favorite", 'String'>
    readonly listingId: FieldRef<"Favorite", 'String'>
    readonly createdAt: FieldRef<"Favorite", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Favorite findUnique
   */
  export type FavoriteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite findUniqueOrThrow
   */
  export type FavoriteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite findFirst
   */
  export type FavoriteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favorites.
     */
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite findFirstOrThrow
   */
  export type FavoriteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favorites.
     */
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite findMany
   */
  export type FavoriteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorites to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite create
   */
  export type FavoriteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * The data needed to create a Favorite.
     */
    data: XOR<FavoriteCreateInput, FavoriteUncheckedCreateInput>
  }

  /**
   * Favorite createMany
   */
  export type FavoriteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Favorites.
     */
    data: FavoriteCreateManyInput | FavoriteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Favorite createManyAndReturn
   */
  export type FavoriteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * The data used to create many Favorites.
     */
    data: FavoriteCreateManyInput | FavoriteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favorite update
   */
  export type FavoriteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * The data needed to update a Favorite.
     */
    data: XOR<FavoriteUpdateInput, FavoriteUncheckedUpdateInput>
    /**
     * Choose, which Favorite to update.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite updateMany
   */
  export type FavoriteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Favorites.
     */
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyInput>
    /**
     * Filter which Favorites to update
     */
    where?: FavoriteWhereInput
    /**
     * Limit how many Favorites to update.
     */
    limit?: number
  }

  /**
   * Favorite updateManyAndReturn
   */
  export type FavoriteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * The data used to update Favorites.
     */
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyInput>
    /**
     * Filter which Favorites to update
     */
    where?: FavoriteWhereInput
    /**
     * Limit how many Favorites to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favorite upsert
   */
  export type FavoriteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * The filter to search for the Favorite to update in case it exists.
     */
    where: FavoriteWhereUniqueInput
    /**
     * In case the Favorite found by the `where` argument doesn't exist, create a new Favorite with this data.
     */
    create: XOR<FavoriteCreateInput, FavoriteUncheckedCreateInput>
    /**
     * In case the Favorite was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoriteUpdateInput, FavoriteUncheckedUpdateInput>
  }

  /**
   * Favorite delete
   */
  export type FavoriteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter which Favorite to delete.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite deleteMany
   */
  export type FavoriteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorites to delete
     */
    where?: FavoriteWhereInput
    /**
     * Limit how many Favorites to delete.
     */
    limit?: number
  }

  /**
   * Favorite without action
   */
  export type FavoriteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
  }


  /**
   * Model Conversation
   */

  export type AggregateConversation = {
    _count: ConversationCountAggregateOutputType | null
    _min: ConversationMinAggregateOutputType | null
    _max: ConversationMaxAggregateOutputType | null
  }

  export type ConversationMinAggregateOutputType = {
    id: string | null
    listingId: string | null
    buyerId: string | null
    sellerId: string | null
    lastMessageAt: Date | null
    status: $Enums.ConversationStatus | null
    createdAt: Date | null
  }

  export type ConversationMaxAggregateOutputType = {
    id: string | null
    listingId: string | null
    buyerId: string | null
    sellerId: string | null
    lastMessageAt: Date | null
    status: $Enums.ConversationStatus | null
    createdAt: Date | null
  }

  export type ConversationCountAggregateOutputType = {
    id: number
    listingId: number
    buyerId: number
    sellerId: number
    lastMessageAt: number
    status: number
    createdAt: number
    _all: number
  }


  export type ConversationMinAggregateInputType = {
    id?: true
    listingId?: true
    buyerId?: true
    sellerId?: true
    lastMessageAt?: true
    status?: true
    createdAt?: true
  }

  export type ConversationMaxAggregateInputType = {
    id?: true
    listingId?: true
    buyerId?: true
    sellerId?: true
    lastMessageAt?: true
    status?: true
    createdAt?: true
  }

  export type ConversationCountAggregateInputType = {
    id?: true
    listingId?: true
    buyerId?: true
    sellerId?: true
    lastMessageAt?: true
    status?: true
    createdAt?: true
    _all?: true
  }

  export type ConversationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Conversation to aggregate.
     */
    where?: ConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Conversations to fetch.
     */
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Conversations
    **/
    _count?: true | ConversationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConversationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConversationMaxAggregateInputType
  }

  export type GetConversationAggregateType<T extends ConversationAggregateArgs> = {
        [P in keyof T & keyof AggregateConversation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConversation[P]>
      : GetScalarType<T[P], AggregateConversation[P]>
  }




  export type ConversationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConversationWhereInput
    orderBy?: ConversationOrderByWithAggregationInput | ConversationOrderByWithAggregationInput[]
    by: ConversationScalarFieldEnum[] | ConversationScalarFieldEnum
    having?: ConversationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConversationCountAggregateInputType | true
    _min?: ConversationMinAggregateInputType
    _max?: ConversationMaxAggregateInputType
  }

  export type ConversationGroupByOutputType = {
    id: string
    listingId: string
    buyerId: string
    sellerId: string
    lastMessageAt: Date | null
    status: $Enums.ConversationStatus
    createdAt: Date
    _count: ConversationCountAggregateOutputType | null
    _min: ConversationMinAggregateOutputType | null
    _max: ConversationMaxAggregateOutputType | null
  }

  type GetConversationGroupByPayload<T extends ConversationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConversationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConversationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConversationGroupByOutputType[P]>
            : GetScalarType<T[P], ConversationGroupByOutputType[P]>
        }
      >
    >


  export type ConversationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    buyerId?: boolean
    sellerId?: boolean
    lastMessageAt?: boolean
    status?: boolean
    createdAt?: boolean
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
    messages?: boolean | Conversation$messagesArgs<ExtArgs>
    _count?: boolean | ConversationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["conversation"]>

  export type ConversationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    buyerId?: boolean
    sellerId?: boolean
    lastMessageAt?: boolean
    status?: boolean
    createdAt?: boolean
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["conversation"]>

  export type ConversationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    buyerId?: boolean
    sellerId?: boolean
    lastMessageAt?: boolean
    status?: boolean
    createdAt?: boolean
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["conversation"]>

  export type ConversationSelectScalar = {
    id?: boolean
    listingId?: boolean
    buyerId?: boolean
    sellerId?: boolean
    lastMessageAt?: boolean
    status?: boolean
    createdAt?: boolean
  }

  export type ConversationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "listingId" | "buyerId" | "sellerId" | "lastMessageAt" | "status" | "createdAt", ExtArgs["result"]["conversation"]>
  export type ConversationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
    messages?: boolean | Conversation$messagesArgs<ExtArgs>
    _count?: boolean | ConversationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ConversationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ConversationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ConversationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Conversation"
    objects: {
      listing: Prisma.$ListingPayload<ExtArgs>
      buyer: Prisma.$UserPayload<ExtArgs>
      seller: Prisma.$UserPayload<ExtArgs>
      messages: Prisma.$MessagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      listingId: string
      buyerId: string
      sellerId: string
      lastMessageAt: Date | null
      status: $Enums.ConversationStatus
      createdAt: Date
    }, ExtArgs["result"]["conversation"]>
    composites: {}
  }

  type ConversationGetPayload<S extends boolean | null | undefined | ConversationDefaultArgs> = $Result.GetResult<Prisma.$ConversationPayload, S>

  type ConversationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ConversationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConversationCountAggregateInputType | true
    }

  export interface ConversationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Conversation'], meta: { name: 'Conversation' } }
    /**
     * Find zero or one Conversation that matches the filter.
     * @param {ConversationFindUniqueArgs} args - Arguments to find a Conversation
     * @example
     * // Get one Conversation
     * const conversation = await prisma.conversation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConversationFindUniqueArgs>(args: SelectSubset<T, ConversationFindUniqueArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Conversation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ConversationFindUniqueOrThrowArgs} args - Arguments to find a Conversation
     * @example
     * // Get one Conversation
     * const conversation = await prisma.conversation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConversationFindUniqueOrThrowArgs>(args: SelectSubset<T, ConversationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Conversation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationFindFirstArgs} args - Arguments to find a Conversation
     * @example
     * // Get one Conversation
     * const conversation = await prisma.conversation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConversationFindFirstArgs>(args?: SelectSubset<T, ConversationFindFirstArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Conversation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationFindFirstOrThrowArgs} args - Arguments to find a Conversation
     * @example
     * // Get one Conversation
     * const conversation = await prisma.conversation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConversationFindFirstOrThrowArgs>(args?: SelectSubset<T, ConversationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Conversations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Conversations
     * const conversations = await prisma.conversation.findMany()
     * 
     * // Get first 10 Conversations
     * const conversations = await prisma.conversation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const conversationWithIdOnly = await prisma.conversation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConversationFindManyArgs>(args?: SelectSubset<T, ConversationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Conversation.
     * @param {ConversationCreateArgs} args - Arguments to create a Conversation.
     * @example
     * // Create one Conversation
     * const Conversation = await prisma.conversation.create({
     *   data: {
     *     // ... data to create a Conversation
     *   }
     * })
     * 
     */
    create<T extends ConversationCreateArgs>(args: SelectSubset<T, ConversationCreateArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Conversations.
     * @param {ConversationCreateManyArgs} args - Arguments to create many Conversations.
     * @example
     * // Create many Conversations
     * const conversation = await prisma.conversation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConversationCreateManyArgs>(args?: SelectSubset<T, ConversationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Conversations and returns the data saved in the database.
     * @param {ConversationCreateManyAndReturnArgs} args - Arguments to create many Conversations.
     * @example
     * // Create many Conversations
     * const conversation = await prisma.conversation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Conversations and only return the `id`
     * const conversationWithIdOnly = await prisma.conversation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConversationCreateManyAndReturnArgs>(args?: SelectSubset<T, ConversationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Conversation.
     * @param {ConversationDeleteArgs} args - Arguments to delete one Conversation.
     * @example
     * // Delete one Conversation
     * const Conversation = await prisma.conversation.delete({
     *   where: {
     *     // ... filter to delete one Conversation
     *   }
     * })
     * 
     */
    delete<T extends ConversationDeleteArgs>(args: SelectSubset<T, ConversationDeleteArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Conversation.
     * @param {ConversationUpdateArgs} args - Arguments to update one Conversation.
     * @example
     * // Update one Conversation
     * const conversation = await prisma.conversation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConversationUpdateArgs>(args: SelectSubset<T, ConversationUpdateArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Conversations.
     * @param {ConversationDeleteManyArgs} args - Arguments to filter Conversations to delete.
     * @example
     * // Delete a few Conversations
     * const { count } = await prisma.conversation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConversationDeleteManyArgs>(args?: SelectSubset<T, ConversationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Conversations
     * const conversation = await prisma.conversation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConversationUpdateManyArgs>(args: SelectSubset<T, ConversationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Conversations and returns the data updated in the database.
     * @param {ConversationUpdateManyAndReturnArgs} args - Arguments to update many Conversations.
     * @example
     * // Update many Conversations
     * const conversation = await prisma.conversation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Conversations and only return the `id`
     * const conversationWithIdOnly = await prisma.conversation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ConversationUpdateManyAndReturnArgs>(args: SelectSubset<T, ConversationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Conversation.
     * @param {ConversationUpsertArgs} args - Arguments to update or create a Conversation.
     * @example
     * // Update or create a Conversation
     * const conversation = await prisma.conversation.upsert({
     *   create: {
     *     // ... data to create a Conversation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Conversation we want to update
     *   }
     * })
     */
    upsert<T extends ConversationUpsertArgs>(args: SelectSubset<T, ConversationUpsertArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationCountArgs} args - Arguments to filter Conversations to count.
     * @example
     * // Count the number of Conversations
     * const count = await prisma.conversation.count({
     *   where: {
     *     // ... the filter for the Conversations we want to count
     *   }
     * })
    **/
    count<T extends ConversationCountArgs>(
      args?: Subset<T, ConversationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConversationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Conversation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConversationAggregateArgs>(args: Subset<T, ConversationAggregateArgs>): Prisma.PrismaPromise<GetConversationAggregateType<T>>

    /**
     * Group by Conversation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConversationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConversationGroupByArgs['orderBy'] }
        : { orderBy?: ConversationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConversationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConversationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Conversation model
   */
  readonly fields: ConversationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Conversation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConversationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    listing<T extends ListingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListingDefaultArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    buyer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    seller<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    messages<T extends Conversation$messagesArgs<ExtArgs> = {}>(args?: Subset<T, Conversation$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Conversation model
   */
  interface ConversationFieldRefs {
    readonly id: FieldRef<"Conversation", 'String'>
    readonly listingId: FieldRef<"Conversation", 'String'>
    readonly buyerId: FieldRef<"Conversation", 'String'>
    readonly sellerId: FieldRef<"Conversation", 'String'>
    readonly lastMessageAt: FieldRef<"Conversation", 'DateTime'>
    readonly status: FieldRef<"Conversation", 'ConversationStatus'>
    readonly createdAt: FieldRef<"Conversation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Conversation findUnique
   */
  export type ConversationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversation to fetch.
     */
    where: ConversationWhereUniqueInput
  }

  /**
   * Conversation findUniqueOrThrow
   */
  export type ConversationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversation to fetch.
     */
    where: ConversationWhereUniqueInput
  }

  /**
   * Conversation findFirst
   */
  export type ConversationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversation to fetch.
     */
    where?: ConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Conversations to fetch.
     */
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Conversations.
     */
    cursor?: ConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Conversations.
     */
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * Conversation findFirstOrThrow
   */
  export type ConversationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversation to fetch.
     */
    where?: ConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Conversations to fetch.
     */
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Conversations.
     */
    cursor?: ConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Conversations.
     */
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * Conversation findMany
   */
  export type ConversationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversations to fetch.
     */
    where?: ConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Conversations to fetch.
     */
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Conversations.
     */
    cursor?: ConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Conversations.
     */
    skip?: number
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * Conversation create
   */
  export type ConversationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * The data needed to create a Conversation.
     */
    data: XOR<ConversationCreateInput, ConversationUncheckedCreateInput>
  }

  /**
   * Conversation createMany
   */
  export type ConversationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Conversations.
     */
    data: ConversationCreateManyInput | ConversationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Conversation createManyAndReturn
   */
  export type ConversationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * The data used to create many Conversations.
     */
    data: ConversationCreateManyInput | ConversationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Conversation update
   */
  export type ConversationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * The data needed to update a Conversation.
     */
    data: XOR<ConversationUpdateInput, ConversationUncheckedUpdateInput>
    /**
     * Choose, which Conversation to update.
     */
    where: ConversationWhereUniqueInput
  }

  /**
   * Conversation updateMany
   */
  export type ConversationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Conversations.
     */
    data: XOR<ConversationUpdateManyMutationInput, ConversationUncheckedUpdateManyInput>
    /**
     * Filter which Conversations to update
     */
    where?: ConversationWhereInput
    /**
     * Limit how many Conversations to update.
     */
    limit?: number
  }

  /**
   * Conversation updateManyAndReturn
   */
  export type ConversationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * The data used to update Conversations.
     */
    data: XOR<ConversationUpdateManyMutationInput, ConversationUncheckedUpdateManyInput>
    /**
     * Filter which Conversations to update
     */
    where?: ConversationWhereInput
    /**
     * Limit how many Conversations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Conversation upsert
   */
  export type ConversationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * The filter to search for the Conversation to update in case it exists.
     */
    where: ConversationWhereUniqueInput
    /**
     * In case the Conversation found by the `where` argument doesn't exist, create a new Conversation with this data.
     */
    create: XOR<ConversationCreateInput, ConversationUncheckedCreateInput>
    /**
     * In case the Conversation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConversationUpdateInput, ConversationUncheckedUpdateInput>
  }

  /**
   * Conversation delete
   */
  export type ConversationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter which Conversation to delete.
     */
    where: ConversationWhereUniqueInput
  }

  /**
   * Conversation deleteMany
   */
  export type ConversationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Conversations to delete
     */
    where?: ConversationWhereInput
    /**
     * Limit how many Conversations to delete.
     */
    limit?: number
  }

  /**
   * Conversation.messages
   */
  export type Conversation$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Conversation without action
   */
  export type ConversationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conversation
     */
    omit?: ConversationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
  }


  /**
   * Model Message
   */

  export type AggregateMessage = {
    _count: MessageCountAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  export type MessageMinAggregateOutputType = {
    id: string | null
    conversationId: string | null
    senderId: string | null
    body: string | null
    mediaUrl: string | null
    createdAt: Date | null
    readAt: Date | null
  }

  export type MessageMaxAggregateOutputType = {
    id: string | null
    conversationId: string | null
    senderId: string | null
    body: string | null
    mediaUrl: string | null
    createdAt: Date | null
    readAt: Date | null
  }

  export type MessageCountAggregateOutputType = {
    id: number
    conversationId: number
    senderId: number
    body: number
    mediaUrl: number
    createdAt: number
    readAt: number
    _all: number
  }


  export type MessageMinAggregateInputType = {
    id?: true
    conversationId?: true
    senderId?: true
    body?: true
    mediaUrl?: true
    createdAt?: true
    readAt?: true
  }

  export type MessageMaxAggregateInputType = {
    id?: true
    conversationId?: true
    senderId?: true
    body?: true
    mediaUrl?: true
    createdAt?: true
    readAt?: true
  }

  export type MessageCountAggregateInputType = {
    id?: true
    conversationId?: true
    senderId?: true
    body?: true
    mediaUrl?: true
    createdAt?: true
    readAt?: true
    _all?: true
  }

  export type MessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Message to aggregate.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Messages
    **/
    _count?: true | MessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessageMaxAggregateInputType
  }

  export type GetMessageAggregateType<T extends MessageAggregateArgs> = {
        [P in keyof T & keyof AggregateMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessage[P]>
      : GetScalarType<T[P], AggregateMessage[P]>
  }




  export type MessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithAggregationInput | MessageOrderByWithAggregationInput[]
    by: MessageScalarFieldEnum[] | MessageScalarFieldEnum
    having?: MessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessageCountAggregateInputType | true
    _min?: MessageMinAggregateInputType
    _max?: MessageMaxAggregateInputType
  }

  export type MessageGroupByOutputType = {
    id: string
    conversationId: string
    senderId: string
    body: string | null
    mediaUrl: string | null
    createdAt: Date
    readAt: Date | null
    _count: MessageCountAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  type GetMessageGroupByPayload<T extends MessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessageGroupByOutputType[P]>
            : GetScalarType<T[P], MessageGroupByOutputType[P]>
        }
      >
    >


  export type MessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conversationId?: boolean
    senderId?: boolean
    body?: boolean
    mediaUrl?: boolean
    createdAt?: boolean
    readAt?: boolean
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conversationId?: boolean
    senderId?: boolean
    body?: boolean
    mediaUrl?: boolean
    createdAt?: boolean
    readAt?: boolean
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conversationId?: boolean
    senderId?: boolean
    body?: boolean
    mediaUrl?: boolean
    createdAt?: boolean
    readAt?: boolean
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectScalar = {
    id?: boolean
    conversationId?: boolean
    senderId?: boolean
    body?: boolean
    mediaUrl?: boolean
    createdAt?: boolean
    readAt?: boolean
  }

  export type MessageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "conversationId" | "senderId" | "body" | "mediaUrl" | "createdAt" | "readAt", ExtArgs["result"]["message"]>
  export type MessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MessageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MessageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Message"
    objects: {
      conversation: Prisma.$ConversationPayload<ExtArgs>
      sender: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      conversationId: string
      senderId: string
      body: string | null
      mediaUrl: string | null
      createdAt: Date
      readAt: Date | null
    }, ExtArgs["result"]["message"]>
    composites: {}
  }

  type MessageGetPayload<S extends boolean | null | undefined | MessageDefaultArgs> = $Result.GetResult<Prisma.$MessagePayload, S>

  type MessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MessageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MessageCountAggregateInputType | true
    }

  export interface MessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Message'], meta: { name: 'Message' } }
    /**
     * Find zero or one Message that matches the filter.
     * @param {MessageFindUniqueArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MessageFindUniqueArgs>(args: SelectSubset<T, MessageFindUniqueArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Message that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MessageFindUniqueOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MessageFindUniqueOrThrowArgs>(args: SelectSubset<T, MessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MessageFindFirstArgs>(args?: SelectSubset<T, MessageFindFirstArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MessageFindFirstOrThrowArgs>(args?: SelectSubset<T, MessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.message.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.message.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messageWithIdOnly = await prisma.message.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MessageFindManyArgs>(args?: SelectSubset<T, MessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Message.
     * @param {MessageCreateArgs} args - Arguments to create a Message.
     * @example
     * // Create one Message
     * const Message = await prisma.message.create({
     *   data: {
     *     // ... data to create a Message
     *   }
     * })
     * 
     */
    create<T extends MessageCreateArgs>(args: SelectSubset<T, MessageCreateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Messages.
     * @param {MessageCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MessageCreateManyArgs>(args?: SelectSubset<T, MessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Messages and returns the data saved in the database.
     * @param {MessageCreateManyAndReturnArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MessageCreateManyAndReturnArgs>(args?: SelectSubset<T, MessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Message.
     * @param {MessageDeleteArgs} args - Arguments to delete one Message.
     * @example
     * // Delete one Message
     * const Message = await prisma.message.delete({
     *   where: {
     *     // ... filter to delete one Message
     *   }
     * })
     * 
     */
    delete<T extends MessageDeleteArgs>(args: SelectSubset<T, MessageDeleteArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Message.
     * @param {MessageUpdateArgs} args - Arguments to update one Message.
     * @example
     * // Update one Message
     * const message = await prisma.message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MessageUpdateArgs>(args: SelectSubset<T, MessageUpdateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Messages.
     * @param {MessageDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MessageDeleteManyArgs>(args?: SelectSubset<T, MessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MessageUpdateManyArgs>(args: SelectSubset<T, MessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages and returns the data updated in the database.
     * @param {MessageUpdateManyAndReturnArgs} args - Arguments to update many Messages.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MessageUpdateManyAndReturnArgs>(args: SelectSubset<T, MessageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Message.
     * @param {MessageUpsertArgs} args - Arguments to update or create a Message.
     * @example
     * // Update or create a Message
     * const message = await prisma.message.upsert({
     *   create: {
     *     // ... data to create a Message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Message we want to update
     *   }
     * })
     */
    upsert<T extends MessageUpsertArgs>(args: SelectSubset<T, MessageUpsertArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.message.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends MessageCountArgs>(
      args?: Subset<T, MessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessageAggregateArgs>(args: Subset<T, MessageAggregateArgs>): Prisma.PrismaPromise<GetMessageAggregateType<T>>

    /**
     * Group by Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessageGroupByArgs['orderBy'] }
        : { orderBy?: MessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Message model
   */
  readonly fields: MessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    conversation<T extends ConversationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConversationDefaultArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sender<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Message model
   */
  interface MessageFieldRefs {
    readonly id: FieldRef<"Message", 'String'>
    readonly conversationId: FieldRef<"Message", 'String'>
    readonly senderId: FieldRef<"Message", 'String'>
    readonly body: FieldRef<"Message", 'String'>
    readonly mediaUrl: FieldRef<"Message", 'String'>
    readonly createdAt: FieldRef<"Message", 'DateTime'>
    readonly readAt: FieldRef<"Message", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Message findUnique
   */
  export type MessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findUniqueOrThrow
   */
  export type MessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findFirst
   */
  export type MessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findFirstOrThrow
   */
  export type MessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findMany
   */
  export type MessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message create
   */
  export type MessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to create a Message.
     */
    data: XOR<MessageCreateInput, MessageUncheckedCreateInput>
  }

  /**
   * Message createMany
   */
  export type MessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Message createManyAndReturn
   */
  export type MessageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message update
   */
  export type MessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to update a Message.
     */
    data: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
    /**
     * Choose, which Message to update.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message updateMany
   */
  export type MessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to update.
     */
    limit?: number
  }

  /**
   * Message updateManyAndReturn
   */
  export type MessageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message upsert
   */
  export type MessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The filter to search for the Message to update in case it exists.
     */
    where: MessageWhereUniqueInput
    /**
     * In case the Message found by the `where` argument doesn't exist, create a new Message with this data.
     */
    create: XOR<MessageCreateInput, MessageUncheckedCreateInput>
    /**
     * In case the Message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
  }

  /**
   * Message delete
   */
  export type MessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter which Message to delete.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message deleteMany
   */
  export type MessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Messages to delete
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to delete.
     */
    limit?: number
  }

  /**
   * Message without action
   */
  export type MessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
  }


  /**
   * Model Report
   */

  export type AggregateReport = {
    _count: ReportCountAggregateOutputType | null
    _min: ReportMinAggregateOutputType | null
    _max: ReportMaxAggregateOutputType | null
  }

  export type ReportMinAggregateOutputType = {
    id: string | null
    reporterId: string | null
    targetType: $Enums.ReportTarget | null
    targetId: string | null
    reason: string | null
    detailsText: string | null
    status: $Enums.ReportStatus | null
    createdAt: Date | null
    closedAt: Date | null
    adminId: string | null
  }

  export type ReportMaxAggregateOutputType = {
    id: string | null
    reporterId: string | null
    targetType: $Enums.ReportTarget | null
    targetId: string | null
    reason: string | null
    detailsText: string | null
    status: $Enums.ReportStatus | null
    createdAt: Date | null
    closedAt: Date | null
    adminId: string | null
  }

  export type ReportCountAggregateOutputType = {
    id: number
    reporterId: number
    targetType: number
    targetId: number
    reason: number
    detailsText: number
    status: number
    createdAt: number
    closedAt: number
    adminId: number
    _all: number
  }


  export type ReportMinAggregateInputType = {
    id?: true
    reporterId?: true
    targetType?: true
    targetId?: true
    reason?: true
    detailsText?: true
    status?: true
    createdAt?: true
    closedAt?: true
    adminId?: true
  }

  export type ReportMaxAggregateInputType = {
    id?: true
    reporterId?: true
    targetType?: true
    targetId?: true
    reason?: true
    detailsText?: true
    status?: true
    createdAt?: true
    closedAt?: true
    adminId?: true
  }

  export type ReportCountAggregateInputType = {
    id?: true
    reporterId?: true
    targetType?: true
    targetId?: true
    reason?: true
    detailsText?: true
    status?: true
    createdAt?: true
    closedAt?: true
    adminId?: true
    _all?: true
  }

  export type ReportAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Report to aggregate.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reports
    **/
    _count?: true | ReportCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportMaxAggregateInputType
  }

  export type GetReportAggregateType<T extends ReportAggregateArgs> = {
        [P in keyof T & keyof AggregateReport]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReport[P]>
      : GetScalarType<T[P], AggregateReport[P]>
  }




  export type ReportGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithAggregationInput | ReportOrderByWithAggregationInput[]
    by: ReportScalarFieldEnum[] | ReportScalarFieldEnum
    having?: ReportScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportCountAggregateInputType | true
    _min?: ReportMinAggregateInputType
    _max?: ReportMaxAggregateInputType
  }

  export type ReportGroupByOutputType = {
    id: string
    reporterId: string
    targetType: $Enums.ReportTarget
    targetId: string
    reason: string
    detailsText: string | null
    status: $Enums.ReportStatus
    createdAt: Date
    closedAt: Date | null
    adminId: string | null
    _count: ReportCountAggregateOutputType | null
    _min: ReportMinAggregateOutputType | null
    _max: ReportMaxAggregateOutputType | null
  }

  type GetReportGroupByPayload<T extends ReportGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportGroupByOutputType[P]>
            : GetScalarType<T[P], ReportGroupByOutputType[P]>
        }
      >
    >


  export type ReportSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reporterId?: boolean
    targetType?: boolean
    targetId?: boolean
    reason?: boolean
    detailsText?: boolean
    status?: boolean
    createdAt?: boolean
    closedAt?: boolean
    adminId?: boolean
    reporter?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report"]>

  export type ReportSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reporterId?: boolean
    targetType?: boolean
    targetId?: boolean
    reason?: boolean
    detailsText?: boolean
    status?: boolean
    createdAt?: boolean
    closedAt?: boolean
    adminId?: boolean
    reporter?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report"]>

  export type ReportSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reporterId?: boolean
    targetType?: boolean
    targetId?: boolean
    reason?: boolean
    detailsText?: boolean
    status?: boolean
    createdAt?: boolean
    closedAt?: boolean
    adminId?: boolean
    reporter?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report"]>

  export type ReportSelectScalar = {
    id?: boolean
    reporterId?: boolean
    targetType?: boolean
    targetId?: boolean
    reason?: boolean
    detailsText?: boolean
    status?: boolean
    createdAt?: boolean
    closedAt?: boolean
    adminId?: boolean
  }

  export type ReportOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "reporterId" | "targetType" | "targetId" | "reason" | "detailsText" | "status" | "createdAt" | "closedAt" | "adminId", ExtArgs["result"]["report"]>
  export type ReportInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reporter?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ReportIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reporter?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ReportIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reporter?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ReportPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Report"
    objects: {
      reporter: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      reporterId: string
      targetType: $Enums.ReportTarget
      targetId: string
      reason: string
      detailsText: string | null
      status: $Enums.ReportStatus
      createdAt: Date
      closedAt: Date | null
      adminId: string | null
    }, ExtArgs["result"]["report"]>
    composites: {}
  }

  type ReportGetPayload<S extends boolean | null | undefined | ReportDefaultArgs> = $Result.GetResult<Prisma.$ReportPayload, S>

  type ReportCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReportFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportCountAggregateInputType | true
    }

  export interface ReportDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Report'], meta: { name: 'Report' } }
    /**
     * Find zero or one Report that matches the filter.
     * @param {ReportFindUniqueArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReportFindUniqueArgs>(args: SelectSubset<T, ReportFindUniqueArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Report that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReportFindUniqueOrThrowArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReportFindUniqueOrThrowArgs>(args: SelectSubset<T, ReportFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Report that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportFindFirstArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReportFindFirstArgs>(args?: SelectSubset<T, ReportFindFirstArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Report that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportFindFirstOrThrowArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReportFindFirstOrThrowArgs>(args?: SelectSubset<T, ReportFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reports
     * const reports = await prisma.report.findMany()
     * 
     * // Get first 10 Reports
     * const reports = await prisma.report.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportWithIdOnly = await prisma.report.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReportFindManyArgs>(args?: SelectSubset<T, ReportFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Report.
     * @param {ReportCreateArgs} args - Arguments to create a Report.
     * @example
     * // Create one Report
     * const Report = await prisma.report.create({
     *   data: {
     *     // ... data to create a Report
     *   }
     * })
     * 
     */
    create<T extends ReportCreateArgs>(args: SelectSubset<T, ReportCreateArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reports.
     * @param {ReportCreateManyArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const report = await prisma.report.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReportCreateManyArgs>(args?: SelectSubset<T, ReportCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reports and returns the data saved in the database.
     * @param {ReportCreateManyAndReturnArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const report = await prisma.report.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reports and only return the `id`
     * const reportWithIdOnly = await prisma.report.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReportCreateManyAndReturnArgs>(args?: SelectSubset<T, ReportCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Report.
     * @param {ReportDeleteArgs} args - Arguments to delete one Report.
     * @example
     * // Delete one Report
     * const Report = await prisma.report.delete({
     *   where: {
     *     // ... filter to delete one Report
     *   }
     * })
     * 
     */
    delete<T extends ReportDeleteArgs>(args: SelectSubset<T, ReportDeleteArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Report.
     * @param {ReportUpdateArgs} args - Arguments to update one Report.
     * @example
     * // Update one Report
     * const report = await prisma.report.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReportUpdateArgs>(args: SelectSubset<T, ReportUpdateArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reports.
     * @param {ReportDeleteManyArgs} args - Arguments to filter Reports to delete.
     * @example
     * // Delete a few Reports
     * const { count } = await prisma.report.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReportDeleteManyArgs>(args?: SelectSubset<T, ReportDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reports
     * const report = await prisma.report.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReportUpdateManyArgs>(args: SelectSubset<T, ReportUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reports and returns the data updated in the database.
     * @param {ReportUpdateManyAndReturnArgs} args - Arguments to update many Reports.
     * @example
     * // Update many Reports
     * const report = await prisma.report.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reports and only return the `id`
     * const reportWithIdOnly = await prisma.report.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReportUpdateManyAndReturnArgs>(args: SelectSubset<T, ReportUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Report.
     * @param {ReportUpsertArgs} args - Arguments to update or create a Report.
     * @example
     * // Update or create a Report
     * const report = await prisma.report.upsert({
     *   create: {
     *     // ... data to create a Report
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Report we want to update
     *   }
     * })
     */
    upsert<T extends ReportUpsertArgs>(args: SelectSubset<T, ReportUpsertArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportCountArgs} args - Arguments to filter Reports to count.
     * @example
     * // Count the number of Reports
     * const count = await prisma.report.count({
     *   where: {
     *     // ... the filter for the Reports we want to count
     *   }
     * })
    **/
    count<T extends ReportCountArgs>(
      args?: Subset<T, ReportCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Report.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportAggregateArgs>(args: Subset<T, ReportAggregateArgs>): Prisma.PrismaPromise<GetReportAggregateType<T>>

    /**
     * Group by Report.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReportGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReportGroupByArgs['orderBy'] }
        : { orderBy?: ReportGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReportGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Report model
   */
  readonly fields: ReportFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Report.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReportClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reporter<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Report model
   */
  interface ReportFieldRefs {
    readonly id: FieldRef<"Report", 'String'>
    readonly reporterId: FieldRef<"Report", 'String'>
    readonly targetType: FieldRef<"Report", 'ReportTarget'>
    readonly targetId: FieldRef<"Report", 'String'>
    readonly reason: FieldRef<"Report", 'String'>
    readonly detailsText: FieldRef<"Report", 'String'>
    readonly status: FieldRef<"Report", 'ReportStatus'>
    readonly createdAt: FieldRef<"Report", 'DateTime'>
    readonly closedAt: FieldRef<"Report", 'DateTime'>
    readonly adminId: FieldRef<"Report", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Report findUnique
   */
  export type ReportFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report findUniqueOrThrow
   */
  export type ReportFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report findFirst
   */
  export type ReportFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reports.
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reports.
     */
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Report findFirstOrThrow
   */
  export type ReportFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reports.
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reports.
     */
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Report findMany
   */
  export type ReportFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Reports to fetch.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reports.
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Report create
   */
  export type ReportCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * The data needed to create a Report.
     */
    data: XOR<ReportCreateInput, ReportUncheckedCreateInput>
  }

  /**
   * Report createMany
   */
  export type ReportCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reports.
     */
    data: ReportCreateManyInput | ReportCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Report createManyAndReturn
   */
  export type ReportCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * The data used to create many Reports.
     */
    data: ReportCreateManyInput | ReportCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Report update
   */
  export type ReportUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * The data needed to update a Report.
     */
    data: XOR<ReportUpdateInput, ReportUncheckedUpdateInput>
    /**
     * Choose, which Report to update.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report updateMany
   */
  export type ReportUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reports.
     */
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyInput>
    /**
     * Filter which Reports to update
     */
    where?: ReportWhereInput
    /**
     * Limit how many Reports to update.
     */
    limit?: number
  }

  /**
   * Report updateManyAndReturn
   */
  export type ReportUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * The data used to update Reports.
     */
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyInput>
    /**
     * Filter which Reports to update
     */
    where?: ReportWhereInput
    /**
     * Limit how many Reports to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Report upsert
   */
  export type ReportUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * The filter to search for the Report to update in case it exists.
     */
    where: ReportWhereUniqueInput
    /**
     * In case the Report found by the `where` argument doesn't exist, create a new Report with this data.
     */
    create: XOR<ReportCreateInput, ReportUncheckedCreateInput>
    /**
     * In case the Report was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReportUpdateInput, ReportUncheckedUpdateInput>
  }

  /**
   * Report delete
   */
  export type ReportDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter which Report to delete.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report deleteMany
   */
  export type ReportDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reports to delete
     */
    where?: ReportWhereInput
    /**
     * Limit how many Reports to delete.
     */
    limit?: number
  }

  /**
   * Report without action
   */
  export type ReportDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
  }


  /**
   * Model PromotionPlan
   */

  export type AggregatePromotionPlan = {
    _count: PromotionPlanCountAggregateOutputType | null
    _avg: PromotionPlanAvgAggregateOutputType | null
    _sum: PromotionPlanSumAggregateOutputType | null
    _min: PromotionPlanMinAggregateOutputType | null
    _max: PromotionPlanMaxAggregateOutputType | null
  }

  export type PromotionPlanAvgAggregateOutputType = {
    durationDays: number | null
    priceAmount: Decimal | null
    sortOrder: number | null
  }

  export type PromotionPlanSumAggregateOutputType = {
    durationDays: number | null
    priceAmount: Decimal | null
    sortOrder: number | null
  }

  export type PromotionPlanMinAggregateOutputType = {
    id: string | null
    code: string | null
    name: string | null
    description: string | null
    type: $Enums.PromotionType | null
    durationDays: number | null
    priceAmount: Decimal | null
    currency: string | null
    isActive: boolean | null
    sortOrder: number | null
  }

  export type PromotionPlanMaxAggregateOutputType = {
    id: string | null
    code: string | null
    name: string | null
    description: string | null
    type: $Enums.PromotionType | null
    durationDays: number | null
    priceAmount: Decimal | null
    currency: string | null
    isActive: boolean | null
    sortOrder: number | null
  }

  export type PromotionPlanCountAggregateOutputType = {
    id: number
    code: number
    name: number
    description: number
    type: number
    durationDays: number
    priceAmount: number
    currency: number
    isActive: number
    sortOrder: number
    _all: number
  }


  export type PromotionPlanAvgAggregateInputType = {
    durationDays?: true
    priceAmount?: true
    sortOrder?: true
  }

  export type PromotionPlanSumAggregateInputType = {
    durationDays?: true
    priceAmount?: true
    sortOrder?: true
  }

  export type PromotionPlanMinAggregateInputType = {
    id?: true
    code?: true
    name?: true
    description?: true
    type?: true
    durationDays?: true
    priceAmount?: true
    currency?: true
    isActive?: true
    sortOrder?: true
  }

  export type PromotionPlanMaxAggregateInputType = {
    id?: true
    code?: true
    name?: true
    description?: true
    type?: true
    durationDays?: true
    priceAmount?: true
    currency?: true
    isActive?: true
    sortOrder?: true
  }

  export type PromotionPlanCountAggregateInputType = {
    id?: true
    code?: true
    name?: true
    description?: true
    type?: true
    durationDays?: true
    priceAmount?: true
    currency?: true
    isActive?: true
    sortOrder?: true
    _all?: true
  }

  export type PromotionPlanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionPlan to aggregate.
     */
    where?: PromotionPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionPlans to fetch.
     */
    orderBy?: PromotionPlanOrderByWithRelationInput | PromotionPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionPlans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PromotionPlans
    **/
    _count?: true | PromotionPlanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromotionPlanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromotionPlanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionPlanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionPlanMaxAggregateInputType
  }

  export type GetPromotionPlanAggregateType<T extends PromotionPlanAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotionPlan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotionPlan[P]>
      : GetScalarType<T[P], AggregatePromotionPlan[P]>
  }




  export type PromotionPlanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionPlanWhereInput
    orderBy?: PromotionPlanOrderByWithAggregationInput | PromotionPlanOrderByWithAggregationInput[]
    by: PromotionPlanScalarFieldEnum[] | PromotionPlanScalarFieldEnum
    having?: PromotionPlanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionPlanCountAggregateInputType | true
    _avg?: PromotionPlanAvgAggregateInputType
    _sum?: PromotionPlanSumAggregateInputType
    _min?: PromotionPlanMinAggregateInputType
    _max?: PromotionPlanMaxAggregateInputType
  }

  export type PromotionPlanGroupByOutputType = {
    id: string
    code: string
    name: string
    description: string | null
    type: $Enums.PromotionType
    durationDays: number
    priceAmount: Decimal
    currency: string
    isActive: boolean
    sortOrder: number
    _count: PromotionPlanCountAggregateOutputType | null
    _avg: PromotionPlanAvgAggregateOutputType | null
    _sum: PromotionPlanSumAggregateOutputType | null
    _min: PromotionPlanMinAggregateOutputType | null
    _max: PromotionPlanMaxAggregateOutputType | null
  }

  type GetPromotionPlanGroupByPayload<T extends PromotionPlanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionPlanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionPlanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionPlanGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionPlanGroupByOutputType[P]>
        }
      >
    >


  export type PromotionPlanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    durationDays?: boolean
    priceAmount?: boolean
    currency?: boolean
    isActive?: boolean
    sortOrder?: boolean
    orders?: boolean | PromotionPlan$ordersArgs<ExtArgs>
    _count?: boolean | PromotionPlanCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionPlan"]>

  export type PromotionPlanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    durationDays?: boolean
    priceAmount?: boolean
    currency?: boolean
    isActive?: boolean
    sortOrder?: boolean
  }, ExtArgs["result"]["promotionPlan"]>

  export type PromotionPlanSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    durationDays?: boolean
    priceAmount?: boolean
    currency?: boolean
    isActive?: boolean
    sortOrder?: boolean
  }, ExtArgs["result"]["promotionPlan"]>

  export type PromotionPlanSelectScalar = {
    id?: boolean
    code?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    durationDays?: boolean
    priceAmount?: boolean
    currency?: boolean
    isActive?: boolean
    sortOrder?: boolean
  }

  export type PromotionPlanOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "code" | "name" | "description" | "type" | "durationDays" | "priceAmount" | "currency" | "isActive" | "sortOrder", ExtArgs["result"]["promotionPlan"]>
  export type PromotionPlanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | PromotionPlan$ordersArgs<ExtArgs>
    _count?: boolean | PromotionPlanCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PromotionPlanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PromotionPlanIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PromotionPlanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PromotionPlan"
    objects: {
      orders: Prisma.$PromotionOrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      code: string
      name: string
      description: string | null
      type: $Enums.PromotionType
      durationDays: number
      priceAmount: Prisma.Decimal
      currency: string
      isActive: boolean
      sortOrder: number
    }, ExtArgs["result"]["promotionPlan"]>
    composites: {}
  }

  type PromotionPlanGetPayload<S extends boolean | null | undefined | PromotionPlanDefaultArgs> = $Result.GetResult<Prisma.$PromotionPlanPayload, S>

  type PromotionPlanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PromotionPlanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PromotionPlanCountAggregateInputType | true
    }

  export interface PromotionPlanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PromotionPlan'], meta: { name: 'PromotionPlan' } }
    /**
     * Find zero or one PromotionPlan that matches the filter.
     * @param {PromotionPlanFindUniqueArgs} args - Arguments to find a PromotionPlan
     * @example
     * // Get one PromotionPlan
     * const promotionPlan = await prisma.promotionPlan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromotionPlanFindUniqueArgs>(args: SelectSubset<T, PromotionPlanFindUniqueArgs<ExtArgs>>): Prisma__PromotionPlanClient<$Result.GetResult<Prisma.$PromotionPlanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PromotionPlan that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PromotionPlanFindUniqueOrThrowArgs} args - Arguments to find a PromotionPlan
     * @example
     * // Get one PromotionPlan
     * const promotionPlan = await prisma.promotionPlan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromotionPlanFindUniqueOrThrowArgs>(args: SelectSubset<T, PromotionPlanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromotionPlanClient<$Result.GetResult<Prisma.$PromotionPlanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PromotionPlan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionPlanFindFirstArgs} args - Arguments to find a PromotionPlan
     * @example
     * // Get one PromotionPlan
     * const promotionPlan = await prisma.promotionPlan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromotionPlanFindFirstArgs>(args?: SelectSubset<T, PromotionPlanFindFirstArgs<ExtArgs>>): Prisma__PromotionPlanClient<$Result.GetResult<Prisma.$PromotionPlanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PromotionPlan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionPlanFindFirstOrThrowArgs} args - Arguments to find a PromotionPlan
     * @example
     * // Get one PromotionPlan
     * const promotionPlan = await prisma.promotionPlan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromotionPlanFindFirstOrThrowArgs>(args?: SelectSubset<T, PromotionPlanFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromotionPlanClient<$Result.GetResult<Prisma.$PromotionPlanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PromotionPlans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionPlanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PromotionPlans
     * const promotionPlans = await prisma.promotionPlan.findMany()
     * 
     * // Get first 10 PromotionPlans
     * const promotionPlans = await prisma.promotionPlan.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionPlanWithIdOnly = await prisma.promotionPlan.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PromotionPlanFindManyArgs>(args?: SelectSubset<T, PromotionPlanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPlanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PromotionPlan.
     * @param {PromotionPlanCreateArgs} args - Arguments to create a PromotionPlan.
     * @example
     * // Create one PromotionPlan
     * const PromotionPlan = await prisma.promotionPlan.create({
     *   data: {
     *     // ... data to create a PromotionPlan
     *   }
     * })
     * 
     */
    create<T extends PromotionPlanCreateArgs>(args: SelectSubset<T, PromotionPlanCreateArgs<ExtArgs>>): Prisma__PromotionPlanClient<$Result.GetResult<Prisma.$PromotionPlanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PromotionPlans.
     * @param {PromotionPlanCreateManyArgs} args - Arguments to create many PromotionPlans.
     * @example
     * // Create many PromotionPlans
     * const promotionPlan = await prisma.promotionPlan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromotionPlanCreateManyArgs>(args?: SelectSubset<T, PromotionPlanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PromotionPlans and returns the data saved in the database.
     * @param {PromotionPlanCreateManyAndReturnArgs} args - Arguments to create many PromotionPlans.
     * @example
     * // Create many PromotionPlans
     * const promotionPlan = await prisma.promotionPlan.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PromotionPlans and only return the `id`
     * const promotionPlanWithIdOnly = await prisma.promotionPlan.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PromotionPlanCreateManyAndReturnArgs>(args?: SelectSubset<T, PromotionPlanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPlanPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PromotionPlan.
     * @param {PromotionPlanDeleteArgs} args - Arguments to delete one PromotionPlan.
     * @example
     * // Delete one PromotionPlan
     * const PromotionPlan = await prisma.promotionPlan.delete({
     *   where: {
     *     // ... filter to delete one PromotionPlan
     *   }
     * })
     * 
     */
    delete<T extends PromotionPlanDeleteArgs>(args: SelectSubset<T, PromotionPlanDeleteArgs<ExtArgs>>): Prisma__PromotionPlanClient<$Result.GetResult<Prisma.$PromotionPlanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PromotionPlan.
     * @param {PromotionPlanUpdateArgs} args - Arguments to update one PromotionPlan.
     * @example
     * // Update one PromotionPlan
     * const promotionPlan = await prisma.promotionPlan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromotionPlanUpdateArgs>(args: SelectSubset<T, PromotionPlanUpdateArgs<ExtArgs>>): Prisma__PromotionPlanClient<$Result.GetResult<Prisma.$PromotionPlanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PromotionPlans.
     * @param {PromotionPlanDeleteManyArgs} args - Arguments to filter PromotionPlans to delete.
     * @example
     * // Delete a few PromotionPlans
     * const { count } = await prisma.promotionPlan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromotionPlanDeleteManyArgs>(args?: SelectSubset<T, PromotionPlanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PromotionPlans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionPlanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PromotionPlans
     * const promotionPlan = await prisma.promotionPlan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromotionPlanUpdateManyArgs>(args: SelectSubset<T, PromotionPlanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PromotionPlans and returns the data updated in the database.
     * @param {PromotionPlanUpdateManyAndReturnArgs} args - Arguments to update many PromotionPlans.
     * @example
     * // Update many PromotionPlans
     * const promotionPlan = await prisma.promotionPlan.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PromotionPlans and only return the `id`
     * const promotionPlanWithIdOnly = await prisma.promotionPlan.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PromotionPlanUpdateManyAndReturnArgs>(args: SelectSubset<T, PromotionPlanUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPlanPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PromotionPlan.
     * @param {PromotionPlanUpsertArgs} args - Arguments to update or create a PromotionPlan.
     * @example
     * // Update or create a PromotionPlan
     * const promotionPlan = await prisma.promotionPlan.upsert({
     *   create: {
     *     // ... data to create a PromotionPlan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PromotionPlan we want to update
     *   }
     * })
     */
    upsert<T extends PromotionPlanUpsertArgs>(args: SelectSubset<T, PromotionPlanUpsertArgs<ExtArgs>>): Prisma__PromotionPlanClient<$Result.GetResult<Prisma.$PromotionPlanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PromotionPlans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionPlanCountArgs} args - Arguments to filter PromotionPlans to count.
     * @example
     * // Count the number of PromotionPlans
     * const count = await prisma.promotionPlan.count({
     *   where: {
     *     // ... the filter for the PromotionPlans we want to count
     *   }
     * })
    **/
    count<T extends PromotionPlanCountArgs>(
      args?: Subset<T, PromotionPlanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionPlanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PromotionPlan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionPlanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionPlanAggregateArgs>(args: Subset<T, PromotionPlanAggregateArgs>): Prisma.PrismaPromise<GetPromotionPlanAggregateType<T>>

    /**
     * Group by PromotionPlan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionPlanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionPlanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionPlanGroupByArgs['orderBy'] }
        : { orderBy?: PromotionPlanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionPlanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionPlanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PromotionPlan model
   */
  readonly fields: PromotionPlanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PromotionPlan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionPlanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends PromotionPlan$ordersArgs<ExtArgs> = {}>(args?: Subset<T, PromotionPlan$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PromotionPlan model
   */
  interface PromotionPlanFieldRefs {
    readonly id: FieldRef<"PromotionPlan", 'String'>
    readonly code: FieldRef<"PromotionPlan", 'String'>
    readonly name: FieldRef<"PromotionPlan", 'String'>
    readonly description: FieldRef<"PromotionPlan", 'String'>
    readonly type: FieldRef<"PromotionPlan", 'PromotionType'>
    readonly durationDays: FieldRef<"PromotionPlan", 'Int'>
    readonly priceAmount: FieldRef<"PromotionPlan", 'Decimal'>
    readonly currency: FieldRef<"PromotionPlan", 'String'>
    readonly isActive: FieldRef<"PromotionPlan", 'Boolean'>
    readonly sortOrder: FieldRef<"PromotionPlan", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * PromotionPlan findUnique
   */
  export type PromotionPlanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlan
     */
    select?: PromotionPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionPlan
     */
    omit?: PromotionPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionPlanInclude<ExtArgs> | null
    /**
     * Filter, which PromotionPlan to fetch.
     */
    where: PromotionPlanWhereUniqueInput
  }

  /**
   * PromotionPlan findUniqueOrThrow
   */
  export type PromotionPlanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlan
     */
    select?: PromotionPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionPlan
     */
    omit?: PromotionPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionPlanInclude<ExtArgs> | null
    /**
     * Filter, which PromotionPlan to fetch.
     */
    where: PromotionPlanWhereUniqueInput
  }

  /**
   * PromotionPlan findFirst
   */
  export type PromotionPlanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlan
     */
    select?: PromotionPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionPlan
     */
    omit?: PromotionPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionPlanInclude<ExtArgs> | null
    /**
     * Filter, which PromotionPlan to fetch.
     */
    where?: PromotionPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionPlans to fetch.
     */
    orderBy?: PromotionPlanOrderByWithRelationInput | PromotionPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionPlans.
     */
    cursor?: PromotionPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionPlans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionPlans.
     */
    distinct?: PromotionPlanScalarFieldEnum | PromotionPlanScalarFieldEnum[]
  }

  /**
   * PromotionPlan findFirstOrThrow
   */
  export type PromotionPlanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlan
     */
    select?: PromotionPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionPlan
     */
    omit?: PromotionPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionPlanInclude<ExtArgs> | null
    /**
     * Filter, which PromotionPlan to fetch.
     */
    where?: PromotionPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionPlans to fetch.
     */
    orderBy?: PromotionPlanOrderByWithRelationInput | PromotionPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionPlans.
     */
    cursor?: PromotionPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionPlans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionPlans.
     */
    distinct?: PromotionPlanScalarFieldEnum | PromotionPlanScalarFieldEnum[]
  }

  /**
   * PromotionPlan findMany
   */
  export type PromotionPlanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlan
     */
    select?: PromotionPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionPlan
     */
    omit?: PromotionPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionPlanInclude<ExtArgs> | null
    /**
     * Filter, which PromotionPlans to fetch.
     */
    where?: PromotionPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionPlans to fetch.
     */
    orderBy?: PromotionPlanOrderByWithRelationInput | PromotionPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PromotionPlans.
     */
    cursor?: PromotionPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionPlans.
     */
    skip?: number
    distinct?: PromotionPlanScalarFieldEnum | PromotionPlanScalarFieldEnum[]
  }

  /**
   * PromotionPlan create
   */
  export type PromotionPlanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlan
     */
    select?: PromotionPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionPlan
     */
    omit?: PromotionPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionPlanInclude<ExtArgs> | null
    /**
     * The data needed to create a PromotionPlan.
     */
    data: XOR<PromotionPlanCreateInput, PromotionPlanUncheckedCreateInput>
  }

  /**
   * PromotionPlan createMany
   */
  export type PromotionPlanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PromotionPlans.
     */
    data: PromotionPlanCreateManyInput | PromotionPlanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PromotionPlan createManyAndReturn
   */
  export type PromotionPlanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlan
     */
    select?: PromotionPlanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionPlan
     */
    omit?: PromotionPlanOmit<ExtArgs> | null
    /**
     * The data used to create many PromotionPlans.
     */
    data: PromotionPlanCreateManyInput | PromotionPlanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PromotionPlan update
   */
  export type PromotionPlanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlan
     */
    select?: PromotionPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionPlan
     */
    omit?: PromotionPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionPlanInclude<ExtArgs> | null
    /**
     * The data needed to update a PromotionPlan.
     */
    data: XOR<PromotionPlanUpdateInput, PromotionPlanUncheckedUpdateInput>
    /**
     * Choose, which PromotionPlan to update.
     */
    where: PromotionPlanWhereUniqueInput
  }

  /**
   * PromotionPlan updateMany
   */
  export type PromotionPlanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PromotionPlans.
     */
    data: XOR<PromotionPlanUpdateManyMutationInput, PromotionPlanUncheckedUpdateManyInput>
    /**
     * Filter which PromotionPlans to update
     */
    where?: PromotionPlanWhereInput
    /**
     * Limit how many PromotionPlans to update.
     */
    limit?: number
  }

  /**
   * PromotionPlan updateManyAndReturn
   */
  export type PromotionPlanUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlan
     */
    select?: PromotionPlanSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionPlan
     */
    omit?: PromotionPlanOmit<ExtArgs> | null
    /**
     * The data used to update PromotionPlans.
     */
    data: XOR<PromotionPlanUpdateManyMutationInput, PromotionPlanUncheckedUpdateManyInput>
    /**
     * Filter which PromotionPlans to update
     */
    where?: PromotionPlanWhereInput
    /**
     * Limit how many PromotionPlans to update.
     */
    limit?: number
  }

  /**
   * PromotionPlan upsert
   */
  export type PromotionPlanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlan
     */
    select?: PromotionPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionPlan
     */
    omit?: PromotionPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionPlanInclude<ExtArgs> | null
    /**
     * The filter to search for the PromotionPlan to update in case it exists.
     */
    where: PromotionPlanWhereUniqueInput
    /**
     * In case the PromotionPlan found by the `where` argument doesn't exist, create a new PromotionPlan with this data.
     */
    create: XOR<PromotionPlanCreateInput, PromotionPlanUncheckedCreateInput>
    /**
     * In case the PromotionPlan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionPlanUpdateInput, PromotionPlanUncheckedUpdateInput>
  }

  /**
   * PromotionPlan delete
   */
  export type PromotionPlanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlan
     */
    select?: PromotionPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionPlan
     */
    omit?: PromotionPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionPlanInclude<ExtArgs> | null
    /**
     * Filter which PromotionPlan to delete.
     */
    where: PromotionPlanWhereUniqueInput
  }

  /**
   * PromotionPlan deleteMany
   */
  export type PromotionPlanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionPlans to delete
     */
    where?: PromotionPlanWhereInput
    /**
     * Limit how many PromotionPlans to delete.
     */
    limit?: number
  }

  /**
   * PromotionPlan.orders
   */
  export type PromotionPlan$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
    where?: PromotionOrderWhereInput
    orderBy?: PromotionOrderOrderByWithRelationInput | PromotionOrderOrderByWithRelationInput[]
    cursor?: PromotionOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionOrderScalarFieldEnum | PromotionOrderScalarFieldEnum[]
  }

  /**
   * PromotionPlan without action
   */
  export type PromotionPlanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionPlan
     */
    select?: PromotionPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionPlan
     */
    omit?: PromotionPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionPlanInclude<ExtArgs> | null
  }


  /**
   * Model PromotionOrder
   */

  export type AggregatePromotionOrder = {
    _count: PromotionOrderCountAggregateOutputType | null
    _avg: PromotionOrderAvgAggregateOutputType | null
    _sum: PromotionOrderSumAggregateOutputType | null
    _min: PromotionOrderMinAggregateOutputType | null
    _max: PromotionOrderMaxAggregateOutputType | null
  }

  export type PromotionOrderAvgAggregateOutputType = {
    subtotal: Decimal | null
    tax: Decimal | null
    total: Decimal | null
  }

  export type PromotionOrderSumAggregateOutputType = {
    subtotal: Decimal | null
    tax: Decimal | null
    total: Decimal | null
  }

  export type PromotionOrderMinAggregateOutputType = {
    id: string | null
    buyerId: string | null
    listingId: string | null
    planId: string | null
    status: string | null
    subtotal: Decimal | null
    tax: Decimal | null
    total: Decimal | null
    currency: string | null
    createdAt: Date | null
    paidAt: Date | null
    externalRef: string | null
  }

  export type PromotionOrderMaxAggregateOutputType = {
    id: string | null
    buyerId: string | null
    listingId: string | null
    planId: string | null
    status: string | null
    subtotal: Decimal | null
    tax: Decimal | null
    total: Decimal | null
    currency: string | null
    createdAt: Date | null
    paidAt: Date | null
    externalRef: string | null
  }

  export type PromotionOrderCountAggregateOutputType = {
    id: number
    buyerId: number
    listingId: number
    planId: number
    status: number
    subtotal: number
    tax: number
    total: number
    currency: number
    createdAt: number
    paidAt: number
    externalRef: number
    metadata: number
    _all: number
  }


  export type PromotionOrderAvgAggregateInputType = {
    subtotal?: true
    tax?: true
    total?: true
  }

  export type PromotionOrderSumAggregateInputType = {
    subtotal?: true
    tax?: true
    total?: true
  }

  export type PromotionOrderMinAggregateInputType = {
    id?: true
    buyerId?: true
    listingId?: true
    planId?: true
    status?: true
    subtotal?: true
    tax?: true
    total?: true
    currency?: true
    createdAt?: true
    paidAt?: true
    externalRef?: true
  }

  export type PromotionOrderMaxAggregateInputType = {
    id?: true
    buyerId?: true
    listingId?: true
    planId?: true
    status?: true
    subtotal?: true
    tax?: true
    total?: true
    currency?: true
    createdAt?: true
    paidAt?: true
    externalRef?: true
  }

  export type PromotionOrderCountAggregateInputType = {
    id?: true
    buyerId?: true
    listingId?: true
    planId?: true
    status?: true
    subtotal?: true
    tax?: true
    total?: true
    currency?: true
    createdAt?: true
    paidAt?: true
    externalRef?: true
    metadata?: true
    _all?: true
  }

  export type PromotionOrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionOrder to aggregate.
     */
    where?: PromotionOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionOrders to fetch.
     */
    orderBy?: PromotionOrderOrderByWithRelationInput | PromotionOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PromotionOrders
    **/
    _count?: true | PromotionOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromotionOrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromotionOrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionOrderMaxAggregateInputType
  }

  export type GetPromotionOrderAggregateType<T extends PromotionOrderAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotionOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotionOrder[P]>
      : GetScalarType<T[P], AggregatePromotionOrder[P]>
  }




  export type PromotionOrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionOrderWhereInput
    orderBy?: PromotionOrderOrderByWithAggregationInput | PromotionOrderOrderByWithAggregationInput[]
    by: PromotionOrderScalarFieldEnum[] | PromotionOrderScalarFieldEnum
    having?: PromotionOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionOrderCountAggregateInputType | true
    _avg?: PromotionOrderAvgAggregateInputType
    _sum?: PromotionOrderSumAggregateInputType
    _min?: PromotionOrderMinAggregateInputType
    _max?: PromotionOrderMaxAggregateInputType
  }

  export type PromotionOrderGroupByOutputType = {
    id: string
    buyerId: string
    listingId: string
    planId: string
    status: string
    subtotal: Decimal
    tax: Decimal
    total: Decimal
    currency: string
    createdAt: Date
    paidAt: Date | null
    externalRef: string | null
    metadata: JsonValue | null
    _count: PromotionOrderCountAggregateOutputType | null
    _avg: PromotionOrderAvgAggregateOutputType | null
    _sum: PromotionOrderSumAggregateOutputType | null
    _min: PromotionOrderMinAggregateOutputType | null
    _max: PromotionOrderMaxAggregateOutputType | null
  }

  type GetPromotionOrderGroupByPayload<T extends PromotionOrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionOrderGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionOrderGroupByOutputType[P]>
        }
      >
    >


  export type PromotionOrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyerId?: boolean
    listingId?: boolean
    planId?: boolean
    status?: boolean
    subtotal?: boolean
    tax?: boolean
    total?: boolean
    currency?: boolean
    createdAt?: boolean
    paidAt?: boolean
    externalRef?: boolean
    metadata?: boolean
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    plan?: boolean | PromotionPlanDefaultArgs<ExtArgs>
    payments?: boolean | PromotionOrder$paymentsArgs<ExtArgs>
    _count?: boolean | PromotionOrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionOrder"]>

  export type PromotionOrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyerId?: boolean
    listingId?: boolean
    planId?: boolean
    status?: boolean
    subtotal?: boolean
    tax?: boolean
    total?: boolean
    currency?: boolean
    createdAt?: boolean
    paidAt?: boolean
    externalRef?: boolean
    metadata?: boolean
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    plan?: boolean | PromotionPlanDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionOrder"]>

  export type PromotionOrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyerId?: boolean
    listingId?: boolean
    planId?: boolean
    status?: boolean
    subtotal?: boolean
    tax?: boolean
    total?: boolean
    currency?: boolean
    createdAt?: boolean
    paidAt?: boolean
    externalRef?: boolean
    metadata?: boolean
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    plan?: boolean | PromotionPlanDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionOrder"]>

  export type PromotionOrderSelectScalar = {
    id?: boolean
    buyerId?: boolean
    listingId?: boolean
    planId?: boolean
    status?: boolean
    subtotal?: boolean
    tax?: boolean
    total?: boolean
    currency?: boolean
    createdAt?: boolean
    paidAt?: boolean
    externalRef?: boolean
    metadata?: boolean
  }

  export type PromotionOrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "buyerId" | "listingId" | "planId" | "status" | "subtotal" | "tax" | "total" | "currency" | "createdAt" | "paidAt" | "externalRef" | "metadata", ExtArgs["result"]["promotionOrder"]>
  export type PromotionOrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    plan?: boolean | PromotionPlanDefaultArgs<ExtArgs>
    payments?: boolean | PromotionOrder$paymentsArgs<ExtArgs>
    _count?: boolean | PromotionOrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PromotionOrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    plan?: boolean | PromotionPlanDefaultArgs<ExtArgs>
  }
  export type PromotionOrderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    listing?: boolean | ListingDefaultArgs<ExtArgs>
    plan?: boolean | PromotionPlanDefaultArgs<ExtArgs>
  }

  export type $PromotionOrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PromotionOrder"
    objects: {
      buyer: Prisma.$UserPayload<ExtArgs>
      listing: Prisma.$ListingPayload<ExtArgs>
      plan: Prisma.$PromotionPlanPayload<ExtArgs>
      payments: Prisma.$PaymentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      buyerId: string
      listingId: string
      planId: string
      status: string
      subtotal: Prisma.Decimal
      tax: Prisma.Decimal
      total: Prisma.Decimal
      currency: string
      createdAt: Date
      paidAt: Date | null
      externalRef: string | null
      metadata: Prisma.JsonValue | null
    }, ExtArgs["result"]["promotionOrder"]>
    composites: {}
  }

  type PromotionOrderGetPayload<S extends boolean | null | undefined | PromotionOrderDefaultArgs> = $Result.GetResult<Prisma.$PromotionOrderPayload, S>

  type PromotionOrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PromotionOrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PromotionOrderCountAggregateInputType | true
    }

  export interface PromotionOrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PromotionOrder'], meta: { name: 'PromotionOrder' } }
    /**
     * Find zero or one PromotionOrder that matches the filter.
     * @param {PromotionOrderFindUniqueArgs} args - Arguments to find a PromotionOrder
     * @example
     * // Get one PromotionOrder
     * const promotionOrder = await prisma.promotionOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromotionOrderFindUniqueArgs>(args: SelectSubset<T, PromotionOrderFindUniqueArgs<ExtArgs>>): Prisma__PromotionOrderClient<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PromotionOrder that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PromotionOrderFindUniqueOrThrowArgs} args - Arguments to find a PromotionOrder
     * @example
     * // Get one PromotionOrder
     * const promotionOrder = await prisma.promotionOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromotionOrderFindUniqueOrThrowArgs>(args: SelectSubset<T, PromotionOrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromotionOrderClient<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PromotionOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionOrderFindFirstArgs} args - Arguments to find a PromotionOrder
     * @example
     * // Get one PromotionOrder
     * const promotionOrder = await prisma.promotionOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromotionOrderFindFirstArgs>(args?: SelectSubset<T, PromotionOrderFindFirstArgs<ExtArgs>>): Prisma__PromotionOrderClient<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PromotionOrder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionOrderFindFirstOrThrowArgs} args - Arguments to find a PromotionOrder
     * @example
     * // Get one PromotionOrder
     * const promotionOrder = await prisma.promotionOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromotionOrderFindFirstOrThrowArgs>(args?: SelectSubset<T, PromotionOrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromotionOrderClient<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PromotionOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionOrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PromotionOrders
     * const promotionOrders = await prisma.promotionOrder.findMany()
     * 
     * // Get first 10 PromotionOrders
     * const promotionOrders = await prisma.promotionOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionOrderWithIdOnly = await prisma.promotionOrder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PromotionOrderFindManyArgs>(args?: SelectSubset<T, PromotionOrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PromotionOrder.
     * @param {PromotionOrderCreateArgs} args - Arguments to create a PromotionOrder.
     * @example
     * // Create one PromotionOrder
     * const PromotionOrder = await prisma.promotionOrder.create({
     *   data: {
     *     // ... data to create a PromotionOrder
     *   }
     * })
     * 
     */
    create<T extends PromotionOrderCreateArgs>(args: SelectSubset<T, PromotionOrderCreateArgs<ExtArgs>>): Prisma__PromotionOrderClient<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PromotionOrders.
     * @param {PromotionOrderCreateManyArgs} args - Arguments to create many PromotionOrders.
     * @example
     * // Create many PromotionOrders
     * const promotionOrder = await prisma.promotionOrder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromotionOrderCreateManyArgs>(args?: SelectSubset<T, PromotionOrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PromotionOrders and returns the data saved in the database.
     * @param {PromotionOrderCreateManyAndReturnArgs} args - Arguments to create many PromotionOrders.
     * @example
     * // Create many PromotionOrders
     * const promotionOrder = await prisma.promotionOrder.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PromotionOrders and only return the `id`
     * const promotionOrderWithIdOnly = await prisma.promotionOrder.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PromotionOrderCreateManyAndReturnArgs>(args?: SelectSubset<T, PromotionOrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PromotionOrder.
     * @param {PromotionOrderDeleteArgs} args - Arguments to delete one PromotionOrder.
     * @example
     * // Delete one PromotionOrder
     * const PromotionOrder = await prisma.promotionOrder.delete({
     *   where: {
     *     // ... filter to delete one PromotionOrder
     *   }
     * })
     * 
     */
    delete<T extends PromotionOrderDeleteArgs>(args: SelectSubset<T, PromotionOrderDeleteArgs<ExtArgs>>): Prisma__PromotionOrderClient<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PromotionOrder.
     * @param {PromotionOrderUpdateArgs} args - Arguments to update one PromotionOrder.
     * @example
     * // Update one PromotionOrder
     * const promotionOrder = await prisma.promotionOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromotionOrderUpdateArgs>(args: SelectSubset<T, PromotionOrderUpdateArgs<ExtArgs>>): Prisma__PromotionOrderClient<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PromotionOrders.
     * @param {PromotionOrderDeleteManyArgs} args - Arguments to filter PromotionOrders to delete.
     * @example
     * // Delete a few PromotionOrders
     * const { count } = await prisma.promotionOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromotionOrderDeleteManyArgs>(args?: SelectSubset<T, PromotionOrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PromotionOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PromotionOrders
     * const promotionOrder = await prisma.promotionOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromotionOrderUpdateManyArgs>(args: SelectSubset<T, PromotionOrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PromotionOrders and returns the data updated in the database.
     * @param {PromotionOrderUpdateManyAndReturnArgs} args - Arguments to update many PromotionOrders.
     * @example
     * // Update many PromotionOrders
     * const promotionOrder = await prisma.promotionOrder.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PromotionOrders and only return the `id`
     * const promotionOrderWithIdOnly = await prisma.promotionOrder.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PromotionOrderUpdateManyAndReturnArgs>(args: SelectSubset<T, PromotionOrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PromotionOrder.
     * @param {PromotionOrderUpsertArgs} args - Arguments to update or create a PromotionOrder.
     * @example
     * // Update or create a PromotionOrder
     * const promotionOrder = await prisma.promotionOrder.upsert({
     *   create: {
     *     // ... data to create a PromotionOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PromotionOrder we want to update
     *   }
     * })
     */
    upsert<T extends PromotionOrderUpsertArgs>(args: SelectSubset<T, PromotionOrderUpsertArgs<ExtArgs>>): Prisma__PromotionOrderClient<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PromotionOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionOrderCountArgs} args - Arguments to filter PromotionOrders to count.
     * @example
     * // Count the number of PromotionOrders
     * const count = await prisma.promotionOrder.count({
     *   where: {
     *     // ... the filter for the PromotionOrders we want to count
     *   }
     * })
    **/
    count<T extends PromotionOrderCountArgs>(
      args?: Subset<T, PromotionOrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PromotionOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionOrderAggregateArgs>(args: Subset<T, PromotionOrderAggregateArgs>): Prisma.PrismaPromise<GetPromotionOrderAggregateType<T>>

    /**
     * Group by PromotionOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionOrderGroupByArgs['orderBy'] }
        : { orderBy?: PromotionOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PromotionOrder model
   */
  readonly fields: PromotionOrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PromotionOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionOrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    buyer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    listing<T extends ListingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListingDefaultArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    plan<T extends PromotionPlanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PromotionPlanDefaultArgs<ExtArgs>>): Prisma__PromotionPlanClient<$Result.GetResult<Prisma.$PromotionPlanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    payments<T extends PromotionOrder$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, PromotionOrder$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PromotionOrder model
   */
  interface PromotionOrderFieldRefs {
    readonly id: FieldRef<"PromotionOrder", 'String'>
    readonly buyerId: FieldRef<"PromotionOrder", 'String'>
    readonly listingId: FieldRef<"PromotionOrder", 'String'>
    readonly planId: FieldRef<"PromotionOrder", 'String'>
    readonly status: FieldRef<"PromotionOrder", 'String'>
    readonly subtotal: FieldRef<"PromotionOrder", 'Decimal'>
    readonly tax: FieldRef<"PromotionOrder", 'Decimal'>
    readonly total: FieldRef<"PromotionOrder", 'Decimal'>
    readonly currency: FieldRef<"PromotionOrder", 'String'>
    readonly createdAt: FieldRef<"PromotionOrder", 'DateTime'>
    readonly paidAt: FieldRef<"PromotionOrder", 'DateTime'>
    readonly externalRef: FieldRef<"PromotionOrder", 'String'>
    readonly metadata: FieldRef<"PromotionOrder", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * PromotionOrder findUnique
   */
  export type PromotionOrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
    /**
     * Filter, which PromotionOrder to fetch.
     */
    where: PromotionOrderWhereUniqueInput
  }

  /**
   * PromotionOrder findUniqueOrThrow
   */
  export type PromotionOrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
    /**
     * Filter, which PromotionOrder to fetch.
     */
    where: PromotionOrderWhereUniqueInput
  }

  /**
   * PromotionOrder findFirst
   */
  export type PromotionOrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
    /**
     * Filter, which PromotionOrder to fetch.
     */
    where?: PromotionOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionOrders to fetch.
     */
    orderBy?: PromotionOrderOrderByWithRelationInput | PromotionOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionOrders.
     */
    cursor?: PromotionOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionOrders.
     */
    distinct?: PromotionOrderScalarFieldEnum | PromotionOrderScalarFieldEnum[]
  }

  /**
   * PromotionOrder findFirstOrThrow
   */
  export type PromotionOrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
    /**
     * Filter, which PromotionOrder to fetch.
     */
    where?: PromotionOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionOrders to fetch.
     */
    orderBy?: PromotionOrderOrderByWithRelationInput | PromotionOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionOrders.
     */
    cursor?: PromotionOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionOrders.
     */
    distinct?: PromotionOrderScalarFieldEnum | PromotionOrderScalarFieldEnum[]
  }

  /**
   * PromotionOrder findMany
   */
  export type PromotionOrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
    /**
     * Filter, which PromotionOrders to fetch.
     */
    where?: PromotionOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionOrders to fetch.
     */
    orderBy?: PromotionOrderOrderByWithRelationInput | PromotionOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PromotionOrders.
     */
    cursor?: PromotionOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionOrders.
     */
    skip?: number
    distinct?: PromotionOrderScalarFieldEnum | PromotionOrderScalarFieldEnum[]
  }

  /**
   * PromotionOrder create
   */
  export type PromotionOrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
    /**
     * The data needed to create a PromotionOrder.
     */
    data: XOR<PromotionOrderCreateInput, PromotionOrderUncheckedCreateInput>
  }

  /**
   * PromotionOrder createMany
   */
  export type PromotionOrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PromotionOrders.
     */
    data: PromotionOrderCreateManyInput | PromotionOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PromotionOrder createManyAndReturn
   */
  export type PromotionOrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * The data used to create many PromotionOrders.
     */
    data: PromotionOrderCreateManyInput | PromotionOrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PromotionOrder update
   */
  export type PromotionOrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
    /**
     * The data needed to update a PromotionOrder.
     */
    data: XOR<PromotionOrderUpdateInput, PromotionOrderUncheckedUpdateInput>
    /**
     * Choose, which PromotionOrder to update.
     */
    where: PromotionOrderWhereUniqueInput
  }

  /**
   * PromotionOrder updateMany
   */
  export type PromotionOrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PromotionOrders.
     */
    data: XOR<PromotionOrderUpdateManyMutationInput, PromotionOrderUncheckedUpdateManyInput>
    /**
     * Filter which PromotionOrders to update
     */
    where?: PromotionOrderWhereInput
    /**
     * Limit how many PromotionOrders to update.
     */
    limit?: number
  }

  /**
   * PromotionOrder updateManyAndReturn
   */
  export type PromotionOrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * The data used to update PromotionOrders.
     */
    data: XOR<PromotionOrderUpdateManyMutationInput, PromotionOrderUncheckedUpdateManyInput>
    /**
     * Filter which PromotionOrders to update
     */
    where?: PromotionOrderWhereInput
    /**
     * Limit how many PromotionOrders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PromotionOrder upsert
   */
  export type PromotionOrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
    /**
     * The filter to search for the PromotionOrder to update in case it exists.
     */
    where: PromotionOrderWhereUniqueInput
    /**
     * In case the PromotionOrder found by the `where` argument doesn't exist, create a new PromotionOrder with this data.
     */
    create: XOR<PromotionOrderCreateInput, PromotionOrderUncheckedCreateInput>
    /**
     * In case the PromotionOrder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionOrderUpdateInput, PromotionOrderUncheckedUpdateInput>
  }

  /**
   * PromotionOrder delete
   */
  export type PromotionOrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
    /**
     * Filter which PromotionOrder to delete.
     */
    where: PromotionOrderWhereUniqueInput
  }

  /**
   * PromotionOrder deleteMany
   */
  export type PromotionOrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionOrders to delete
     */
    where?: PromotionOrderWhereInput
    /**
     * Limit how many PromotionOrders to delete.
     */
    limit?: number
  }

  /**
   * PromotionOrder.payments
   */
  export type PromotionOrder$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * PromotionOrder without action
   */
  export type PromotionOrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionOrder
     */
    select?: PromotionOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionOrder
     */
    omit?: PromotionOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionOrderInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type PaymentSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type PaymentMinAggregateOutputType = {
    id: string | null
    promotionOrderId: string | null
    provider: string | null
    providerPaymentId: string | null
    status: $Enums.PaymentStatus | null
    amount: Decimal | null
    currency: string | null
    receiptUrl: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: string | null
    promotionOrderId: string | null
    provider: string | null
    providerPaymentId: string | null
    status: $Enums.PaymentStatus | null
    amount: Decimal | null
    currency: string | null
    receiptUrl: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    promotionOrderId: number
    provider: number
    providerPaymentId: number
    status: number
    amount: number
    currency: number
    receiptUrl: number
    rawPayload: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    amount?: true
  }

  export type PaymentSumAggregateInputType = {
    amount?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    promotionOrderId?: true
    provider?: true
    providerPaymentId?: true
    status?: true
    amount?: true
    currency?: true
    receiptUrl?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    promotionOrderId?: true
    provider?: true
    providerPaymentId?: true
    status?: true
    amount?: true
    currency?: true
    receiptUrl?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    promotionOrderId?: true
    provider?: true
    providerPaymentId?: true
    status?: true
    amount?: true
    currency?: true
    receiptUrl?: true
    rawPayload?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: string
    promotionOrderId: string
    provider: string
    providerPaymentId: string
    status: $Enums.PaymentStatus
    amount: Decimal
    currency: string
    receiptUrl: string | null
    rawPayload: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    promotionOrderId?: boolean
    provider?: boolean
    providerPaymentId?: boolean
    status?: boolean
    amount?: boolean
    currency?: boolean
    receiptUrl?: boolean
    rawPayload?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    promotionOrder?: boolean | PromotionOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    promotionOrderId?: boolean
    provider?: boolean
    providerPaymentId?: boolean
    status?: boolean
    amount?: boolean
    currency?: boolean
    receiptUrl?: boolean
    rawPayload?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    promotionOrder?: boolean | PromotionOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    promotionOrderId?: boolean
    provider?: boolean
    providerPaymentId?: boolean
    status?: boolean
    amount?: boolean
    currency?: boolean
    receiptUrl?: boolean
    rawPayload?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    promotionOrder?: boolean | PromotionOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectScalar = {
    id?: boolean
    promotionOrderId?: boolean
    provider?: boolean
    providerPaymentId?: boolean
    status?: boolean
    amount?: boolean
    currency?: boolean
    receiptUrl?: boolean
    rawPayload?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PaymentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "promotionOrderId" | "provider" | "providerPaymentId" | "status" | "amount" | "currency" | "receiptUrl" | "rawPayload" | "createdAt" | "updatedAt", ExtArgs["result"]["payment"]>
  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotionOrder?: boolean | PromotionOrderDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotionOrder?: boolean | PromotionOrderDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotionOrder?: boolean | PromotionOrderDefaultArgs<ExtArgs>
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      promotionOrder: Prisma.$PromotionOrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      promotionOrderId: string
      provider: string
      providerPaymentId: string
      status: $Enums.PaymentStatus
      amount: Prisma.Decimal
      currency: string
      receiptUrl: string | null
      rawPayload: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {PaymentCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments and returns the data updated in the database.
     * @param {PaymentUpdateManyAndReturnArgs} args - Arguments to update many Payments.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    promotionOrder<T extends PromotionOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PromotionOrderDefaultArgs<ExtArgs>>): Prisma__PromotionOrderClient<$Result.GetResult<Prisma.$PromotionOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'String'>
    readonly promotionOrderId: FieldRef<"Payment", 'String'>
    readonly provider: FieldRef<"Payment", 'String'>
    readonly providerPaymentId: FieldRef<"Payment", 'String'>
    readonly status: FieldRef<"Payment", 'PaymentStatus'>
    readonly amount: FieldRef<"Payment", 'Decimal'>
    readonly currency: FieldRef<"Payment", 'String'>
    readonly receiptUrl: FieldRef<"Payment", 'String'>
    readonly rawPayload: FieldRef<"Payment", 'Json'>
    readonly createdAt: FieldRef<"Payment", 'DateTime'>
    readonly updatedAt: FieldRef<"Payment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment createManyAndReturn
   */
  export type PaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
  }

  /**
   * Payment updateManyAndReturn
   */
  export type PaymentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to delete.
     */
    limit?: number
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model AdSlot
   */

  export type AggregateAdSlot = {
    _count: AdSlotCountAggregateOutputType | null
    _min: AdSlotMinAggregateOutputType | null
    _max: AdSlotMaxAggregateOutputType | null
  }

  export type AdSlotMinAggregateOutputType = {
    id: string | null
    code: string | null
    placement: string | null
    description: string | null
    isActive: boolean | null
    createdAt: Date | null
  }

  export type AdSlotMaxAggregateOutputType = {
    id: string | null
    code: string | null
    placement: string | null
    description: string | null
    isActive: boolean | null
    createdAt: Date | null
  }

  export type AdSlotCountAggregateOutputType = {
    id: number
    code: number
    placement: number
    description: number
    isActive: number
    createdAt: number
    _all: number
  }


  export type AdSlotMinAggregateInputType = {
    id?: true
    code?: true
    placement?: true
    description?: true
    isActive?: true
    createdAt?: true
  }

  export type AdSlotMaxAggregateInputType = {
    id?: true
    code?: true
    placement?: true
    description?: true
    isActive?: true
    createdAt?: true
  }

  export type AdSlotCountAggregateInputType = {
    id?: true
    code?: true
    placement?: true
    description?: true
    isActive?: true
    createdAt?: true
    _all?: true
  }

  export type AdSlotAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdSlot to aggregate.
     */
    where?: AdSlotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdSlots to fetch.
     */
    orderBy?: AdSlotOrderByWithRelationInput | AdSlotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdSlotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdSlots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdSlots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AdSlots
    **/
    _count?: true | AdSlotCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdSlotMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdSlotMaxAggregateInputType
  }

  export type GetAdSlotAggregateType<T extends AdSlotAggregateArgs> = {
        [P in keyof T & keyof AggregateAdSlot]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdSlot[P]>
      : GetScalarType<T[P], AggregateAdSlot[P]>
  }




  export type AdSlotGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdSlotWhereInput
    orderBy?: AdSlotOrderByWithAggregationInput | AdSlotOrderByWithAggregationInput[]
    by: AdSlotScalarFieldEnum[] | AdSlotScalarFieldEnum
    having?: AdSlotScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdSlotCountAggregateInputType | true
    _min?: AdSlotMinAggregateInputType
    _max?: AdSlotMaxAggregateInputType
  }

  export type AdSlotGroupByOutputType = {
    id: string
    code: string
    placement: string
    description: string | null
    isActive: boolean
    createdAt: Date
    _count: AdSlotCountAggregateOutputType | null
    _min: AdSlotMinAggregateOutputType | null
    _max: AdSlotMaxAggregateOutputType | null
  }

  type GetAdSlotGroupByPayload<T extends AdSlotGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdSlotGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdSlotGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdSlotGroupByOutputType[P]>
            : GetScalarType<T[P], AdSlotGroupByOutputType[P]>
        }
      >
    >


  export type AdSlotSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    placement?: boolean
    description?: boolean
    isActive?: boolean
    createdAt?: boolean
    impressions?: boolean | AdSlot$impressionsArgs<ExtArgs>
    _count?: boolean | AdSlotCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["adSlot"]>

  export type AdSlotSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    placement?: boolean
    description?: boolean
    isActive?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["adSlot"]>

  export type AdSlotSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    placement?: boolean
    description?: boolean
    isActive?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["adSlot"]>

  export type AdSlotSelectScalar = {
    id?: boolean
    code?: boolean
    placement?: boolean
    description?: boolean
    isActive?: boolean
    createdAt?: boolean
  }

  export type AdSlotOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "code" | "placement" | "description" | "isActive" | "createdAt", ExtArgs["result"]["adSlot"]>
  export type AdSlotInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    impressions?: boolean | AdSlot$impressionsArgs<ExtArgs>
    _count?: boolean | AdSlotCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AdSlotIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AdSlotIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AdSlotPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AdSlot"
    objects: {
      impressions: Prisma.$AdImpressionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      code: string
      placement: string
      description: string | null
      isActive: boolean
      createdAt: Date
    }, ExtArgs["result"]["adSlot"]>
    composites: {}
  }

  type AdSlotGetPayload<S extends boolean | null | undefined | AdSlotDefaultArgs> = $Result.GetResult<Prisma.$AdSlotPayload, S>

  type AdSlotCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AdSlotFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdSlotCountAggregateInputType | true
    }

  export interface AdSlotDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AdSlot'], meta: { name: 'AdSlot' } }
    /**
     * Find zero or one AdSlot that matches the filter.
     * @param {AdSlotFindUniqueArgs} args - Arguments to find a AdSlot
     * @example
     * // Get one AdSlot
     * const adSlot = await prisma.adSlot.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdSlotFindUniqueArgs>(args: SelectSubset<T, AdSlotFindUniqueArgs<ExtArgs>>): Prisma__AdSlotClient<$Result.GetResult<Prisma.$AdSlotPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AdSlot that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AdSlotFindUniqueOrThrowArgs} args - Arguments to find a AdSlot
     * @example
     * // Get one AdSlot
     * const adSlot = await prisma.adSlot.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdSlotFindUniqueOrThrowArgs>(args: SelectSubset<T, AdSlotFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdSlotClient<$Result.GetResult<Prisma.$AdSlotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdSlot that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdSlotFindFirstArgs} args - Arguments to find a AdSlot
     * @example
     * // Get one AdSlot
     * const adSlot = await prisma.adSlot.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdSlotFindFirstArgs>(args?: SelectSubset<T, AdSlotFindFirstArgs<ExtArgs>>): Prisma__AdSlotClient<$Result.GetResult<Prisma.$AdSlotPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdSlot that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdSlotFindFirstOrThrowArgs} args - Arguments to find a AdSlot
     * @example
     * // Get one AdSlot
     * const adSlot = await prisma.adSlot.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdSlotFindFirstOrThrowArgs>(args?: SelectSubset<T, AdSlotFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdSlotClient<$Result.GetResult<Prisma.$AdSlotPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AdSlots that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdSlotFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AdSlots
     * const adSlots = await prisma.adSlot.findMany()
     * 
     * // Get first 10 AdSlots
     * const adSlots = await prisma.adSlot.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adSlotWithIdOnly = await prisma.adSlot.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdSlotFindManyArgs>(args?: SelectSubset<T, AdSlotFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdSlotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AdSlot.
     * @param {AdSlotCreateArgs} args - Arguments to create a AdSlot.
     * @example
     * // Create one AdSlot
     * const AdSlot = await prisma.adSlot.create({
     *   data: {
     *     // ... data to create a AdSlot
     *   }
     * })
     * 
     */
    create<T extends AdSlotCreateArgs>(args: SelectSubset<T, AdSlotCreateArgs<ExtArgs>>): Prisma__AdSlotClient<$Result.GetResult<Prisma.$AdSlotPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AdSlots.
     * @param {AdSlotCreateManyArgs} args - Arguments to create many AdSlots.
     * @example
     * // Create many AdSlots
     * const adSlot = await prisma.adSlot.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdSlotCreateManyArgs>(args?: SelectSubset<T, AdSlotCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AdSlots and returns the data saved in the database.
     * @param {AdSlotCreateManyAndReturnArgs} args - Arguments to create many AdSlots.
     * @example
     * // Create many AdSlots
     * const adSlot = await prisma.adSlot.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AdSlots and only return the `id`
     * const adSlotWithIdOnly = await prisma.adSlot.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdSlotCreateManyAndReturnArgs>(args?: SelectSubset<T, AdSlotCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdSlotPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AdSlot.
     * @param {AdSlotDeleteArgs} args - Arguments to delete one AdSlot.
     * @example
     * // Delete one AdSlot
     * const AdSlot = await prisma.adSlot.delete({
     *   where: {
     *     // ... filter to delete one AdSlot
     *   }
     * })
     * 
     */
    delete<T extends AdSlotDeleteArgs>(args: SelectSubset<T, AdSlotDeleteArgs<ExtArgs>>): Prisma__AdSlotClient<$Result.GetResult<Prisma.$AdSlotPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AdSlot.
     * @param {AdSlotUpdateArgs} args - Arguments to update one AdSlot.
     * @example
     * // Update one AdSlot
     * const adSlot = await prisma.adSlot.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdSlotUpdateArgs>(args: SelectSubset<T, AdSlotUpdateArgs<ExtArgs>>): Prisma__AdSlotClient<$Result.GetResult<Prisma.$AdSlotPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AdSlots.
     * @param {AdSlotDeleteManyArgs} args - Arguments to filter AdSlots to delete.
     * @example
     * // Delete a few AdSlots
     * const { count } = await prisma.adSlot.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdSlotDeleteManyArgs>(args?: SelectSubset<T, AdSlotDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdSlots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdSlotUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AdSlots
     * const adSlot = await prisma.adSlot.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdSlotUpdateManyArgs>(args: SelectSubset<T, AdSlotUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdSlots and returns the data updated in the database.
     * @param {AdSlotUpdateManyAndReturnArgs} args - Arguments to update many AdSlots.
     * @example
     * // Update many AdSlots
     * const adSlot = await prisma.adSlot.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AdSlots and only return the `id`
     * const adSlotWithIdOnly = await prisma.adSlot.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AdSlotUpdateManyAndReturnArgs>(args: SelectSubset<T, AdSlotUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdSlotPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AdSlot.
     * @param {AdSlotUpsertArgs} args - Arguments to update or create a AdSlot.
     * @example
     * // Update or create a AdSlot
     * const adSlot = await prisma.adSlot.upsert({
     *   create: {
     *     // ... data to create a AdSlot
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AdSlot we want to update
     *   }
     * })
     */
    upsert<T extends AdSlotUpsertArgs>(args: SelectSubset<T, AdSlotUpsertArgs<ExtArgs>>): Prisma__AdSlotClient<$Result.GetResult<Prisma.$AdSlotPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AdSlots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdSlotCountArgs} args - Arguments to filter AdSlots to count.
     * @example
     * // Count the number of AdSlots
     * const count = await prisma.adSlot.count({
     *   where: {
     *     // ... the filter for the AdSlots we want to count
     *   }
     * })
    **/
    count<T extends AdSlotCountArgs>(
      args?: Subset<T, AdSlotCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdSlotCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AdSlot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdSlotAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdSlotAggregateArgs>(args: Subset<T, AdSlotAggregateArgs>): Prisma.PrismaPromise<GetAdSlotAggregateType<T>>

    /**
     * Group by AdSlot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdSlotGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdSlotGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdSlotGroupByArgs['orderBy'] }
        : { orderBy?: AdSlotGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdSlotGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdSlotGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AdSlot model
   */
  readonly fields: AdSlotFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AdSlot.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdSlotClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    impressions<T extends AdSlot$impressionsArgs<ExtArgs> = {}>(args?: Subset<T, AdSlot$impressionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AdSlot model
   */
  interface AdSlotFieldRefs {
    readonly id: FieldRef<"AdSlot", 'String'>
    readonly code: FieldRef<"AdSlot", 'String'>
    readonly placement: FieldRef<"AdSlot", 'String'>
    readonly description: FieldRef<"AdSlot", 'String'>
    readonly isActive: FieldRef<"AdSlot", 'Boolean'>
    readonly createdAt: FieldRef<"AdSlot", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AdSlot findUnique
   */
  export type AdSlotFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlot
     */
    select?: AdSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdSlot
     */
    omit?: AdSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdSlotInclude<ExtArgs> | null
    /**
     * Filter, which AdSlot to fetch.
     */
    where: AdSlotWhereUniqueInput
  }

  /**
   * AdSlot findUniqueOrThrow
   */
  export type AdSlotFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlot
     */
    select?: AdSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdSlot
     */
    omit?: AdSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdSlotInclude<ExtArgs> | null
    /**
     * Filter, which AdSlot to fetch.
     */
    where: AdSlotWhereUniqueInput
  }

  /**
   * AdSlot findFirst
   */
  export type AdSlotFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlot
     */
    select?: AdSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdSlot
     */
    omit?: AdSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdSlotInclude<ExtArgs> | null
    /**
     * Filter, which AdSlot to fetch.
     */
    where?: AdSlotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdSlots to fetch.
     */
    orderBy?: AdSlotOrderByWithRelationInput | AdSlotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdSlots.
     */
    cursor?: AdSlotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdSlots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdSlots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdSlots.
     */
    distinct?: AdSlotScalarFieldEnum | AdSlotScalarFieldEnum[]
  }

  /**
   * AdSlot findFirstOrThrow
   */
  export type AdSlotFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlot
     */
    select?: AdSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdSlot
     */
    omit?: AdSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdSlotInclude<ExtArgs> | null
    /**
     * Filter, which AdSlot to fetch.
     */
    where?: AdSlotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdSlots to fetch.
     */
    orderBy?: AdSlotOrderByWithRelationInput | AdSlotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdSlots.
     */
    cursor?: AdSlotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdSlots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdSlots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdSlots.
     */
    distinct?: AdSlotScalarFieldEnum | AdSlotScalarFieldEnum[]
  }

  /**
   * AdSlot findMany
   */
  export type AdSlotFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlot
     */
    select?: AdSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdSlot
     */
    omit?: AdSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdSlotInclude<ExtArgs> | null
    /**
     * Filter, which AdSlots to fetch.
     */
    where?: AdSlotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdSlots to fetch.
     */
    orderBy?: AdSlotOrderByWithRelationInput | AdSlotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AdSlots.
     */
    cursor?: AdSlotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdSlots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdSlots.
     */
    skip?: number
    distinct?: AdSlotScalarFieldEnum | AdSlotScalarFieldEnum[]
  }

  /**
   * AdSlot create
   */
  export type AdSlotCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlot
     */
    select?: AdSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdSlot
     */
    omit?: AdSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdSlotInclude<ExtArgs> | null
    /**
     * The data needed to create a AdSlot.
     */
    data: XOR<AdSlotCreateInput, AdSlotUncheckedCreateInput>
  }

  /**
   * AdSlot createMany
   */
  export type AdSlotCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AdSlots.
     */
    data: AdSlotCreateManyInput | AdSlotCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AdSlot createManyAndReturn
   */
  export type AdSlotCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlot
     */
    select?: AdSlotSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AdSlot
     */
    omit?: AdSlotOmit<ExtArgs> | null
    /**
     * The data used to create many AdSlots.
     */
    data: AdSlotCreateManyInput | AdSlotCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AdSlot update
   */
  export type AdSlotUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlot
     */
    select?: AdSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdSlot
     */
    omit?: AdSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdSlotInclude<ExtArgs> | null
    /**
     * The data needed to update a AdSlot.
     */
    data: XOR<AdSlotUpdateInput, AdSlotUncheckedUpdateInput>
    /**
     * Choose, which AdSlot to update.
     */
    where: AdSlotWhereUniqueInput
  }

  /**
   * AdSlot updateMany
   */
  export type AdSlotUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AdSlots.
     */
    data: XOR<AdSlotUpdateManyMutationInput, AdSlotUncheckedUpdateManyInput>
    /**
     * Filter which AdSlots to update
     */
    where?: AdSlotWhereInput
    /**
     * Limit how many AdSlots to update.
     */
    limit?: number
  }

  /**
   * AdSlot updateManyAndReturn
   */
  export type AdSlotUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlot
     */
    select?: AdSlotSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AdSlot
     */
    omit?: AdSlotOmit<ExtArgs> | null
    /**
     * The data used to update AdSlots.
     */
    data: XOR<AdSlotUpdateManyMutationInput, AdSlotUncheckedUpdateManyInput>
    /**
     * Filter which AdSlots to update
     */
    where?: AdSlotWhereInput
    /**
     * Limit how many AdSlots to update.
     */
    limit?: number
  }

  /**
   * AdSlot upsert
   */
  export type AdSlotUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlot
     */
    select?: AdSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdSlot
     */
    omit?: AdSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdSlotInclude<ExtArgs> | null
    /**
     * The filter to search for the AdSlot to update in case it exists.
     */
    where: AdSlotWhereUniqueInput
    /**
     * In case the AdSlot found by the `where` argument doesn't exist, create a new AdSlot with this data.
     */
    create: XOR<AdSlotCreateInput, AdSlotUncheckedCreateInput>
    /**
     * In case the AdSlot was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdSlotUpdateInput, AdSlotUncheckedUpdateInput>
  }

  /**
   * AdSlot delete
   */
  export type AdSlotDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlot
     */
    select?: AdSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdSlot
     */
    omit?: AdSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdSlotInclude<ExtArgs> | null
    /**
     * Filter which AdSlot to delete.
     */
    where: AdSlotWhereUniqueInput
  }

  /**
   * AdSlot deleteMany
   */
  export type AdSlotDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdSlots to delete
     */
    where?: AdSlotWhereInput
    /**
     * Limit how many AdSlots to delete.
     */
    limit?: number
  }

  /**
   * AdSlot.impressions
   */
  export type AdSlot$impressionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionInclude<ExtArgs> | null
    where?: AdImpressionWhereInput
    orderBy?: AdImpressionOrderByWithRelationInput | AdImpressionOrderByWithRelationInput[]
    cursor?: AdImpressionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdImpressionScalarFieldEnum | AdImpressionScalarFieldEnum[]
  }

  /**
   * AdSlot without action
   */
  export type AdSlotDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdSlot
     */
    select?: AdSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdSlot
     */
    omit?: AdSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdSlotInclude<ExtArgs> | null
  }


  /**
   * Model AdImpression
   */

  export type AggregateAdImpression = {
    _count: AdImpressionCountAggregateOutputType | null
    _min: AdImpressionMinAggregateOutputType | null
    _max: AdImpressionMaxAggregateOutputType | null
  }

  export type AdImpressionMinAggregateOutputType = {
    id: string | null
    adSlotId: string | null
    listingId: string | null
    thirdPartyCampaignId: string | null
    occurredAt: Date | null
  }

  export type AdImpressionMaxAggregateOutputType = {
    id: string | null
    adSlotId: string | null
    listingId: string | null
    thirdPartyCampaignId: string | null
    occurredAt: Date | null
  }

  export type AdImpressionCountAggregateOutputType = {
    id: number
    adSlotId: number
    listingId: number
    thirdPartyCampaignId: number
    occurredAt: number
    metadata: number
    _all: number
  }


  export type AdImpressionMinAggregateInputType = {
    id?: true
    adSlotId?: true
    listingId?: true
    thirdPartyCampaignId?: true
    occurredAt?: true
  }

  export type AdImpressionMaxAggregateInputType = {
    id?: true
    adSlotId?: true
    listingId?: true
    thirdPartyCampaignId?: true
    occurredAt?: true
  }

  export type AdImpressionCountAggregateInputType = {
    id?: true
    adSlotId?: true
    listingId?: true
    thirdPartyCampaignId?: true
    occurredAt?: true
    metadata?: true
    _all?: true
  }

  export type AdImpressionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdImpression to aggregate.
     */
    where?: AdImpressionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdImpressions to fetch.
     */
    orderBy?: AdImpressionOrderByWithRelationInput | AdImpressionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdImpressionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdImpressions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdImpressions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AdImpressions
    **/
    _count?: true | AdImpressionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdImpressionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdImpressionMaxAggregateInputType
  }

  export type GetAdImpressionAggregateType<T extends AdImpressionAggregateArgs> = {
        [P in keyof T & keyof AggregateAdImpression]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdImpression[P]>
      : GetScalarType<T[P], AggregateAdImpression[P]>
  }




  export type AdImpressionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdImpressionWhereInput
    orderBy?: AdImpressionOrderByWithAggregationInput | AdImpressionOrderByWithAggregationInput[]
    by: AdImpressionScalarFieldEnum[] | AdImpressionScalarFieldEnum
    having?: AdImpressionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdImpressionCountAggregateInputType | true
    _min?: AdImpressionMinAggregateInputType
    _max?: AdImpressionMaxAggregateInputType
  }

  export type AdImpressionGroupByOutputType = {
    id: string
    adSlotId: string
    listingId: string | null
    thirdPartyCampaignId: string | null
    occurredAt: Date
    metadata: JsonValue | null
    _count: AdImpressionCountAggregateOutputType | null
    _min: AdImpressionMinAggregateOutputType | null
    _max: AdImpressionMaxAggregateOutputType | null
  }

  type GetAdImpressionGroupByPayload<T extends AdImpressionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdImpressionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdImpressionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdImpressionGroupByOutputType[P]>
            : GetScalarType<T[P], AdImpressionGroupByOutputType[P]>
        }
      >
    >


  export type AdImpressionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adSlotId?: boolean
    listingId?: boolean
    thirdPartyCampaignId?: boolean
    occurredAt?: boolean
    metadata?: boolean
    adSlot?: boolean | AdSlotDefaultArgs<ExtArgs>
    listing?: boolean | AdImpression$listingArgs<ExtArgs>
  }, ExtArgs["result"]["adImpression"]>

  export type AdImpressionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adSlotId?: boolean
    listingId?: boolean
    thirdPartyCampaignId?: boolean
    occurredAt?: boolean
    metadata?: boolean
    adSlot?: boolean | AdSlotDefaultArgs<ExtArgs>
    listing?: boolean | AdImpression$listingArgs<ExtArgs>
  }, ExtArgs["result"]["adImpression"]>

  export type AdImpressionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adSlotId?: boolean
    listingId?: boolean
    thirdPartyCampaignId?: boolean
    occurredAt?: boolean
    metadata?: boolean
    adSlot?: boolean | AdSlotDefaultArgs<ExtArgs>
    listing?: boolean | AdImpression$listingArgs<ExtArgs>
  }, ExtArgs["result"]["adImpression"]>

  export type AdImpressionSelectScalar = {
    id?: boolean
    adSlotId?: boolean
    listingId?: boolean
    thirdPartyCampaignId?: boolean
    occurredAt?: boolean
    metadata?: boolean
  }

  export type AdImpressionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "adSlotId" | "listingId" | "thirdPartyCampaignId" | "occurredAt" | "metadata", ExtArgs["result"]["adImpression"]>
  export type AdImpressionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    adSlot?: boolean | AdSlotDefaultArgs<ExtArgs>
    listing?: boolean | AdImpression$listingArgs<ExtArgs>
  }
  export type AdImpressionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    adSlot?: boolean | AdSlotDefaultArgs<ExtArgs>
    listing?: boolean | AdImpression$listingArgs<ExtArgs>
  }
  export type AdImpressionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    adSlot?: boolean | AdSlotDefaultArgs<ExtArgs>
    listing?: boolean | AdImpression$listingArgs<ExtArgs>
  }

  export type $AdImpressionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AdImpression"
    objects: {
      adSlot: Prisma.$AdSlotPayload<ExtArgs>
      listing: Prisma.$ListingPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      adSlotId: string
      listingId: string | null
      thirdPartyCampaignId: string | null
      occurredAt: Date
      metadata: Prisma.JsonValue | null
    }, ExtArgs["result"]["adImpression"]>
    composites: {}
  }

  type AdImpressionGetPayload<S extends boolean | null | undefined | AdImpressionDefaultArgs> = $Result.GetResult<Prisma.$AdImpressionPayload, S>

  type AdImpressionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AdImpressionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdImpressionCountAggregateInputType | true
    }

  export interface AdImpressionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AdImpression'], meta: { name: 'AdImpression' } }
    /**
     * Find zero or one AdImpression that matches the filter.
     * @param {AdImpressionFindUniqueArgs} args - Arguments to find a AdImpression
     * @example
     * // Get one AdImpression
     * const adImpression = await prisma.adImpression.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdImpressionFindUniqueArgs>(args: SelectSubset<T, AdImpressionFindUniqueArgs<ExtArgs>>): Prisma__AdImpressionClient<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AdImpression that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AdImpressionFindUniqueOrThrowArgs} args - Arguments to find a AdImpression
     * @example
     * // Get one AdImpression
     * const adImpression = await prisma.adImpression.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdImpressionFindUniqueOrThrowArgs>(args: SelectSubset<T, AdImpressionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdImpressionClient<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdImpression that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdImpressionFindFirstArgs} args - Arguments to find a AdImpression
     * @example
     * // Get one AdImpression
     * const adImpression = await prisma.adImpression.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdImpressionFindFirstArgs>(args?: SelectSubset<T, AdImpressionFindFirstArgs<ExtArgs>>): Prisma__AdImpressionClient<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdImpression that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdImpressionFindFirstOrThrowArgs} args - Arguments to find a AdImpression
     * @example
     * // Get one AdImpression
     * const adImpression = await prisma.adImpression.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdImpressionFindFirstOrThrowArgs>(args?: SelectSubset<T, AdImpressionFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdImpressionClient<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AdImpressions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdImpressionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AdImpressions
     * const adImpressions = await prisma.adImpression.findMany()
     * 
     * // Get first 10 AdImpressions
     * const adImpressions = await prisma.adImpression.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adImpressionWithIdOnly = await prisma.adImpression.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdImpressionFindManyArgs>(args?: SelectSubset<T, AdImpressionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AdImpression.
     * @param {AdImpressionCreateArgs} args - Arguments to create a AdImpression.
     * @example
     * // Create one AdImpression
     * const AdImpression = await prisma.adImpression.create({
     *   data: {
     *     // ... data to create a AdImpression
     *   }
     * })
     * 
     */
    create<T extends AdImpressionCreateArgs>(args: SelectSubset<T, AdImpressionCreateArgs<ExtArgs>>): Prisma__AdImpressionClient<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AdImpressions.
     * @param {AdImpressionCreateManyArgs} args - Arguments to create many AdImpressions.
     * @example
     * // Create many AdImpressions
     * const adImpression = await prisma.adImpression.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdImpressionCreateManyArgs>(args?: SelectSubset<T, AdImpressionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AdImpressions and returns the data saved in the database.
     * @param {AdImpressionCreateManyAndReturnArgs} args - Arguments to create many AdImpressions.
     * @example
     * // Create many AdImpressions
     * const adImpression = await prisma.adImpression.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AdImpressions and only return the `id`
     * const adImpressionWithIdOnly = await prisma.adImpression.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdImpressionCreateManyAndReturnArgs>(args?: SelectSubset<T, AdImpressionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AdImpression.
     * @param {AdImpressionDeleteArgs} args - Arguments to delete one AdImpression.
     * @example
     * // Delete one AdImpression
     * const AdImpression = await prisma.adImpression.delete({
     *   where: {
     *     // ... filter to delete one AdImpression
     *   }
     * })
     * 
     */
    delete<T extends AdImpressionDeleteArgs>(args: SelectSubset<T, AdImpressionDeleteArgs<ExtArgs>>): Prisma__AdImpressionClient<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AdImpression.
     * @param {AdImpressionUpdateArgs} args - Arguments to update one AdImpression.
     * @example
     * // Update one AdImpression
     * const adImpression = await prisma.adImpression.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdImpressionUpdateArgs>(args: SelectSubset<T, AdImpressionUpdateArgs<ExtArgs>>): Prisma__AdImpressionClient<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AdImpressions.
     * @param {AdImpressionDeleteManyArgs} args - Arguments to filter AdImpressions to delete.
     * @example
     * // Delete a few AdImpressions
     * const { count } = await prisma.adImpression.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdImpressionDeleteManyArgs>(args?: SelectSubset<T, AdImpressionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdImpressions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdImpressionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AdImpressions
     * const adImpression = await prisma.adImpression.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdImpressionUpdateManyArgs>(args: SelectSubset<T, AdImpressionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdImpressions and returns the data updated in the database.
     * @param {AdImpressionUpdateManyAndReturnArgs} args - Arguments to update many AdImpressions.
     * @example
     * // Update many AdImpressions
     * const adImpression = await prisma.adImpression.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AdImpressions and only return the `id`
     * const adImpressionWithIdOnly = await prisma.adImpression.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AdImpressionUpdateManyAndReturnArgs>(args: SelectSubset<T, AdImpressionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AdImpression.
     * @param {AdImpressionUpsertArgs} args - Arguments to update or create a AdImpression.
     * @example
     * // Update or create a AdImpression
     * const adImpression = await prisma.adImpression.upsert({
     *   create: {
     *     // ... data to create a AdImpression
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AdImpression we want to update
     *   }
     * })
     */
    upsert<T extends AdImpressionUpsertArgs>(args: SelectSubset<T, AdImpressionUpsertArgs<ExtArgs>>): Prisma__AdImpressionClient<$Result.GetResult<Prisma.$AdImpressionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AdImpressions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdImpressionCountArgs} args - Arguments to filter AdImpressions to count.
     * @example
     * // Count the number of AdImpressions
     * const count = await prisma.adImpression.count({
     *   where: {
     *     // ... the filter for the AdImpressions we want to count
     *   }
     * })
    **/
    count<T extends AdImpressionCountArgs>(
      args?: Subset<T, AdImpressionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdImpressionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AdImpression.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdImpressionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdImpressionAggregateArgs>(args: Subset<T, AdImpressionAggregateArgs>): Prisma.PrismaPromise<GetAdImpressionAggregateType<T>>

    /**
     * Group by AdImpression.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdImpressionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdImpressionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdImpressionGroupByArgs['orderBy'] }
        : { orderBy?: AdImpressionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdImpressionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdImpressionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AdImpression model
   */
  readonly fields: AdImpressionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AdImpression.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdImpressionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    adSlot<T extends AdSlotDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AdSlotDefaultArgs<ExtArgs>>): Prisma__AdSlotClient<$Result.GetResult<Prisma.$AdSlotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    listing<T extends AdImpression$listingArgs<ExtArgs> = {}>(args?: Subset<T, AdImpression$listingArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AdImpression model
   */
  interface AdImpressionFieldRefs {
    readonly id: FieldRef<"AdImpression", 'String'>
    readonly adSlotId: FieldRef<"AdImpression", 'String'>
    readonly listingId: FieldRef<"AdImpression", 'String'>
    readonly thirdPartyCampaignId: FieldRef<"AdImpression", 'String'>
    readonly occurredAt: FieldRef<"AdImpression", 'DateTime'>
    readonly metadata: FieldRef<"AdImpression", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * AdImpression findUnique
   */
  export type AdImpressionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionInclude<ExtArgs> | null
    /**
     * Filter, which AdImpression to fetch.
     */
    where: AdImpressionWhereUniqueInput
  }

  /**
   * AdImpression findUniqueOrThrow
   */
  export type AdImpressionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionInclude<ExtArgs> | null
    /**
     * Filter, which AdImpression to fetch.
     */
    where: AdImpressionWhereUniqueInput
  }

  /**
   * AdImpression findFirst
   */
  export type AdImpressionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionInclude<ExtArgs> | null
    /**
     * Filter, which AdImpression to fetch.
     */
    where?: AdImpressionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdImpressions to fetch.
     */
    orderBy?: AdImpressionOrderByWithRelationInput | AdImpressionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdImpressions.
     */
    cursor?: AdImpressionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdImpressions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdImpressions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdImpressions.
     */
    distinct?: AdImpressionScalarFieldEnum | AdImpressionScalarFieldEnum[]
  }

  /**
   * AdImpression findFirstOrThrow
   */
  export type AdImpressionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionInclude<ExtArgs> | null
    /**
     * Filter, which AdImpression to fetch.
     */
    where?: AdImpressionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdImpressions to fetch.
     */
    orderBy?: AdImpressionOrderByWithRelationInput | AdImpressionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdImpressions.
     */
    cursor?: AdImpressionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdImpressions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdImpressions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdImpressions.
     */
    distinct?: AdImpressionScalarFieldEnum | AdImpressionScalarFieldEnum[]
  }

  /**
   * AdImpression findMany
   */
  export type AdImpressionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionInclude<ExtArgs> | null
    /**
     * Filter, which AdImpressions to fetch.
     */
    where?: AdImpressionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdImpressions to fetch.
     */
    orderBy?: AdImpressionOrderByWithRelationInput | AdImpressionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AdImpressions.
     */
    cursor?: AdImpressionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdImpressions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdImpressions.
     */
    skip?: number
    distinct?: AdImpressionScalarFieldEnum | AdImpressionScalarFieldEnum[]
  }

  /**
   * AdImpression create
   */
  export type AdImpressionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionInclude<ExtArgs> | null
    /**
     * The data needed to create a AdImpression.
     */
    data: XOR<AdImpressionCreateInput, AdImpressionUncheckedCreateInput>
  }

  /**
   * AdImpression createMany
   */
  export type AdImpressionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AdImpressions.
     */
    data: AdImpressionCreateManyInput | AdImpressionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AdImpression createManyAndReturn
   */
  export type AdImpressionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * The data used to create many AdImpressions.
     */
    data: AdImpressionCreateManyInput | AdImpressionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AdImpression update
   */
  export type AdImpressionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionInclude<ExtArgs> | null
    /**
     * The data needed to update a AdImpression.
     */
    data: XOR<AdImpressionUpdateInput, AdImpressionUncheckedUpdateInput>
    /**
     * Choose, which AdImpression to update.
     */
    where: AdImpressionWhereUniqueInput
  }

  /**
   * AdImpression updateMany
   */
  export type AdImpressionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AdImpressions.
     */
    data: XOR<AdImpressionUpdateManyMutationInput, AdImpressionUncheckedUpdateManyInput>
    /**
     * Filter which AdImpressions to update
     */
    where?: AdImpressionWhereInput
    /**
     * Limit how many AdImpressions to update.
     */
    limit?: number
  }

  /**
   * AdImpression updateManyAndReturn
   */
  export type AdImpressionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * The data used to update AdImpressions.
     */
    data: XOR<AdImpressionUpdateManyMutationInput, AdImpressionUncheckedUpdateManyInput>
    /**
     * Filter which AdImpressions to update
     */
    where?: AdImpressionWhereInput
    /**
     * Limit how many AdImpressions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AdImpression upsert
   */
  export type AdImpressionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionInclude<ExtArgs> | null
    /**
     * The filter to search for the AdImpression to update in case it exists.
     */
    where: AdImpressionWhereUniqueInput
    /**
     * In case the AdImpression found by the `where` argument doesn't exist, create a new AdImpression with this data.
     */
    create: XOR<AdImpressionCreateInput, AdImpressionUncheckedCreateInput>
    /**
     * In case the AdImpression was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdImpressionUpdateInput, AdImpressionUncheckedUpdateInput>
  }

  /**
   * AdImpression delete
   */
  export type AdImpressionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionInclude<ExtArgs> | null
    /**
     * Filter which AdImpression to delete.
     */
    where: AdImpressionWhereUniqueInput
  }

  /**
   * AdImpression deleteMany
   */
  export type AdImpressionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdImpressions to delete
     */
    where?: AdImpressionWhereInput
    /**
     * Limit how many AdImpressions to delete.
     */
    limit?: number
  }

  /**
   * AdImpression.listing
   */
  export type AdImpression$listingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    where?: ListingWhereInput
  }

  /**
   * AdImpression without action
   */
  export type AdImpressionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdImpression
     */
    select?: AdImpressionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdImpression
     */
    omit?: AdImpressionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdImpressionInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    passwordHash: 'passwordHash',
    isAdmin: 'isAdmin',
    status: 'status',
    createdAt: 'createdAt',
    lastLoginAt: 'lastLoginAt',
    deletedAt: 'deletedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserProfileScalarFieldEnum: {
    userId: 'userId',
    displayName: 'displayName',
    phone: 'phone',
    avatarUrl: 'avatarUrl',
    about: 'about',
    provinceId: 'provinceId',
    cityId: 'cityId',
    addressText: 'addressText'
  };

  export type UserProfileScalarFieldEnum = (typeof UserProfileScalarFieldEnum)[keyof typeof UserProfileScalarFieldEnum]


  export const LocationScalarFieldEnum: {
    id: 'id',
    country: 'country',
    name: 'name',
    slug: 'slug',
    parentId: 'parentId',
    createdAt: 'createdAt'
  };

  export type LocationScalarFieldEnum = (typeof LocationScalarFieldEnum)[keyof typeof LocationScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    parentId: 'parentId',
    level: 'level',
    isActive: 'isActive',
    sortOrder: 'sortOrder'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const ListingScalarFieldEnum: {
    id: 'id',
    sellerId: 'sellerId',
    categoryId: 'categoryId',
    title: 'title',
    description: 'description',
    priceAmount: 'priceAmount',
    currency: 'currency',
    condition: 'condition',
    quantity: 'quantity',
    status: 'status',
    provinceId: 'provinceId',
    cityId: 'cityId',
    viewsCount: 'viewsCount',
    favoritesCount: 'favoritesCount',
    contactsCount: 'contactsCount',
    promotedUntil: 'promotedUntil',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    publishedAt: 'publishedAt',
    expiresAt: 'expiresAt',
    deletedAt: 'deletedAt'
  };

  export type ListingScalarFieldEnum = (typeof ListingScalarFieldEnum)[keyof typeof ListingScalarFieldEnum]


  export const ListingMediaScalarFieldEnum: {
    id: 'id',
    listingId: 'listingId',
    url: 'url',
    position: 'position',
    width: 'width',
    height: 'height',
    mimeType: 'mimeType',
    createdAt: 'createdAt'
  };

  export type ListingMediaScalarFieldEnum = (typeof ListingMediaScalarFieldEnum)[keyof typeof ListingMediaScalarFieldEnum]


  export const ListingAttributeDefScalarFieldEnum: {
    id: 'id',
    categoryId: 'categoryId',
    name: 'name',
    key: 'key',
    dataType: 'dataType',
    enumOptions: 'enumOptions',
    isRequired: 'isRequired',
    sortOrder: 'sortOrder'
  };

  export type ListingAttributeDefScalarFieldEnum = (typeof ListingAttributeDefScalarFieldEnum)[keyof typeof ListingAttributeDefScalarFieldEnum]


  export const ListingAttributeScalarFieldEnum: {
    id: 'id',
    listingId: 'listingId',
    attrDefId: 'attrDefId',
    valueText: 'valueText',
    valueNumber: 'valueNumber',
    valueBool: 'valueBool'
  };

  export type ListingAttributeScalarFieldEnum = (typeof ListingAttributeScalarFieldEnum)[keyof typeof ListingAttributeScalarFieldEnum]


  export const FavoriteScalarFieldEnum: {
    userId: 'userId',
    listingId: 'listingId',
    createdAt: 'createdAt'
  };

  export type FavoriteScalarFieldEnum = (typeof FavoriteScalarFieldEnum)[keyof typeof FavoriteScalarFieldEnum]


  export const ConversationScalarFieldEnum: {
    id: 'id',
    listingId: 'listingId',
    buyerId: 'buyerId',
    sellerId: 'sellerId',
    lastMessageAt: 'lastMessageAt',
    status: 'status',
    createdAt: 'createdAt'
  };

  export type ConversationScalarFieldEnum = (typeof ConversationScalarFieldEnum)[keyof typeof ConversationScalarFieldEnum]


  export const MessageScalarFieldEnum: {
    id: 'id',
    conversationId: 'conversationId',
    senderId: 'senderId',
    body: 'body',
    mediaUrl: 'mediaUrl',
    createdAt: 'createdAt',
    readAt: 'readAt'
  };

  export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


  export const ReportScalarFieldEnum: {
    id: 'id',
    reporterId: 'reporterId',
    targetType: 'targetType',
    targetId: 'targetId',
    reason: 'reason',
    detailsText: 'detailsText',
    status: 'status',
    createdAt: 'createdAt',
    closedAt: 'closedAt',
    adminId: 'adminId'
  };

  export type ReportScalarFieldEnum = (typeof ReportScalarFieldEnum)[keyof typeof ReportScalarFieldEnum]


  export const PromotionPlanScalarFieldEnum: {
    id: 'id',
    code: 'code',
    name: 'name',
    description: 'description',
    type: 'type',
    durationDays: 'durationDays',
    priceAmount: 'priceAmount',
    currency: 'currency',
    isActive: 'isActive',
    sortOrder: 'sortOrder'
  };

  export type PromotionPlanScalarFieldEnum = (typeof PromotionPlanScalarFieldEnum)[keyof typeof PromotionPlanScalarFieldEnum]


  export const PromotionOrderScalarFieldEnum: {
    id: 'id',
    buyerId: 'buyerId',
    listingId: 'listingId',
    planId: 'planId',
    status: 'status',
    subtotal: 'subtotal',
    tax: 'tax',
    total: 'total',
    currency: 'currency',
    createdAt: 'createdAt',
    paidAt: 'paidAt',
    externalRef: 'externalRef',
    metadata: 'metadata'
  };

  export type PromotionOrderScalarFieldEnum = (typeof PromotionOrderScalarFieldEnum)[keyof typeof PromotionOrderScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    promotionOrderId: 'promotionOrderId',
    provider: 'provider',
    providerPaymentId: 'providerPaymentId',
    status: 'status',
    amount: 'amount',
    currency: 'currency',
    receiptUrl: 'receiptUrl',
    rawPayload: 'rawPayload',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const AdSlotScalarFieldEnum: {
    id: 'id',
    code: 'code',
    placement: 'placement',
    description: 'description',
    isActive: 'isActive',
    createdAt: 'createdAt'
  };

  export type AdSlotScalarFieldEnum = (typeof AdSlotScalarFieldEnum)[keyof typeof AdSlotScalarFieldEnum]


  export const AdImpressionScalarFieldEnum: {
    id: 'id',
    adSlotId: 'adSlotId',
    listingId: 'listingId',
    thirdPartyCampaignId: 'thirdPartyCampaignId',
    occurredAt: 'occurredAt',
    metadata: 'metadata'
  };

  export type AdImpressionScalarFieldEnum = (typeof AdImpressionScalarFieldEnum)[keyof typeof AdImpressionScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'UserStatus'
   */
  export type EnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus'>
    


  /**
   * Reference to a field of type 'UserStatus[]'
   */
  export type ListEnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Condition'
   */
  export type EnumConditionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Condition'>
    


  /**
   * Reference to a field of type 'Condition[]'
   */
  export type ListEnumConditionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Condition[]'>
    


  /**
   * Reference to a field of type 'ListingStatus'
   */
  export type EnumListingStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ListingStatus'>
    


  /**
   * Reference to a field of type 'ListingStatus[]'
   */
  export type ListEnumListingStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ListingStatus[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'ConversationStatus'
   */
  export type EnumConversationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ConversationStatus'>
    


  /**
   * Reference to a field of type 'ConversationStatus[]'
   */
  export type ListEnumConversationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ConversationStatus[]'>
    


  /**
   * Reference to a field of type 'ReportTarget'
   */
  export type EnumReportTargetFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReportTarget'>
    


  /**
   * Reference to a field of type 'ReportTarget[]'
   */
  export type ListEnumReportTargetFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReportTarget[]'>
    


  /**
   * Reference to a field of type 'ReportStatus'
   */
  export type EnumReportStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReportStatus'>
    


  /**
   * Reference to a field of type 'ReportStatus[]'
   */
  export type ListEnumReportStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReportStatus[]'>
    


  /**
   * Reference to a field of type 'PromotionType'
   */
  export type EnumPromotionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PromotionType'>
    


  /**
   * Reference to a field of type 'PromotionType[]'
   */
  export type ListEnumPromotionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PromotionType[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    passwordHash?: StringFilter<"User"> | string
    isAdmin?: BoolFilter<"User"> | boolean
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    createdAt?: DateTimeFilter<"User"> | Date | string
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    profile?: XOR<UserProfileNullableScalarRelationFilter, UserProfileWhereInput> | null
    listings?: ListingListRelationFilter
    favorites?: FavoriteListRelationFilter
    conversationsBuyer?: ConversationListRelationFilter
    conversationsSeller?: ConversationListRelationFilter
    messages?: MessageListRelationFilter
    reports?: ReportListRelationFilter
    promoOrders?: PromotionOrderListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    isAdmin?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    profile?: UserProfileOrderByWithRelationInput
    listings?: ListingOrderByRelationAggregateInput
    favorites?: FavoriteOrderByRelationAggregateInput
    conversationsBuyer?: ConversationOrderByRelationAggregateInput
    conversationsSeller?: ConversationOrderByRelationAggregateInput
    messages?: MessageOrderByRelationAggregateInput
    reports?: ReportOrderByRelationAggregateInput
    promoOrders?: PromotionOrderOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    passwordHash?: StringFilter<"User"> | string
    isAdmin?: BoolFilter<"User"> | boolean
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    createdAt?: DateTimeFilter<"User"> | Date | string
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    profile?: XOR<UserProfileNullableScalarRelationFilter, UserProfileWhereInput> | null
    listings?: ListingListRelationFilter
    favorites?: FavoriteListRelationFilter
    conversationsBuyer?: ConversationListRelationFilter
    conversationsSeller?: ConversationListRelationFilter
    messages?: MessageListRelationFilter
    reports?: ReportListRelationFilter
    promoOrders?: PromotionOrderListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    isAdmin?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    passwordHash?: StringWithAggregatesFilter<"User"> | string
    isAdmin?: BoolWithAggregatesFilter<"User"> | boolean
    status?: EnumUserStatusWithAggregatesFilter<"User"> | $Enums.UserStatus
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    lastLoginAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  }

  export type UserProfileWhereInput = {
    AND?: UserProfileWhereInput | UserProfileWhereInput[]
    OR?: UserProfileWhereInput[]
    NOT?: UserProfileWhereInput | UserProfileWhereInput[]
    userId?: StringFilter<"UserProfile"> | string
    displayName?: StringFilter<"UserProfile"> | string
    phone?: StringNullableFilter<"UserProfile"> | string | null
    avatarUrl?: StringNullableFilter<"UserProfile"> | string | null
    about?: StringNullableFilter<"UserProfile"> | string | null
    provinceId?: StringNullableFilter<"UserProfile"> | string | null
    cityId?: StringNullableFilter<"UserProfile"> | string | null
    addressText?: StringNullableFilter<"UserProfile"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserProfileOrderByWithRelationInput = {
    userId?: SortOrder
    displayName?: SortOrder
    phone?: SortOrderInput | SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    about?: SortOrderInput | SortOrder
    provinceId?: SortOrderInput | SortOrder
    cityId?: SortOrderInput | SortOrder
    addressText?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserProfileWhereUniqueInput = Prisma.AtLeast<{
    userId?: string
    AND?: UserProfileWhereInput | UserProfileWhereInput[]
    OR?: UserProfileWhereInput[]
    NOT?: UserProfileWhereInput | UserProfileWhereInput[]
    displayName?: StringFilter<"UserProfile"> | string
    phone?: StringNullableFilter<"UserProfile"> | string | null
    avatarUrl?: StringNullableFilter<"UserProfile"> | string | null
    about?: StringNullableFilter<"UserProfile"> | string | null
    provinceId?: StringNullableFilter<"UserProfile"> | string | null
    cityId?: StringNullableFilter<"UserProfile"> | string | null
    addressText?: StringNullableFilter<"UserProfile"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "userId">

  export type UserProfileOrderByWithAggregationInput = {
    userId?: SortOrder
    displayName?: SortOrder
    phone?: SortOrderInput | SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    about?: SortOrderInput | SortOrder
    provinceId?: SortOrderInput | SortOrder
    cityId?: SortOrderInput | SortOrder
    addressText?: SortOrderInput | SortOrder
    _count?: UserProfileCountOrderByAggregateInput
    _max?: UserProfileMaxOrderByAggregateInput
    _min?: UserProfileMinOrderByAggregateInput
  }

  export type UserProfileScalarWhereWithAggregatesInput = {
    AND?: UserProfileScalarWhereWithAggregatesInput | UserProfileScalarWhereWithAggregatesInput[]
    OR?: UserProfileScalarWhereWithAggregatesInput[]
    NOT?: UserProfileScalarWhereWithAggregatesInput | UserProfileScalarWhereWithAggregatesInput[]
    userId?: StringWithAggregatesFilter<"UserProfile"> | string
    displayName?: StringWithAggregatesFilter<"UserProfile"> | string
    phone?: StringNullableWithAggregatesFilter<"UserProfile"> | string | null
    avatarUrl?: StringNullableWithAggregatesFilter<"UserProfile"> | string | null
    about?: StringNullableWithAggregatesFilter<"UserProfile"> | string | null
    provinceId?: StringNullableWithAggregatesFilter<"UserProfile"> | string | null
    cityId?: StringNullableWithAggregatesFilter<"UserProfile"> | string | null
    addressText?: StringNullableWithAggregatesFilter<"UserProfile"> | string | null
  }

  export type LocationWhereInput = {
    AND?: LocationWhereInput | LocationWhereInput[]
    OR?: LocationWhereInput[]
    NOT?: LocationWhereInput | LocationWhereInput[]
    id?: StringFilter<"Location"> | string
    country?: StringFilter<"Location"> | string
    name?: StringFilter<"Location"> | string
    slug?: StringFilter<"Location"> | string
    parentId?: StringNullableFilter<"Location"> | string | null
    createdAt?: DateTimeFilter<"Location"> | Date | string
    parent?: XOR<LocationNullableScalarRelationFilter, LocationWhereInput> | null
    children?: LocationListRelationFilter
  }

  export type LocationOrderByWithRelationInput = {
    id?: SortOrder
    country?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    parentId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    parent?: LocationOrderByWithRelationInput
    children?: LocationOrderByRelationAggregateInput
  }

  export type LocationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: LocationWhereInput | LocationWhereInput[]
    OR?: LocationWhereInput[]
    NOT?: LocationWhereInput | LocationWhereInput[]
    country?: StringFilter<"Location"> | string
    name?: StringFilter<"Location"> | string
    parentId?: StringNullableFilter<"Location"> | string | null
    createdAt?: DateTimeFilter<"Location"> | Date | string
    parent?: XOR<LocationNullableScalarRelationFilter, LocationWhereInput> | null
    children?: LocationListRelationFilter
  }, "id" | "slug">

  export type LocationOrderByWithAggregationInput = {
    id?: SortOrder
    country?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    parentId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: LocationCountOrderByAggregateInput
    _max?: LocationMaxOrderByAggregateInput
    _min?: LocationMinOrderByAggregateInput
  }

  export type LocationScalarWhereWithAggregatesInput = {
    AND?: LocationScalarWhereWithAggregatesInput | LocationScalarWhereWithAggregatesInput[]
    OR?: LocationScalarWhereWithAggregatesInput[]
    NOT?: LocationScalarWhereWithAggregatesInput | LocationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Location"> | string
    country?: StringWithAggregatesFilter<"Location"> | string
    name?: StringWithAggregatesFilter<"Location"> | string
    slug?: StringWithAggregatesFilter<"Location"> | string
    parentId?: StringNullableWithAggregatesFilter<"Location"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Location"> | Date | string
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    slug?: StringFilter<"Category"> | string
    parentId?: StringNullableFilter<"Category"> | string | null
    level?: IntFilter<"Category"> | number
    isActive?: BoolFilter<"Category"> | boolean
    sortOrder?: IntFilter<"Category"> | number
    parent?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    children?: CategoryListRelationFilter
    listings?: ListingListRelationFilter
    attributeDefs?: ListingAttributeDefListRelationFilter
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    parentId?: SortOrderInput | SortOrder
    level?: SortOrder
    isActive?: SortOrder
    sortOrder?: SortOrder
    parent?: CategoryOrderByWithRelationInput
    children?: CategoryOrderByRelationAggregateInput
    listings?: ListingOrderByRelationAggregateInput
    attributeDefs?: ListingAttributeDefOrderByRelationAggregateInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    name?: StringFilter<"Category"> | string
    parentId?: StringNullableFilter<"Category"> | string | null
    level?: IntFilter<"Category"> | number
    isActive?: BoolFilter<"Category"> | boolean
    sortOrder?: IntFilter<"Category"> | number
    parent?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    children?: CategoryListRelationFilter
    listings?: ListingListRelationFilter
    attributeDefs?: ListingAttributeDefListRelationFilter
  }, "id" | "slug">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    parentId?: SortOrderInput | SortOrder
    level?: SortOrder
    isActive?: SortOrder
    sortOrder?: SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _avg?: CategoryAvgOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
    _sum?: CategorySumOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Category"> | string
    name?: StringWithAggregatesFilter<"Category"> | string
    slug?: StringWithAggregatesFilter<"Category"> | string
    parentId?: StringNullableWithAggregatesFilter<"Category"> | string | null
    level?: IntWithAggregatesFilter<"Category"> | number
    isActive?: BoolWithAggregatesFilter<"Category"> | boolean
    sortOrder?: IntWithAggregatesFilter<"Category"> | number
  }

  export type ListingWhereInput = {
    AND?: ListingWhereInput | ListingWhereInput[]
    OR?: ListingWhereInput[]
    NOT?: ListingWhereInput | ListingWhereInput[]
    id?: StringFilter<"Listing"> | string
    sellerId?: StringFilter<"Listing"> | string
    categoryId?: StringFilter<"Listing"> | string
    title?: StringFilter<"Listing"> | string
    description?: StringNullableFilter<"Listing"> | string | null
    priceAmount?: DecimalFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Listing"> | string
    condition?: EnumConditionFilter<"Listing"> | $Enums.Condition
    quantity?: IntFilter<"Listing"> | number
    status?: EnumListingStatusFilter<"Listing"> | $Enums.ListingStatus
    provinceId?: StringNullableFilter<"Listing"> | string | null
    cityId?: StringNullableFilter<"Listing"> | string | null
    viewsCount?: IntFilter<"Listing"> | number
    favoritesCount?: IntFilter<"Listing"> | number
    contactsCount?: IntFilter<"Listing"> | number
    promotedUntil?: DateTimeNullableFilter<"Listing"> | Date | string | null
    createdAt?: DateTimeFilter<"Listing"> | Date | string
    updatedAt?: DateTimeFilter<"Listing"> | Date | string
    publishedAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
    seller?: XOR<UserScalarRelationFilter, UserWhereInput>
    category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    media?: ListingMediaListRelationFilter
    attributes?: ListingAttributeListRelationFilter
    favorites?: FavoriteListRelationFilter
    conversations?: ConversationListRelationFilter
    promoOrders?: PromotionOrderListRelationFilter
    adImpressions?: AdImpressionListRelationFilter
  }

  export type ListingOrderByWithRelationInput = {
    id?: SortOrder
    sellerId?: SortOrder
    categoryId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    priceAmount?: SortOrder
    currency?: SortOrder
    condition?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    provinceId?: SortOrderInput | SortOrder
    cityId?: SortOrderInput | SortOrder
    viewsCount?: SortOrder
    favoritesCount?: SortOrder
    contactsCount?: SortOrder
    promotedUntil?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    publishedAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    seller?: UserOrderByWithRelationInput
    category?: CategoryOrderByWithRelationInput
    media?: ListingMediaOrderByRelationAggregateInput
    attributes?: ListingAttributeOrderByRelationAggregateInput
    favorites?: FavoriteOrderByRelationAggregateInput
    conversations?: ConversationOrderByRelationAggregateInput
    promoOrders?: PromotionOrderOrderByRelationAggregateInput
    adImpressions?: AdImpressionOrderByRelationAggregateInput
  }

  export type ListingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ListingWhereInput | ListingWhereInput[]
    OR?: ListingWhereInput[]
    NOT?: ListingWhereInput | ListingWhereInput[]
    sellerId?: StringFilter<"Listing"> | string
    categoryId?: StringFilter<"Listing"> | string
    title?: StringFilter<"Listing"> | string
    description?: StringNullableFilter<"Listing"> | string | null
    priceAmount?: DecimalFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Listing"> | string
    condition?: EnumConditionFilter<"Listing"> | $Enums.Condition
    quantity?: IntFilter<"Listing"> | number
    status?: EnumListingStatusFilter<"Listing"> | $Enums.ListingStatus
    provinceId?: StringNullableFilter<"Listing"> | string | null
    cityId?: StringNullableFilter<"Listing"> | string | null
    viewsCount?: IntFilter<"Listing"> | number
    favoritesCount?: IntFilter<"Listing"> | number
    contactsCount?: IntFilter<"Listing"> | number
    promotedUntil?: DateTimeNullableFilter<"Listing"> | Date | string | null
    createdAt?: DateTimeFilter<"Listing"> | Date | string
    updatedAt?: DateTimeFilter<"Listing"> | Date | string
    publishedAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
    seller?: XOR<UserScalarRelationFilter, UserWhereInput>
    category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    media?: ListingMediaListRelationFilter
    attributes?: ListingAttributeListRelationFilter
    favorites?: FavoriteListRelationFilter
    conversations?: ConversationListRelationFilter
    promoOrders?: PromotionOrderListRelationFilter
    adImpressions?: AdImpressionListRelationFilter
  }, "id">

  export type ListingOrderByWithAggregationInput = {
    id?: SortOrder
    sellerId?: SortOrder
    categoryId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    priceAmount?: SortOrder
    currency?: SortOrder
    condition?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    provinceId?: SortOrderInput | SortOrder
    cityId?: SortOrderInput | SortOrder
    viewsCount?: SortOrder
    favoritesCount?: SortOrder
    contactsCount?: SortOrder
    promotedUntil?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    publishedAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: ListingCountOrderByAggregateInput
    _avg?: ListingAvgOrderByAggregateInput
    _max?: ListingMaxOrderByAggregateInput
    _min?: ListingMinOrderByAggregateInput
    _sum?: ListingSumOrderByAggregateInput
  }

  export type ListingScalarWhereWithAggregatesInput = {
    AND?: ListingScalarWhereWithAggregatesInput | ListingScalarWhereWithAggregatesInput[]
    OR?: ListingScalarWhereWithAggregatesInput[]
    NOT?: ListingScalarWhereWithAggregatesInput | ListingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Listing"> | string
    sellerId?: StringWithAggregatesFilter<"Listing"> | string
    categoryId?: StringWithAggregatesFilter<"Listing"> | string
    title?: StringWithAggregatesFilter<"Listing"> | string
    description?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    priceAmount?: DecimalWithAggregatesFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"Listing"> | string
    condition?: EnumConditionWithAggregatesFilter<"Listing"> | $Enums.Condition
    quantity?: IntWithAggregatesFilter<"Listing"> | number
    status?: EnumListingStatusWithAggregatesFilter<"Listing"> | $Enums.ListingStatus
    provinceId?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    cityId?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    viewsCount?: IntWithAggregatesFilter<"Listing"> | number
    favoritesCount?: IntWithAggregatesFilter<"Listing"> | number
    contactsCount?: IntWithAggregatesFilter<"Listing"> | number
    promotedUntil?: DateTimeNullableWithAggregatesFilter<"Listing"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Listing"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Listing"> | Date | string
    publishedAt?: DateTimeNullableWithAggregatesFilter<"Listing"> | Date | string | null
    expiresAt?: DateTimeNullableWithAggregatesFilter<"Listing"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Listing"> | Date | string | null
  }

  export type ListingMediaWhereInput = {
    AND?: ListingMediaWhereInput | ListingMediaWhereInput[]
    OR?: ListingMediaWhereInput[]
    NOT?: ListingMediaWhereInput | ListingMediaWhereInput[]
    id?: StringFilter<"ListingMedia"> | string
    listingId?: StringFilter<"ListingMedia"> | string
    url?: StringFilter<"ListingMedia"> | string
    position?: IntFilter<"ListingMedia"> | number
    width?: IntNullableFilter<"ListingMedia"> | number | null
    height?: IntNullableFilter<"ListingMedia"> | number | null
    mimeType?: StringNullableFilter<"ListingMedia"> | string | null
    createdAt?: DateTimeFilter<"ListingMedia"> | Date | string
    listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
  }

  export type ListingMediaOrderByWithRelationInput = {
    id?: SortOrder
    listingId?: SortOrder
    url?: SortOrder
    position?: SortOrder
    width?: SortOrderInput | SortOrder
    height?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    listing?: ListingOrderByWithRelationInput
  }

  export type ListingMediaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ListingMediaWhereInput | ListingMediaWhereInput[]
    OR?: ListingMediaWhereInput[]
    NOT?: ListingMediaWhereInput | ListingMediaWhereInput[]
    listingId?: StringFilter<"ListingMedia"> | string
    url?: StringFilter<"ListingMedia"> | string
    position?: IntFilter<"ListingMedia"> | number
    width?: IntNullableFilter<"ListingMedia"> | number | null
    height?: IntNullableFilter<"ListingMedia"> | number | null
    mimeType?: StringNullableFilter<"ListingMedia"> | string | null
    createdAt?: DateTimeFilter<"ListingMedia"> | Date | string
    listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
  }, "id">

  export type ListingMediaOrderByWithAggregationInput = {
    id?: SortOrder
    listingId?: SortOrder
    url?: SortOrder
    position?: SortOrder
    width?: SortOrderInput | SortOrder
    height?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: ListingMediaCountOrderByAggregateInput
    _avg?: ListingMediaAvgOrderByAggregateInput
    _max?: ListingMediaMaxOrderByAggregateInput
    _min?: ListingMediaMinOrderByAggregateInput
    _sum?: ListingMediaSumOrderByAggregateInput
  }

  export type ListingMediaScalarWhereWithAggregatesInput = {
    AND?: ListingMediaScalarWhereWithAggregatesInput | ListingMediaScalarWhereWithAggregatesInput[]
    OR?: ListingMediaScalarWhereWithAggregatesInput[]
    NOT?: ListingMediaScalarWhereWithAggregatesInput | ListingMediaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ListingMedia"> | string
    listingId?: StringWithAggregatesFilter<"ListingMedia"> | string
    url?: StringWithAggregatesFilter<"ListingMedia"> | string
    position?: IntWithAggregatesFilter<"ListingMedia"> | number
    width?: IntNullableWithAggregatesFilter<"ListingMedia"> | number | null
    height?: IntNullableWithAggregatesFilter<"ListingMedia"> | number | null
    mimeType?: StringNullableWithAggregatesFilter<"ListingMedia"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ListingMedia"> | Date | string
  }

  export type ListingAttributeDefWhereInput = {
    AND?: ListingAttributeDefWhereInput | ListingAttributeDefWhereInput[]
    OR?: ListingAttributeDefWhereInput[]
    NOT?: ListingAttributeDefWhereInput | ListingAttributeDefWhereInput[]
    id?: StringFilter<"ListingAttributeDef"> | string
    categoryId?: StringFilter<"ListingAttributeDef"> | string
    name?: StringFilter<"ListingAttributeDef"> | string
    key?: StringFilter<"ListingAttributeDef"> | string
    dataType?: StringFilter<"ListingAttributeDef"> | string
    enumOptions?: JsonNullableFilter<"ListingAttributeDef">
    isRequired?: BoolFilter<"ListingAttributeDef"> | boolean
    sortOrder?: IntFilter<"ListingAttributeDef"> | number
    category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    attributes?: ListingAttributeListRelationFilter
  }

  export type ListingAttributeDefOrderByWithRelationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    key?: SortOrder
    dataType?: SortOrder
    enumOptions?: SortOrderInput | SortOrder
    isRequired?: SortOrder
    sortOrder?: SortOrder
    category?: CategoryOrderByWithRelationInput
    attributes?: ListingAttributeOrderByRelationAggregateInput
  }

  export type ListingAttributeDefWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    categoryId_key?: ListingAttributeDefCategoryIdKeyCompoundUniqueInput
    AND?: ListingAttributeDefWhereInput | ListingAttributeDefWhereInput[]
    OR?: ListingAttributeDefWhereInput[]
    NOT?: ListingAttributeDefWhereInput | ListingAttributeDefWhereInput[]
    categoryId?: StringFilter<"ListingAttributeDef"> | string
    name?: StringFilter<"ListingAttributeDef"> | string
    key?: StringFilter<"ListingAttributeDef"> | string
    dataType?: StringFilter<"ListingAttributeDef"> | string
    enumOptions?: JsonNullableFilter<"ListingAttributeDef">
    isRequired?: BoolFilter<"ListingAttributeDef"> | boolean
    sortOrder?: IntFilter<"ListingAttributeDef"> | number
    category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    attributes?: ListingAttributeListRelationFilter
  }, "id" | "categoryId_key">

  export type ListingAttributeDefOrderByWithAggregationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    key?: SortOrder
    dataType?: SortOrder
    enumOptions?: SortOrderInput | SortOrder
    isRequired?: SortOrder
    sortOrder?: SortOrder
    _count?: ListingAttributeDefCountOrderByAggregateInput
    _avg?: ListingAttributeDefAvgOrderByAggregateInput
    _max?: ListingAttributeDefMaxOrderByAggregateInput
    _min?: ListingAttributeDefMinOrderByAggregateInput
    _sum?: ListingAttributeDefSumOrderByAggregateInput
  }

  export type ListingAttributeDefScalarWhereWithAggregatesInput = {
    AND?: ListingAttributeDefScalarWhereWithAggregatesInput | ListingAttributeDefScalarWhereWithAggregatesInput[]
    OR?: ListingAttributeDefScalarWhereWithAggregatesInput[]
    NOT?: ListingAttributeDefScalarWhereWithAggregatesInput | ListingAttributeDefScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ListingAttributeDef"> | string
    categoryId?: StringWithAggregatesFilter<"ListingAttributeDef"> | string
    name?: StringWithAggregatesFilter<"ListingAttributeDef"> | string
    key?: StringWithAggregatesFilter<"ListingAttributeDef"> | string
    dataType?: StringWithAggregatesFilter<"ListingAttributeDef"> | string
    enumOptions?: JsonNullableWithAggregatesFilter<"ListingAttributeDef">
    isRequired?: BoolWithAggregatesFilter<"ListingAttributeDef"> | boolean
    sortOrder?: IntWithAggregatesFilter<"ListingAttributeDef"> | number
  }

  export type ListingAttributeWhereInput = {
    AND?: ListingAttributeWhereInput | ListingAttributeWhereInput[]
    OR?: ListingAttributeWhereInput[]
    NOT?: ListingAttributeWhereInput | ListingAttributeWhereInput[]
    id?: StringFilter<"ListingAttribute"> | string
    listingId?: StringFilter<"ListingAttribute"> | string
    attrDefId?: StringFilter<"ListingAttribute"> | string
    valueText?: StringNullableFilter<"ListingAttribute"> | string | null
    valueNumber?: DecimalNullableFilter<"ListingAttribute"> | Decimal | DecimalJsLike | number | string | null
    valueBool?: BoolNullableFilter<"ListingAttribute"> | boolean | null
    listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
    attrDef?: XOR<ListingAttributeDefScalarRelationFilter, ListingAttributeDefWhereInput>
  }

  export type ListingAttributeOrderByWithRelationInput = {
    id?: SortOrder
    listingId?: SortOrder
    attrDefId?: SortOrder
    valueText?: SortOrderInput | SortOrder
    valueNumber?: SortOrderInput | SortOrder
    valueBool?: SortOrderInput | SortOrder
    listing?: ListingOrderByWithRelationInput
    attrDef?: ListingAttributeDefOrderByWithRelationInput
  }

  export type ListingAttributeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    listingId_attrDefId?: ListingAttributeListingIdAttrDefIdCompoundUniqueInput
    AND?: ListingAttributeWhereInput | ListingAttributeWhereInput[]
    OR?: ListingAttributeWhereInput[]
    NOT?: ListingAttributeWhereInput | ListingAttributeWhereInput[]
    listingId?: StringFilter<"ListingAttribute"> | string
    attrDefId?: StringFilter<"ListingAttribute"> | string
    valueText?: StringNullableFilter<"ListingAttribute"> | string | null
    valueNumber?: DecimalNullableFilter<"ListingAttribute"> | Decimal | DecimalJsLike | number | string | null
    valueBool?: BoolNullableFilter<"ListingAttribute"> | boolean | null
    listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
    attrDef?: XOR<ListingAttributeDefScalarRelationFilter, ListingAttributeDefWhereInput>
  }, "id" | "listingId_attrDefId">

  export type ListingAttributeOrderByWithAggregationInput = {
    id?: SortOrder
    listingId?: SortOrder
    attrDefId?: SortOrder
    valueText?: SortOrderInput | SortOrder
    valueNumber?: SortOrderInput | SortOrder
    valueBool?: SortOrderInput | SortOrder
    _count?: ListingAttributeCountOrderByAggregateInput
    _avg?: ListingAttributeAvgOrderByAggregateInput
    _max?: ListingAttributeMaxOrderByAggregateInput
    _min?: ListingAttributeMinOrderByAggregateInput
    _sum?: ListingAttributeSumOrderByAggregateInput
  }

  export type ListingAttributeScalarWhereWithAggregatesInput = {
    AND?: ListingAttributeScalarWhereWithAggregatesInput | ListingAttributeScalarWhereWithAggregatesInput[]
    OR?: ListingAttributeScalarWhereWithAggregatesInput[]
    NOT?: ListingAttributeScalarWhereWithAggregatesInput | ListingAttributeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ListingAttribute"> | string
    listingId?: StringWithAggregatesFilter<"ListingAttribute"> | string
    attrDefId?: StringWithAggregatesFilter<"ListingAttribute"> | string
    valueText?: StringNullableWithAggregatesFilter<"ListingAttribute"> | string | null
    valueNumber?: DecimalNullableWithAggregatesFilter<"ListingAttribute"> | Decimal | DecimalJsLike | number | string | null
    valueBool?: BoolNullableWithAggregatesFilter<"ListingAttribute"> | boolean | null
  }

  export type FavoriteWhereInput = {
    AND?: FavoriteWhereInput | FavoriteWhereInput[]
    OR?: FavoriteWhereInput[]
    NOT?: FavoriteWhereInput | FavoriteWhereInput[]
    userId?: StringFilter<"Favorite"> | string
    listingId?: StringFilter<"Favorite"> | string
    createdAt?: DateTimeFilter<"Favorite"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
  }

  export type FavoriteOrderByWithRelationInput = {
    userId?: SortOrder
    listingId?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
    listing?: ListingOrderByWithRelationInput
  }

  export type FavoriteWhereUniqueInput = Prisma.AtLeast<{
    userId_listingId?: FavoriteUserIdListingIdCompoundUniqueInput
    AND?: FavoriteWhereInput | FavoriteWhereInput[]
    OR?: FavoriteWhereInput[]
    NOT?: FavoriteWhereInput | FavoriteWhereInput[]
    userId?: StringFilter<"Favorite"> | string
    listingId?: StringFilter<"Favorite"> | string
    createdAt?: DateTimeFilter<"Favorite"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
  }, "userId_listingId">

  export type FavoriteOrderByWithAggregationInput = {
    userId?: SortOrder
    listingId?: SortOrder
    createdAt?: SortOrder
    _count?: FavoriteCountOrderByAggregateInput
    _max?: FavoriteMaxOrderByAggregateInput
    _min?: FavoriteMinOrderByAggregateInput
  }

  export type FavoriteScalarWhereWithAggregatesInput = {
    AND?: FavoriteScalarWhereWithAggregatesInput | FavoriteScalarWhereWithAggregatesInput[]
    OR?: FavoriteScalarWhereWithAggregatesInput[]
    NOT?: FavoriteScalarWhereWithAggregatesInput | FavoriteScalarWhereWithAggregatesInput[]
    userId?: StringWithAggregatesFilter<"Favorite"> | string
    listingId?: StringWithAggregatesFilter<"Favorite"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Favorite"> | Date | string
  }

  export type ConversationWhereInput = {
    AND?: ConversationWhereInput | ConversationWhereInput[]
    OR?: ConversationWhereInput[]
    NOT?: ConversationWhereInput | ConversationWhereInput[]
    id?: StringFilter<"Conversation"> | string
    listingId?: StringFilter<"Conversation"> | string
    buyerId?: StringFilter<"Conversation"> | string
    sellerId?: StringFilter<"Conversation"> | string
    lastMessageAt?: DateTimeNullableFilter<"Conversation"> | Date | string | null
    status?: EnumConversationStatusFilter<"Conversation"> | $Enums.ConversationStatus
    createdAt?: DateTimeFilter<"Conversation"> | Date | string
    listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
    buyer?: XOR<UserScalarRelationFilter, UserWhereInput>
    seller?: XOR<UserScalarRelationFilter, UserWhereInput>
    messages?: MessageListRelationFilter
  }

  export type ConversationOrderByWithRelationInput = {
    id?: SortOrder
    listingId?: SortOrder
    buyerId?: SortOrder
    sellerId?: SortOrder
    lastMessageAt?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    listing?: ListingOrderByWithRelationInput
    buyer?: UserOrderByWithRelationInput
    seller?: UserOrderByWithRelationInput
    messages?: MessageOrderByRelationAggregateInput
  }

  export type ConversationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    listingId_buyerId_sellerId?: ConversationListingIdBuyerIdSellerIdCompoundUniqueInput
    AND?: ConversationWhereInput | ConversationWhereInput[]
    OR?: ConversationWhereInput[]
    NOT?: ConversationWhereInput | ConversationWhereInput[]
    listingId?: StringFilter<"Conversation"> | string
    buyerId?: StringFilter<"Conversation"> | string
    sellerId?: StringFilter<"Conversation"> | string
    lastMessageAt?: DateTimeNullableFilter<"Conversation"> | Date | string | null
    status?: EnumConversationStatusFilter<"Conversation"> | $Enums.ConversationStatus
    createdAt?: DateTimeFilter<"Conversation"> | Date | string
    listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
    buyer?: XOR<UserScalarRelationFilter, UserWhereInput>
    seller?: XOR<UserScalarRelationFilter, UserWhereInput>
    messages?: MessageListRelationFilter
  }, "id" | "listingId_buyerId_sellerId">

  export type ConversationOrderByWithAggregationInput = {
    id?: SortOrder
    listingId?: SortOrder
    buyerId?: SortOrder
    sellerId?: SortOrder
    lastMessageAt?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    _count?: ConversationCountOrderByAggregateInput
    _max?: ConversationMaxOrderByAggregateInput
    _min?: ConversationMinOrderByAggregateInput
  }

  export type ConversationScalarWhereWithAggregatesInput = {
    AND?: ConversationScalarWhereWithAggregatesInput | ConversationScalarWhereWithAggregatesInput[]
    OR?: ConversationScalarWhereWithAggregatesInput[]
    NOT?: ConversationScalarWhereWithAggregatesInput | ConversationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Conversation"> | string
    listingId?: StringWithAggregatesFilter<"Conversation"> | string
    buyerId?: StringWithAggregatesFilter<"Conversation"> | string
    sellerId?: StringWithAggregatesFilter<"Conversation"> | string
    lastMessageAt?: DateTimeNullableWithAggregatesFilter<"Conversation"> | Date | string | null
    status?: EnumConversationStatusWithAggregatesFilter<"Conversation"> | $Enums.ConversationStatus
    createdAt?: DateTimeWithAggregatesFilter<"Conversation"> | Date | string
  }

  export type MessageWhereInput = {
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    id?: StringFilter<"Message"> | string
    conversationId?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    body?: StringNullableFilter<"Message"> | string | null
    mediaUrl?: StringNullableFilter<"Message"> | string | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    readAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    conversation?: XOR<ConversationScalarRelationFilter, ConversationWhereInput>
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type MessageOrderByWithRelationInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    body?: SortOrderInput | SortOrder
    mediaUrl?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    readAt?: SortOrderInput | SortOrder
    conversation?: ConversationOrderByWithRelationInput
    sender?: UserOrderByWithRelationInput
  }

  export type MessageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    conversationId?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    body?: StringNullableFilter<"Message"> | string | null
    mediaUrl?: StringNullableFilter<"Message"> | string | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    readAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    conversation?: XOR<ConversationScalarRelationFilter, ConversationWhereInput>
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type MessageOrderByWithAggregationInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    body?: SortOrderInput | SortOrder
    mediaUrl?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    readAt?: SortOrderInput | SortOrder
    _count?: MessageCountOrderByAggregateInput
    _max?: MessageMaxOrderByAggregateInput
    _min?: MessageMinOrderByAggregateInput
  }

  export type MessageScalarWhereWithAggregatesInput = {
    AND?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    OR?: MessageScalarWhereWithAggregatesInput[]
    NOT?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Message"> | string
    conversationId?: StringWithAggregatesFilter<"Message"> | string
    senderId?: StringWithAggregatesFilter<"Message"> | string
    body?: StringNullableWithAggregatesFilter<"Message"> | string | null
    mediaUrl?: StringNullableWithAggregatesFilter<"Message"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Message"> | Date | string
    readAt?: DateTimeNullableWithAggregatesFilter<"Message"> | Date | string | null
  }

  export type ReportWhereInput = {
    AND?: ReportWhereInput | ReportWhereInput[]
    OR?: ReportWhereInput[]
    NOT?: ReportWhereInput | ReportWhereInput[]
    id?: StringFilter<"Report"> | string
    reporterId?: StringFilter<"Report"> | string
    targetType?: EnumReportTargetFilter<"Report"> | $Enums.ReportTarget
    targetId?: StringFilter<"Report"> | string
    reason?: StringFilter<"Report"> | string
    detailsText?: StringNullableFilter<"Report"> | string | null
    status?: EnumReportStatusFilter<"Report"> | $Enums.ReportStatus
    createdAt?: DateTimeFilter<"Report"> | Date | string
    closedAt?: DateTimeNullableFilter<"Report"> | Date | string | null
    adminId?: StringNullableFilter<"Report"> | string | null
    reporter?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ReportOrderByWithRelationInput = {
    id?: SortOrder
    reporterId?: SortOrder
    targetType?: SortOrder
    targetId?: SortOrder
    reason?: SortOrder
    detailsText?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    closedAt?: SortOrderInput | SortOrder
    adminId?: SortOrderInput | SortOrder
    reporter?: UserOrderByWithRelationInput
  }

  export type ReportWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReportWhereInput | ReportWhereInput[]
    OR?: ReportWhereInput[]
    NOT?: ReportWhereInput | ReportWhereInput[]
    reporterId?: StringFilter<"Report"> | string
    targetType?: EnumReportTargetFilter<"Report"> | $Enums.ReportTarget
    targetId?: StringFilter<"Report"> | string
    reason?: StringFilter<"Report"> | string
    detailsText?: StringNullableFilter<"Report"> | string | null
    status?: EnumReportStatusFilter<"Report"> | $Enums.ReportStatus
    createdAt?: DateTimeFilter<"Report"> | Date | string
    closedAt?: DateTimeNullableFilter<"Report"> | Date | string | null
    adminId?: StringNullableFilter<"Report"> | string | null
    reporter?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ReportOrderByWithAggregationInput = {
    id?: SortOrder
    reporterId?: SortOrder
    targetType?: SortOrder
    targetId?: SortOrder
    reason?: SortOrder
    detailsText?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    closedAt?: SortOrderInput | SortOrder
    adminId?: SortOrderInput | SortOrder
    _count?: ReportCountOrderByAggregateInput
    _max?: ReportMaxOrderByAggregateInput
    _min?: ReportMinOrderByAggregateInput
  }

  export type ReportScalarWhereWithAggregatesInput = {
    AND?: ReportScalarWhereWithAggregatesInput | ReportScalarWhereWithAggregatesInput[]
    OR?: ReportScalarWhereWithAggregatesInput[]
    NOT?: ReportScalarWhereWithAggregatesInput | ReportScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Report"> | string
    reporterId?: StringWithAggregatesFilter<"Report"> | string
    targetType?: EnumReportTargetWithAggregatesFilter<"Report"> | $Enums.ReportTarget
    targetId?: StringWithAggregatesFilter<"Report"> | string
    reason?: StringWithAggregatesFilter<"Report"> | string
    detailsText?: StringNullableWithAggregatesFilter<"Report"> | string | null
    status?: EnumReportStatusWithAggregatesFilter<"Report"> | $Enums.ReportStatus
    createdAt?: DateTimeWithAggregatesFilter<"Report"> | Date | string
    closedAt?: DateTimeNullableWithAggregatesFilter<"Report"> | Date | string | null
    adminId?: StringNullableWithAggregatesFilter<"Report"> | string | null
  }

  export type PromotionPlanWhereInput = {
    AND?: PromotionPlanWhereInput | PromotionPlanWhereInput[]
    OR?: PromotionPlanWhereInput[]
    NOT?: PromotionPlanWhereInput | PromotionPlanWhereInput[]
    id?: StringFilter<"PromotionPlan"> | string
    code?: StringFilter<"PromotionPlan"> | string
    name?: StringFilter<"PromotionPlan"> | string
    description?: StringNullableFilter<"PromotionPlan"> | string | null
    type?: EnumPromotionTypeFilter<"PromotionPlan"> | $Enums.PromotionType
    durationDays?: IntFilter<"PromotionPlan"> | number
    priceAmount?: DecimalFilter<"PromotionPlan"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PromotionPlan"> | string
    isActive?: BoolFilter<"PromotionPlan"> | boolean
    sortOrder?: IntFilter<"PromotionPlan"> | number
    orders?: PromotionOrderListRelationFilter
  }

  export type PromotionPlanOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrder
    durationDays?: SortOrder
    priceAmount?: SortOrder
    currency?: SortOrder
    isActive?: SortOrder
    sortOrder?: SortOrder
    orders?: PromotionOrderOrderByRelationAggregateInput
  }

  export type PromotionPlanWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: string
    AND?: PromotionPlanWhereInput | PromotionPlanWhereInput[]
    OR?: PromotionPlanWhereInput[]
    NOT?: PromotionPlanWhereInput | PromotionPlanWhereInput[]
    name?: StringFilter<"PromotionPlan"> | string
    description?: StringNullableFilter<"PromotionPlan"> | string | null
    type?: EnumPromotionTypeFilter<"PromotionPlan"> | $Enums.PromotionType
    durationDays?: IntFilter<"PromotionPlan"> | number
    priceAmount?: DecimalFilter<"PromotionPlan"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PromotionPlan"> | string
    isActive?: BoolFilter<"PromotionPlan"> | boolean
    sortOrder?: IntFilter<"PromotionPlan"> | number
    orders?: PromotionOrderListRelationFilter
  }, "id" | "code">

  export type PromotionPlanOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrder
    durationDays?: SortOrder
    priceAmount?: SortOrder
    currency?: SortOrder
    isActive?: SortOrder
    sortOrder?: SortOrder
    _count?: PromotionPlanCountOrderByAggregateInput
    _avg?: PromotionPlanAvgOrderByAggregateInput
    _max?: PromotionPlanMaxOrderByAggregateInput
    _min?: PromotionPlanMinOrderByAggregateInput
    _sum?: PromotionPlanSumOrderByAggregateInput
  }

  export type PromotionPlanScalarWhereWithAggregatesInput = {
    AND?: PromotionPlanScalarWhereWithAggregatesInput | PromotionPlanScalarWhereWithAggregatesInput[]
    OR?: PromotionPlanScalarWhereWithAggregatesInput[]
    NOT?: PromotionPlanScalarWhereWithAggregatesInput | PromotionPlanScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PromotionPlan"> | string
    code?: StringWithAggregatesFilter<"PromotionPlan"> | string
    name?: StringWithAggregatesFilter<"PromotionPlan"> | string
    description?: StringNullableWithAggregatesFilter<"PromotionPlan"> | string | null
    type?: EnumPromotionTypeWithAggregatesFilter<"PromotionPlan"> | $Enums.PromotionType
    durationDays?: IntWithAggregatesFilter<"PromotionPlan"> | number
    priceAmount?: DecimalWithAggregatesFilter<"PromotionPlan"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"PromotionPlan"> | string
    isActive?: BoolWithAggregatesFilter<"PromotionPlan"> | boolean
    sortOrder?: IntWithAggregatesFilter<"PromotionPlan"> | number
  }

  export type PromotionOrderWhereInput = {
    AND?: PromotionOrderWhereInput | PromotionOrderWhereInput[]
    OR?: PromotionOrderWhereInput[]
    NOT?: PromotionOrderWhereInput | PromotionOrderWhereInput[]
    id?: StringFilter<"PromotionOrder"> | string
    buyerId?: StringFilter<"PromotionOrder"> | string
    listingId?: StringFilter<"PromotionOrder"> | string
    planId?: StringFilter<"PromotionOrder"> | string
    status?: StringFilter<"PromotionOrder"> | string
    subtotal?: DecimalFilter<"PromotionOrder"> | Decimal | DecimalJsLike | number | string
    tax?: DecimalFilter<"PromotionOrder"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"PromotionOrder"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PromotionOrder"> | string
    createdAt?: DateTimeFilter<"PromotionOrder"> | Date | string
    paidAt?: DateTimeNullableFilter<"PromotionOrder"> | Date | string | null
    externalRef?: StringNullableFilter<"PromotionOrder"> | string | null
    metadata?: JsonNullableFilter<"PromotionOrder">
    buyer?: XOR<UserScalarRelationFilter, UserWhereInput>
    listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
    plan?: XOR<PromotionPlanScalarRelationFilter, PromotionPlanWhereInput>
    payments?: PaymentListRelationFilter
  }

  export type PromotionOrderOrderByWithRelationInput = {
    id?: SortOrder
    buyerId?: SortOrder
    listingId?: SortOrder
    planId?: SortOrder
    status?: SortOrder
    subtotal?: SortOrder
    tax?: SortOrder
    total?: SortOrder
    currency?: SortOrder
    createdAt?: SortOrder
    paidAt?: SortOrderInput | SortOrder
    externalRef?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    buyer?: UserOrderByWithRelationInput
    listing?: ListingOrderByWithRelationInput
    plan?: PromotionPlanOrderByWithRelationInput
    payments?: PaymentOrderByRelationAggregateInput
  }

  export type PromotionOrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PromotionOrderWhereInput | PromotionOrderWhereInput[]
    OR?: PromotionOrderWhereInput[]
    NOT?: PromotionOrderWhereInput | PromotionOrderWhereInput[]
    buyerId?: StringFilter<"PromotionOrder"> | string
    listingId?: StringFilter<"PromotionOrder"> | string
    planId?: StringFilter<"PromotionOrder"> | string
    status?: StringFilter<"PromotionOrder"> | string
    subtotal?: DecimalFilter<"PromotionOrder"> | Decimal | DecimalJsLike | number | string
    tax?: DecimalFilter<"PromotionOrder"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"PromotionOrder"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PromotionOrder"> | string
    createdAt?: DateTimeFilter<"PromotionOrder"> | Date | string
    paidAt?: DateTimeNullableFilter<"PromotionOrder"> | Date | string | null
    externalRef?: StringNullableFilter<"PromotionOrder"> | string | null
    metadata?: JsonNullableFilter<"PromotionOrder">
    buyer?: XOR<UserScalarRelationFilter, UserWhereInput>
    listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
    plan?: XOR<PromotionPlanScalarRelationFilter, PromotionPlanWhereInput>
    payments?: PaymentListRelationFilter
  }, "id">

  export type PromotionOrderOrderByWithAggregationInput = {
    id?: SortOrder
    buyerId?: SortOrder
    listingId?: SortOrder
    planId?: SortOrder
    status?: SortOrder
    subtotal?: SortOrder
    tax?: SortOrder
    total?: SortOrder
    currency?: SortOrder
    createdAt?: SortOrder
    paidAt?: SortOrderInput | SortOrder
    externalRef?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    _count?: PromotionOrderCountOrderByAggregateInput
    _avg?: PromotionOrderAvgOrderByAggregateInput
    _max?: PromotionOrderMaxOrderByAggregateInput
    _min?: PromotionOrderMinOrderByAggregateInput
    _sum?: PromotionOrderSumOrderByAggregateInput
  }

  export type PromotionOrderScalarWhereWithAggregatesInput = {
    AND?: PromotionOrderScalarWhereWithAggregatesInput | PromotionOrderScalarWhereWithAggregatesInput[]
    OR?: PromotionOrderScalarWhereWithAggregatesInput[]
    NOT?: PromotionOrderScalarWhereWithAggregatesInput | PromotionOrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PromotionOrder"> | string
    buyerId?: StringWithAggregatesFilter<"PromotionOrder"> | string
    listingId?: StringWithAggregatesFilter<"PromotionOrder"> | string
    planId?: StringWithAggregatesFilter<"PromotionOrder"> | string
    status?: StringWithAggregatesFilter<"PromotionOrder"> | string
    subtotal?: DecimalWithAggregatesFilter<"PromotionOrder"> | Decimal | DecimalJsLike | number | string
    tax?: DecimalWithAggregatesFilter<"PromotionOrder"> | Decimal | DecimalJsLike | number | string
    total?: DecimalWithAggregatesFilter<"PromotionOrder"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"PromotionOrder"> | string
    createdAt?: DateTimeWithAggregatesFilter<"PromotionOrder"> | Date | string
    paidAt?: DateTimeNullableWithAggregatesFilter<"PromotionOrder"> | Date | string | null
    externalRef?: StringNullableWithAggregatesFilter<"PromotionOrder"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"PromotionOrder">
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: StringFilter<"Payment"> | string
    promotionOrderId?: StringFilter<"Payment"> | string
    provider?: StringFilter<"Payment"> | string
    providerPaymentId?: StringFilter<"Payment"> | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Payment"> | string
    receiptUrl?: StringNullableFilter<"Payment"> | string | null
    rawPayload?: JsonNullableFilter<"Payment">
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    promotionOrder?: XOR<PromotionOrderScalarRelationFilter, PromotionOrderWhereInput>
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    promotionOrderId?: SortOrder
    provider?: SortOrder
    providerPaymentId?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    receiptUrl?: SortOrderInput | SortOrder
    rawPayload?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    promotionOrder?: PromotionOrderOrderByWithRelationInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    promotionOrderId?: StringFilter<"Payment"> | string
    provider?: StringFilter<"Payment"> | string
    providerPaymentId?: StringFilter<"Payment"> | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Payment"> | string
    receiptUrl?: StringNullableFilter<"Payment"> | string | null
    rawPayload?: JsonNullableFilter<"Payment">
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    promotionOrder?: XOR<PromotionOrderScalarRelationFilter, PromotionOrderWhereInput>
  }, "id">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    promotionOrderId?: SortOrder
    provider?: SortOrder
    providerPaymentId?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    receiptUrl?: SortOrderInput | SortOrder
    rawPayload?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Payment"> | string
    promotionOrderId?: StringWithAggregatesFilter<"Payment"> | string
    provider?: StringWithAggregatesFilter<"Payment"> | string
    providerPaymentId?: StringWithAggregatesFilter<"Payment"> | string
    status?: EnumPaymentStatusWithAggregatesFilter<"Payment"> | $Enums.PaymentStatus
    amount?: DecimalWithAggregatesFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"Payment"> | string
    receiptUrl?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    rawPayload?: JsonNullableWithAggregatesFilter<"Payment">
    createdAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
  }

  export type AdSlotWhereInput = {
    AND?: AdSlotWhereInput | AdSlotWhereInput[]
    OR?: AdSlotWhereInput[]
    NOT?: AdSlotWhereInput | AdSlotWhereInput[]
    id?: StringFilter<"AdSlot"> | string
    code?: StringFilter<"AdSlot"> | string
    placement?: StringFilter<"AdSlot"> | string
    description?: StringNullableFilter<"AdSlot"> | string | null
    isActive?: BoolFilter<"AdSlot"> | boolean
    createdAt?: DateTimeFilter<"AdSlot"> | Date | string
    impressions?: AdImpressionListRelationFilter
  }

  export type AdSlotOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    placement?: SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    impressions?: AdImpressionOrderByRelationAggregateInput
  }

  export type AdSlotWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: string
    AND?: AdSlotWhereInput | AdSlotWhereInput[]
    OR?: AdSlotWhereInput[]
    NOT?: AdSlotWhereInput | AdSlotWhereInput[]
    placement?: StringFilter<"AdSlot"> | string
    description?: StringNullableFilter<"AdSlot"> | string | null
    isActive?: BoolFilter<"AdSlot"> | boolean
    createdAt?: DateTimeFilter<"AdSlot"> | Date | string
    impressions?: AdImpressionListRelationFilter
  }, "id" | "code">

  export type AdSlotOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    placement?: SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    _count?: AdSlotCountOrderByAggregateInput
    _max?: AdSlotMaxOrderByAggregateInput
    _min?: AdSlotMinOrderByAggregateInput
  }

  export type AdSlotScalarWhereWithAggregatesInput = {
    AND?: AdSlotScalarWhereWithAggregatesInput | AdSlotScalarWhereWithAggregatesInput[]
    OR?: AdSlotScalarWhereWithAggregatesInput[]
    NOT?: AdSlotScalarWhereWithAggregatesInput | AdSlotScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AdSlot"> | string
    code?: StringWithAggregatesFilter<"AdSlot"> | string
    placement?: StringWithAggregatesFilter<"AdSlot"> | string
    description?: StringNullableWithAggregatesFilter<"AdSlot"> | string | null
    isActive?: BoolWithAggregatesFilter<"AdSlot"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"AdSlot"> | Date | string
  }

  export type AdImpressionWhereInput = {
    AND?: AdImpressionWhereInput | AdImpressionWhereInput[]
    OR?: AdImpressionWhereInput[]
    NOT?: AdImpressionWhereInput | AdImpressionWhereInput[]
    id?: StringFilter<"AdImpression"> | string
    adSlotId?: StringFilter<"AdImpression"> | string
    listingId?: StringNullableFilter<"AdImpression"> | string | null
    thirdPartyCampaignId?: StringNullableFilter<"AdImpression"> | string | null
    occurredAt?: DateTimeFilter<"AdImpression"> | Date | string
    metadata?: JsonNullableFilter<"AdImpression">
    adSlot?: XOR<AdSlotScalarRelationFilter, AdSlotWhereInput>
    listing?: XOR<ListingNullableScalarRelationFilter, ListingWhereInput> | null
  }

  export type AdImpressionOrderByWithRelationInput = {
    id?: SortOrder
    adSlotId?: SortOrder
    listingId?: SortOrderInput | SortOrder
    thirdPartyCampaignId?: SortOrderInput | SortOrder
    occurredAt?: SortOrder
    metadata?: SortOrderInput | SortOrder
    adSlot?: AdSlotOrderByWithRelationInput
    listing?: ListingOrderByWithRelationInput
  }

  export type AdImpressionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AdImpressionWhereInput | AdImpressionWhereInput[]
    OR?: AdImpressionWhereInput[]
    NOT?: AdImpressionWhereInput | AdImpressionWhereInput[]
    adSlotId?: StringFilter<"AdImpression"> | string
    listingId?: StringNullableFilter<"AdImpression"> | string | null
    thirdPartyCampaignId?: StringNullableFilter<"AdImpression"> | string | null
    occurredAt?: DateTimeFilter<"AdImpression"> | Date | string
    metadata?: JsonNullableFilter<"AdImpression">
    adSlot?: XOR<AdSlotScalarRelationFilter, AdSlotWhereInput>
    listing?: XOR<ListingNullableScalarRelationFilter, ListingWhereInput> | null
  }, "id">

  export type AdImpressionOrderByWithAggregationInput = {
    id?: SortOrder
    adSlotId?: SortOrder
    listingId?: SortOrderInput | SortOrder
    thirdPartyCampaignId?: SortOrderInput | SortOrder
    occurredAt?: SortOrder
    metadata?: SortOrderInput | SortOrder
    _count?: AdImpressionCountOrderByAggregateInput
    _max?: AdImpressionMaxOrderByAggregateInput
    _min?: AdImpressionMinOrderByAggregateInput
  }

  export type AdImpressionScalarWhereWithAggregatesInput = {
    AND?: AdImpressionScalarWhereWithAggregatesInput | AdImpressionScalarWhereWithAggregatesInput[]
    OR?: AdImpressionScalarWhereWithAggregatesInput[]
    NOT?: AdImpressionScalarWhereWithAggregatesInput | AdImpressionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AdImpression"> | string
    adSlotId?: StringWithAggregatesFilter<"AdImpression"> | string
    listingId?: StringNullableWithAggregatesFilter<"AdImpression"> | string | null
    thirdPartyCampaignId?: StringNullableWithAggregatesFilter<"AdImpression"> | string | null
    occurredAt?: DateTimeWithAggregatesFilter<"AdImpression"> | Date | string
    metadata?: JsonNullableWithAggregatesFilter<"AdImpression">
  }

  export type UserCreateInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileCreateNestedOneWithoutUserInput
    listings?: ListingCreateNestedManyWithoutSellerInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationCreateNestedManyWithoutSellerInput
    messages?: MessageCreateNestedManyWithoutSenderInput
    reports?: ReportCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutBuyerInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    listings?: ListingUncheckedCreateNestedManyWithoutSellerInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationUncheckedCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationUncheckedCreateNestedManyWithoutSellerInput
    messages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutBuyerInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    listings?: ListingUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUpdateManyWithoutSellerNestedInput
    messages?: MessageUpdateManyWithoutSenderNestedInput
    reports?: ReportUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutBuyerNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    listings?: ListingUncheckedUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUncheckedUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUncheckedUpdateManyWithoutSellerNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutBuyerNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserProfileCreateInput = {
    displayName: string
    phone?: string | null
    avatarUrl?: string | null
    about?: string | null
    provinceId?: string | null
    cityId?: string | null
    addressText?: string | null
    user: UserCreateNestedOneWithoutProfileInput
  }

  export type UserProfileUncheckedCreateInput = {
    userId: string
    displayName: string
    phone?: string | null
    avatarUrl?: string | null
    about?: string | null
    provinceId?: string | null
    cityId?: string | null
    addressText?: string | null
  }

  export type UserProfileUpdateInput = {
    displayName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    about?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressText?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutProfileNestedInput
  }

  export type UserProfileUncheckedUpdateInput = {
    userId?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    about?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressText?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserProfileCreateManyInput = {
    userId: string
    displayName: string
    phone?: string | null
    avatarUrl?: string | null
    about?: string | null
    provinceId?: string | null
    cityId?: string | null
    addressText?: string | null
  }

  export type UserProfileUpdateManyMutationInput = {
    displayName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    about?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressText?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserProfileUncheckedUpdateManyInput = {
    userId?: StringFieldUpdateOperationsInput | string
    displayName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    about?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressText?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LocationCreateInput = {
    id?: string
    country: string
    name: string
    slug: string
    createdAt?: Date | string
    parent?: LocationCreateNestedOneWithoutChildrenInput
    children?: LocationCreateNestedManyWithoutParentInput
  }

  export type LocationUncheckedCreateInput = {
    id?: string
    country: string
    name: string
    slug: string
    parentId?: string | null
    createdAt?: Date | string
    children?: LocationUncheckedCreateNestedManyWithoutParentInput
  }

  export type LocationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: LocationUpdateOneWithoutChildrenNestedInput
    children?: LocationUpdateManyWithoutParentNestedInput
  }

  export type LocationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: LocationUncheckedUpdateManyWithoutParentNestedInput
  }

  export type LocationCreateManyInput = {
    id?: string
    country: string
    name: string
    slug: string
    parentId?: string | null
    createdAt?: Date | string
  }

  export type LocationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LocationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryCreateInput = {
    id?: string
    name: string
    slug: string
    level: number
    isActive?: boolean
    sortOrder?: number
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    listings?: ListingCreateNestedManyWithoutCategoryInput
    attributeDefs?: ListingAttributeDefCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    parentId?: string | null
    level: number
    isActive?: boolean
    sortOrder?: number
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    listings?: ListingUncheckedCreateNestedManyWithoutCategoryInput
    attributeDefs?: ListingAttributeDefUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    listings?: ListingUpdateManyWithoutCategoryNestedInput
    attributeDefs?: ListingAttributeDefUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    listings?: ListingUncheckedUpdateManyWithoutCategoryNestedInput
    attributeDefs?: ListingAttributeDefUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: string
    name: string
    slug: string
    parentId?: string | null
    level: number
    isActive?: boolean
    sortOrder?: number
  }

  export type CategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
  }

  export type ListingCreateInput = {
    id?: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    seller: UserCreateNestedOneWithoutListingsInput
    category: CategoryCreateNestedOneWithoutListingsInput
    media?: ListingMediaCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeCreateNestedManyWithoutListingInput
    favorites?: FavoriteCreateNestedManyWithoutListingInput
    conversations?: ConversationCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateInput = {
    id?: string
    sellerId: string
    categoryId: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    media?: ListingMediaUncheckedCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeUncheckedCreateNestedManyWithoutListingInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutListingInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seller?: UserUpdateOneRequiredWithoutListingsNestedInput
    category?: CategoryUpdateOneRequiredWithoutListingsNestedInput
    media?: ListingMediaUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUpdateManyWithoutListingNestedInput
    conversations?: ConversationUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: ListingMediaUncheckedUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUncheckedUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutListingNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUncheckedUpdateManyWithoutListingNestedInput
  }

  export type ListingCreateManyInput = {
    id?: string
    sellerId: string
    categoryId: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type ListingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ListingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ListingMediaCreateInput = {
    id?: string
    url: string
    position: number
    width?: number | null
    height?: number | null
    mimeType?: string | null
    createdAt?: Date | string
    listing: ListingCreateNestedOneWithoutMediaInput
  }

  export type ListingMediaUncheckedCreateInput = {
    id?: string
    listingId: string
    url: string
    position: number
    width?: number | null
    height?: number | null
    mimeType?: string | null
    createdAt?: Date | string
  }

  export type ListingMediaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listing?: ListingUpdateOneRequiredWithoutMediaNestedInput
  }

  export type ListingMediaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingMediaCreateManyInput = {
    id?: string
    listingId: string
    url: string
    position: number
    width?: number | null
    height?: number | null
    mimeType?: string | null
    createdAt?: Date | string
  }

  export type ListingMediaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingMediaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingAttributeDefCreateInput = {
    id?: string
    name: string
    key: string
    dataType: string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: boolean
    sortOrder?: number
    category: CategoryCreateNestedOneWithoutAttributeDefsInput
    attributes?: ListingAttributeCreateNestedManyWithoutAttrDefInput
  }

  export type ListingAttributeDefUncheckedCreateInput = {
    id?: string
    categoryId: string
    name: string
    key: string
    dataType: string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: boolean
    sortOrder?: number
    attributes?: ListingAttributeUncheckedCreateNestedManyWithoutAttrDefInput
  }

  export type ListingAttributeDefUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    category?: CategoryUpdateOneRequiredWithoutAttributeDefsNestedInput
    attributes?: ListingAttributeUpdateManyWithoutAttrDefNestedInput
  }

  export type ListingAttributeDefUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    attributes?: ListingAttributeUncheckedUpdateManyWithoutAttrDefNestedInput
  }

  export type ListingAttributeDefCreateManyInput = {
    id?: string
    categoryId: string
    name: string
    key: string
    dataType: string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: boolean
    sortOrder?: number
  }

  export type ListingAttributeDefUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
  }

  export type ListingAttributeDefUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
  }

  export type ListingAttributeCreateInput = {
    id?: string
    valueText?: string | null
    valueNumber?: Decimal | DecimalJsLike | number | string | null
    valueBool?: boolean | null
    listing: ListingCreateNestedOneWithoutAttributesInput
    attrDef: ListingAttributeDefCreateNestedOneWithoutAttributesInput
  }

  export type ListingAttributeUncheckedCreateInput = {
    id?: string
    listingId: string
    attrDefId: string
    valueText?: string | null
    valueNumber?: Decimal | DecimalJsLike | number | string | null
    valueBool?: boolean | null
  }

  export type ListingAttributeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    valueText?: NullableStringFieldUpdateOperationsInput | string | null
    valueNumber?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valueBool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    listing?: ListingUpdateOneRequiredWithoutAttributesNestedInput
    attrDef?: ListingAttributeDefUpdateOneRequiredWithoutAttributesNestedInput
  }

  export type ListingAttributeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    attrDefId?: StringFieldUpdateOperationsInput | string
    valueText?: NullableStringFieldUpdateOperationsInput | string | null
    valueNumber?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valueBool?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ListingAttributeCreateManyInput = {
    id?: string
    listingId: string
    attrDefId: string
    valueText?: string | null
    valueNumber?: Decimal | DecimalJsLike | number | string | null
    valueBool?: boolean | null
  }

  export type ListingAttributeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    valueText?: NullableStringFieldUpdateOperationsInput | string | null
    valueNumber?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valueBool?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ListingAttributeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    attrDefId?: StringFieldUpdateOperationsInput | string
    valueText?: NullableStringFieldUpdateOperationsInput | string | null
    valueNumber?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valueBool?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FavoriteCreateInput = {
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutFavoritesInput
    listing: ListingCreateNestedOneWithoutFavoritesInput
  }

  export type FavoriteUncheckedCreateInput = {
    userId: string
    listingId: string
    createdAt?: Date | string
  }

  export type FavoriteUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFavoritesNestedInput
    listing?: ListingUpdateOneRequiredWithoutFavoritesNestedInput
  }

  export type FavoriteUncheckedUpdateInput = {
    userId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteCreateManyInput = {
    userId: string
    listingId: string
    createdAt?: Date | string
  }

  export type FavoriteUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteUncheckedUpdateManyInput = {
    userId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversationCreateInput = {
    id?: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
    listing: ListingCreateNestedOneWithoutConversationsInput
    buyer: UserCreateNestedOneWithoutConversationsBuyerInput
    seller: UserCreateNestedOneWithoutConversationsSellerInput
    messages?: MessageCreateNestedManyWithoutConversationInput
  }

  export type ConversationUncheckedCreateInput = {
    id?: string
    listingId: string
    buyerId: string
    sellerId: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
    messages?: MessageUncheckedCreateNestedManyWithoutConversationInput
  }

  export type ConversationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listing?: ListingUpdateOneRequiredWithoutConversationsNestedInput
    buyer?: UserUpdateOneRequiredWithoutConversationsBuyerNestedInput
    seller?: UserUpdateOneRequiredWithoutConversationsSellerNestedInput
    messages?: MessageUpdateManyWithoutConversationNestedInput
  }

  export type ConversationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: MessageUncheckedUpdateManyWithoutConversationNestedInput
  }

  export type ConversationCreateManyInput = {
    id?: string
    listingId: string
    buyerId: string
    sellerId: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
  }

  export type ConversationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageCreateInput = {
    id?: string
    body?: string | null
    mediaUrl?: string | null
    createdAt?: Date | string
    readAt?: Date | string | null
    conversation: ConversationCreateNestedOneWithoutMessagesInput
    sender: UserCreateNestedOneWithoutMessagesInput
  }

  export type MessageUncheckedCreateInput = {
    id?: string
    conversationId: string
    senderId: string
    body?: string | null
    mediaUrl?: string | null
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type MessageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    body?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conversation?: ConversationUpdateOneRequiredWithoutMessagesNestedInput
    sender?: UserUpdateOneRequiredWithoutMessagesNestedInput
  }

  export type MessageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    body?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MessageCreateManyInput = {
    id?: string
    conversationId: string
    senderId: string
    body?: string | null
    mediaUrl?: string | null
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type MessageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    body?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MessageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    body?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportCreateInput = {
    id?: string
    targetType: $Enums.ReportTarget
    targetId: string
    reason: string
    detailsText?: string | null
    status?: $Enums.ReportStatus
    createdAt?: Date | string
    closedAt?: Date | string | null
    adminId?: string | null
    reporter: UserCreateNestedOneWithoutReportsInput
  }

  export type ReportUncheckedCreateInput = {
    id?: string
    reporterId: string
    targetType: $Enums.ReportTarget
    targetId: string
    reason: string
    detailsText?: string | null
    status?: $Enums.ReportStatus
    createdAt?: Date | string
    closedAt?: Date | string | null
    adminId?: string | null
  }

  export type ReportUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    targetType?: EnumReportTargetFieldUpdateOperationsInput | $Enums.ReportTarget
    targetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    detailsText?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    closedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
    reporter?: UserUpdateOneRequiredWithoutReportsNestedInput
  }

  export type ReportUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reporterId?: StringFieldUpdateOperationsInput | string
    targetType?: EnumReportTargetFieldUpdateOperationsInput | $Enums.ReportTarget
    targetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    detailsText?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    closedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportCreateManyInput = {
    id?: string
    reporterId: string
    targetType: $Enums.ReportTarget
    targetId: string
    reason: string
    detailsText?: string | null
    status?: $Enums.ReportStatus
    createdAt?: Date | string
    closedAt?: Date | string | null
    adminId?: string | null
  }

  export type ReportUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    targetType?: EnumReportTargetFieldUpdateOperationsInput | $Enums.ReportTarget
    targetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    detailsText?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    closedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reporterId?: StringFieldUpdateOperationsInput | string
    targetType?: EnumReportTargetFieldUpdateOperationsInput | $Enums.ReportTarget
    targetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    detailsText?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    closedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionPlanCreateInput = {
    id?: string
    code: string
    name: string
    description?: string | null
    type: $Enums.PromotionType
    durationDays: number
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    isActive?: boolean
    sortOrder?: number
    orders?: PromotionOrderCreateNestedManyWithoutPlanInput
  }

  export type PromotionPlanUncheckedCreateInput = {
    id?: string
    code: string
    name: string
    description?: string | null
    type: $Enums.PromotionType
    durationDays: number
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    isActive?: boolean
    sortOrder?: number
    orders?: PromotionOrderUncheckedCreateNestedManyWithoutPlanInput
  }

  export type PromotionPlanUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    durationDays?: IntFieldUpdateOperationsInput | number
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    orders?: PromotionOrderUpdateManyWithoutPlanNestedInput
  }

  export type PromotionPlanUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    durationDays?: IntFieldUpdateOperationsInput | number
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    orders?: PromotionOrderUncheckedUpdateManyWithoutPlanNestedInput
  }

  export type PromotionPlanCreateManyInput = {
    id?: string
    code: string
    name: string
    description?: string | null
    type: $Enums.PromotionType
    durationDays: number
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    isActive?: boolean
    sortOrder?: number
  }

  export type PromotionPlanUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    durationDays?: IntFieldUpdateOperationsInput | number
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
  }

  export type PromotionPlanUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    durationDays?: IntFieldUpdateOperationsInput | number
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
  }

  export type PromotionOrderCreateInput = {
    id?: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    buyer: UserCreateNestedOneWithoutPromoOrdersInput
    listing: ListingCreateNestedOneWithoutPromoOrdersInput
    plan: PromotionPlanCreateNestedOneWithoutOrdersInput
    payments?: PaymentCreateNestedManyWithoutPromotionOrderInput
  }

  export type PromotionOrderUncheckedCreateInput = {
    id?: string
    buyerId: string
    listingId: string
    planId: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    payments?: PaymentUncheckedCreateNestedManyWithoutPromotionOrderInput
  }

  export type PromotionOrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    buyer?: UserUpdateOneRequiredWithoutPromoOrdersNestedInput
    listing?: ListingUpdateOneRequiredWithoutPromoOrdersNestedInput
    plan?: PromotionPlanUpdateOneRequiredWithoutOrdersNestedInput
    payments?: PaymentUpdateManyWithoutPromotionOrderNestedInput
  }

  export type PromotionOrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    planId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    payments?: PaymentUncheckedUpdateManyWithoutPromotionOrderNestedInput
  }

  export type PromotionOrderCreateManyInput = {
    id?: string
    buyerId: string
    listingId: string
    planId: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PromotionOrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PromotionOrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    planId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PaymentCreateInput = {
    id?: string
    provider: string
    providerPaymentId: string
    status: $Enums.PaymentStatus
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    receiptUrl?: string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    promotionOrder: PromotionOrderCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateInput = {
    id?: string
    promotionOrderId: string
    provider: string
    providerPaymentId: string
    status: $Enums.PaymentStatus
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    receiptUrl?: string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerPaymentId?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    receiptUrl?: NullableStringFieldUpdateOperationsInput | string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    promotionOrder?: PromotionOrderUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    promotionOrderId?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerPaymentId?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    receiptUrl?: NullableStringFieldUpdateOperationsInput | string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentCreateManyInput = {
    id?: string
    promotionOrderId: string
    provider: string
    providerPaymentId: string
    status: $Enums.PaymentStatus
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    receiptUrl?: string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerPaymentId?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    receiptUrl?: NullableStringFieldUpdateOperationsInput | string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    promotionOrderId?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerPaymentId?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    receiptUrl?: NullableStringFieldUpdateOperationsInput | string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdSlotCreateInput = {
    id?: string
    code: string
    placement: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    impressions?: AdImpressionCreateNestedManyWithoutAdSlotInput
  }

  export type AdSlotUncheckedCreateInput = {
    id?: string
    code: string
    placement: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
    impressions?: AdImpressionUncheckedCreateNestedManyWithoutAdSlotInput
  }

  export type AdSlotUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    placement?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    impressions?: AdImpressionUpdateManyWithoutAdSlotNestedInput
  }

  export type AdSlotUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    placement?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    impressions?: AdImpressionUncheckedUpdateManyWithoutAdSlotNestedInput
  }

  export type AdSlotCreateManyInput = {
    id?: string
    code: string
    placement: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
  }

  export type AdSlotUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    placement?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdSlotUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    placement?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdImpressionCreateInput = {
    id?: string
    thirdPartyCampaignId?: string | null
    occurredAt?: Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    adSlot: AdSlotCreateNestedOneWithoutImpressionsInput
    listing?: ListingCreateNestedOneWithoutAdImpressionsInput
  }

  export type AdImpressionUncheckedCreateInput = {
    id?: string
    adSlotId: string
    listingId?: string | null
    thirdPartyCampaignId?: string | null
    occurredAt?: Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AdImpressionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    thirdPartyCampaignId?: NullableStringFieldUpdateOperationsInput | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    adSlot?: AdSlotUpdateOneRequiredWithoutImpressionsNestedInput
    listing?: ListingUpdateOneWithoutAdImpressionsNestedInput
  }

  export type AdImpressionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    adSlotId?: StringFieldUpdateOperationsInput | string
    listingId?: NullableStringFieldUpdateOperationsInput | string | null
    thirdPartyCampaignId?: NullableStringFieldUpdateOperationsInput | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AdImpressionCreateManyInput = {
    id?: string
    adSlotId: string
    listingId?: string | null
    thirdPartyCampaignId?: string | null
    occurredAt?: Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AdImpressionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    thirdPartyCampaignId?: NullableStringFieldUpdateOperationsInput | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AdImpressionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    adSlotId?: StringFieldUpdateOperationsInput | string
    listingId?: NullableStringFieldUpdateOperationsInput | string | null
    thirdPartyCampaignId?: NullableStringFieldUpdateOperationsInput | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type EnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UserProfileNullableScalarRelationFilter = {
    is?: UserProfileWhereInput | null
    isNot?: UserProfileWhereInput | null
  }

  export type ListingListRelationFilter = {
    every?: ListingWhereInput
    some?: ListingWhereInput
    none?: ListingWhereInput
  }

  export type FavoriteListRelationFilter = {
    every?: FavoriteWhereInput
    some?: FavoriteWhereInput
    none?: FavoriteWhereInput
  }

  export type ConversationListRelationFilter = {
    every?: ConversationWhereInput
    some?: ConversationWhereInput
    none?: ConversationWhereInput
  }

  export type MessageListRelationFilter = {
    every?: MessageWhereInput
    some?: MessageWhereInput
    none?: MessageWhereInput
  }

  export type ReportListRelationFilter = {
    every?: ReportWhereInput
    some?: ReportWhereInput
    none?: ReportWhereInput
  }

  export type PromotionOrderListRelationFilter = {
    every?: PromotionOrderWhereInput
    some?: PromotionOrderWhereInput
    none?: PromotionOrderWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ListingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavoriteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ConversationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReportOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PromotionOrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    isAdmin?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    lastLoginAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    isAdmin?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    lastLoginAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    isAdmin?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    lastLoginAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type UserProfileCountOrderByAggregateInput = {
    userId?: SortOrder
    displayName?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    about?: SortOrder
    provinceId?: SortOrder
    cityId?: SortOrder
    addressText?: SortOrder
  }

  export type UserProfileMaxOrderByAggregateInput = {
    userId?: SortOrder
    displayName?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    about?: SortOrder
    provinceId?: SortOrder
    cityId?: SortOrder
    addressText?: SortOrder
  }

  export type UserProfileMinOrderByAggregateInput = {
    userId?: SortOrder
    displayName?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    about?: SortOrder
    provinceId?: SortOrder
    cityId?: SortOrder
    addressText?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type LocationNullableScalarRelationFilter = {
    is?: LocationWhereInput | null
    isNot?: LocationWhereInput | null
  }

  export type LocationListRelationFilter = {
    every?: LocationWhereInput
    some?: LocationWhereInput
    none?: LocationWhereInput
  }

  export type LocationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LocationCountOrderByAggregateInput = {
    id?: SortOrder
    country?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    parentId?: SortOrder
    createdAt?: SortOrder
  }

  export type LocationMaxOrderByAggregateInput = {
    id?: SortOrder
    country?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    parentId?: SortOrder
    createdAt?: SortOrder
  }

  export type LocationMinOrderByAggregateInput = {
    id?: SortOrder
    country?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    parentId?: SortOrder
    createdAt?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type CategoryNullableScalarRelationFilter = {
    is?: CategoryWhereInput | null
    isNot?: CategoryWhereInput | null
  }

  export type CategoryListRelationFilter = {
    every?: CategoryWhereInput
    some?: CategoryWhereInput
    none?: CategoryWhereInput
  }

  export type ListingAttributeDefListRelationFilter = {
    every?: ListingAttributeDefWhereInput
    some?: ListingAttributeDefWhereInput
    none?: ListingAttributeDefWhereInput
  }

  export type CategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ListingAttributeDefOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    parentId?: SortOrder
    level?: SortOrder
    isActive?: SortOrder
    sortOrder?: SortOrder
  }

  export type CategoryAvgOrderByAggregateInput = {
    level?: SortOrder
    sortOrder?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    parentId?: SortOrder
    level?: SortOrder
    isActive?: SortOrder
    sortOrder?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    parentId?: SortOrder
    level?: SortOrder
    isActive?: SortOrder
    sortOrder?: SortOrder
  }

  export type CategorySumOrderByAggregateInput = {
    level?: SortOrder
    sortOrder?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type EnumConditionFilter<$PrismaModel = never> = {
    equals?: $Enums.Condition | EnumConditionFieldRefInput<$PrismaModel>
    in?: $Enums.Condition[] | ListEnumConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.Condition[] | ListEnumConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumConditionFilter<$PrismaModel> | $Enums.Condition
  }

  export type EnumListingStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ListingStatus | EnumListingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumListingStatusFilter<$PrismaModel> | $Enums.ListingStatus
  }

  export type CategoryScalarRelationFilter = {
    is?: CategoryWhereInput
    isNot?: CategoryWhereInput
  }

  export type ListingMediaListRelationFilter = {
    every?: ListingMediaWhereInput
    some?: ListingMediaWhereInput
    none?: ListingMediaWhereInput
  }

  export type ListingAttributeListRelationFilter = {
    every?: ListingAttributeWhereInput
    some?: ListingAttributeWhereInput
    none?: ListingAttributeWhereInput
  }

  export type AdImpressionListRelationFilter = {
    every?: AdImpressionWhereInput
    some?: AdImpressionWhereInput
    none?: AdImpressionWhereInput
  }

  export type ListingMediaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ListingAttributeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AdImpressionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ListingCountOrderByAggregateInput = {
    id?: SortOrder
    sellerId?: SortOrder
    categoryId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    priceAmount?: SortOrder
    currency?: SortOrder
    condition?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    provinceId?: SortOrder
    cityId?: SortOrder
    viewsCount?: SortOrder
    favoritesCount?: SortOrder
    contactsCount?: SortOrder
    promotedUntil?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    publishedAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ListingAvgOrderByAggregateInput = {
    priceAmount?: SortOrder
    quantity?: SortOrder
    viewsCount?: SortOrder
    favoritesCount?: SortOrder
    contactsCount?: SortOrder
  }

  export type ListingMaxOrderByAggregateInput = {
    id?: SortOrder
    sellerId?: SortOrder
    categoryId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    priceAmount?: SortOrder
    currency?: SortOrder
    condition?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    provinceId?: SortOrder
    cityId?: SortOrder
    viewsCount?: SortOrder
    favoritesCount?: SortOrder
    contactsCount?: SortOrder
    promotedUntil?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    publishedAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ListingMinOrderByAggregateInput = {
    id?: SortOrder
    sellerId?: SortOrder
    categoryId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    priceAmount?: SortOrder
    currency?: SortOrder
    condition?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    provinceId?: SortOrder
    cityId?: SortOrder
    viewsCount?: SortOrder
    favoritesCount?: SortOrder
    contactsCount?: SortOrder
    promotedUntil?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    publishedAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ListingSumOrderByAggregateInput = {
    priceAmount?: SortOrder
    quantity?: SortOrder
    viewsCount?: SortOrder
    favoritesCount?: SortOrder
    contactsCount?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumConditionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Condition | EnumConditionFieldRefInput<$PrismaModel>
    in?: $Enums.Condition[] | ListEnumConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.Condition[] | ListEnumConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumConditionWithAggregatesFilter<$PrismaModel> | $Enums.Condition
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumConditionFilter<$PrismaModel>
    _max?: NestedEnumConditionFilter<$PrismaModel>
  }

  export type EnumListingStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ListingStatus | EnumListingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumListingStatusWithAggregatesFilter<$PrismaModel> | $Enums.ListingStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumListingStatusFilter<$PrismaModel>
    _max?: NestedEnumListingStatusFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type ListingScalarRelationFilter = {
    is?: ListingWhereInput
    isNot?: ListingWhereInput
  }

  export type ListingMediaCountOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    url?: SortOrder
    position?: SortOrder
    width?: SortOrder
    height?: SortOrder
    mimeType?: SortOrder
    createdAt?: SortOrder
  }

  export type ListingMediaAvgOrderByAggregateInput = {
    position?: SortOrder
    width?: SortOrder
    height?: SortOrder
  }

  export type ListingMediaMaxOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    url?: SortOrder
    position?: SortOrder
    width?: SortOrder
    height?: SortOrder
    mimeType?: SortOrder
    createdAt?: SortOrder
  }

  export type ListingMediaMinOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    url?: SortOrder
    position?: SortOrder
    width?: SortOrder
    height?: SortOrder
    mimeType?: SortOrder
    createdAt?: SortOrder
  }

  export type ListingMediaSumOrderByAggregateInput = {
    position?: SortOrder
    width?: SortOrder
    height?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ListingAttributeDefCategoryIdKeyCompoundUniqueInput = {
    categoryId: string
    key: string
  }

  export type ListingAttributeDefCountOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    key?: SortOrder
    dataType?: SortOrder
    enumOptions?: SortOrder
    isRequired?: SortOrder
    sortOrder?: SortOrder
  }

  export type ListingAttributeDefAvgOrderByAggregateInput = {
    sortOrder?: SortOrder
  }

  export type ListingAttributeDefMaxOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    key?: SortOrder
    dataType?: SortOrder
    isRequired?: SortOrder
    sortOrder?: SortOrder
  }

  export type ListingAttributeDefMinOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    key?: SortOrder
    dataType?: SortOrder
    isRequired?: SortOrder
    sortOrder?: SortOrder
  }

  export type ListingAttributeDefSumOrderByAggregateInput = {
    sortOrder?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type ListingAttributeDefScalarRelationFilter = {
    is?: ListingAttributeDefWhereInput
    isNot?: ListingAttributeDefWhereInput
  }

  export type ListingAttributeListingIdAttrDefIdCompoundUniqueInput = {
    listingId: string
    attrDefId: string
  }

  export type ListingAttributeCountOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    attrDefId?: SortOrder
    valueText?: SortOrder
    valueNumber?: SortOrder
    valueBool?: SortOrder
  }

  export type ListingAttributeAvgOrderByAggregateInput = {
    valueNumber?: SortOrder
  }

  export type ListingAttributeMaxOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    attrDefId?: SortOrder
    valueText?: SortOrder
    valueNumber?: SortOrder
    valueBool?: SortOrder
  }

  export type ListingAttributeMinOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    attrDefId?: SortOrder
    valueText?: SortOrder
    valueNumber?: SortOrder
    valueBool?: SortOrder
  }

  export type ListingAttributeSumOrderByAggregateInput = {
    valueNumber?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type FavoriteUserIdListingIdCompoundUniqueInput = {
    userId: string
    listingId: string
  }

  export type FavoriteCountOrderByAggregateInput = {
    userId?: SortOrder
    listingId?: SortOrder
    createdAt?: SortOrder
  }

  export type FavoriteMaxOrderByAggregateInput = {
    userId?: SortOrder
    listingId?: SortOrder
    createdAt?: SortOrder
  }

  export type FavoriteMinOrderByAggregateInput = {
    userId?: SortOrder
    listingId?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumConversationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ConversationStatus | EnumConversationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ConversationStatus[] | ListEnumConversationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConversationStatus[] | ListEnumConversationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumConversationStatusFilter<$PrismaModel> | $Enums.ConversationStatus
  }

  export type ConversationListingIdBuyerIdSellerIdCompoundUniqueInput = {
    listingId: string
    buyerId: string
    sellerId: string
  }

  export type ConversationCountOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    buyerId?: SortOrder
    sellerId?: SortOrder
    lastMessageAt?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type ConversationMaxOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    buyerId?: SortOrder
    sellerId?: SortOrder
    lastMessageAt?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type ConversationMinOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    buyerId?: SortOrder
    sellerId?: SortOrder
    lastMessageAt?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumConversationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ConversationStatus | EnumConversationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ConversationStatus[] | ListEnumConversationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConversationStatus[] | ListEnumConversationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumConversationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ConversationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumConversationStatusFilter<$PrismaModel>
    _max?: NestedEnumConversationStatusFilter<$PrismaModel>
  }

  export type ConversationScalarRelationFilter = {
    is?: ConversationWhereInput
    isNot?: ConversationWhereInput
  }

  export type MessageCountOrderByAggregateInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    body?: SortOrder
    mediaUrl?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrder
  }

  export type MessageMaxOrderByAggregateInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    body?: SortOrder
    mediaUrl?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrder
  }

  export type MessageMinOrderByAggregateInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    body?: SortOrder
    mediaUrl?: SortOrder
    createdAt?: SortOrder
    readAt?: SortOrder
  }

  export type EnumReportTargetFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportTarget | EnumReportTargetFieldRefInput<$PrismaModel>
    in?: $Enums.ReportTarget[] | ListEnumReportTargetFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportTarget[] | ListEnumReportTargetFieldRefInput<$PrismaModel>
    not?: NestedEnumReportTargetFilter<$PrismaModel> | $Enums.ReportTarget
  }

  export type EnumReportStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportStatus | EnumReportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReportStatusFilter<$PrismaModel> | $Enums.ReportStatus
  }

  export type ReportCountOrderByAggregateInput = {
    id?: SortOrder
    reporterId?: SortOrder
    targetType?: SortOrder
    targetId?: SortOrder
    reason?: SortOrder
    detailsText?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    closedAt?: SortOrder
    adminId?: SortOrder
  }

  export type ReportMaxOrderByAggregateInput = {
    id?: SortOrder
    reporterId?: SortOrder
    targetType?: SortOrder
    targetId?: SortOrder
    reason?: SortOrder
    detailsText?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    closedAt?: SortOrder
    adminId?: SortOrder
  }

  export type ReportMinOrderByAggregateInput = {
    id?: SortOrder
    reporterId?: SortOrder
    targetType?: SortOrder
    targetId?: SortOrder
    reason?: SortOrder
    detailsText?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    closedAt?: SortOrder
    adminId?: SortOrder
  }

  export type EnumReportTargetWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportTarget | EnumReportTargetFieldRefInput<$PrismaModel>
    in?: $Enums.ReportTarget[] | ListEnumReportTargetFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportTarget[] | ListEnumReportTargetFieldRefInput<$PrismaModel>
    not?: NestedEnumReportTargetWithAggregatesFilter<$PrismaModel> | $Enums.ReportTarget
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReportTargetFilter<$PrismaModel>
    _max?: NestedEnumReportTargetFilter<$PrismaModel>
  }

  export type EnumReportStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportStatus | EnumReportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReportStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReportStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReportStatusFilter<$PrismaModel>
    _max?: NestedEnumReportStatusFilter<$PrismaModel>
  }

  export type EnumPromotionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PromotionType | EnumPromotionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PromotionType[] | ListEnumPromotionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PromotionType[] | ListEnumPromotionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPromotionTypeFilter<$PrismaModel> | $Enums.PromotionType
  }

  export type PromotionPlanCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    durationDays?: SortOrder
    priceAmount?: SortOrder
    currency?: SortOrder
    isActive?: SortOrder
    sortOrder?: SortOrder
  }

  export type PromotionPlanAvgOrderByAggregateInput = {
    durationDays?: SortOrder
    priceAmount?: SortOrder
    sortOrder?: SortOrder
  }

  export type PromotionPlanMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    durationDays?: SortOrder
    priceAmount?: SortOrder
    currency?: SortOrder
    isActive?: SortOrder
    sortOrder?: SortOrder
  }

  export type PromotionPlanMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    durationDays?: SortOrder
    priceAmount?: SortOrder
    currency?: SortOrder
    isActive?: SortOrder
    sortOrder?: SortOrder
  }

  export type PromotionPlanSumOrderByAggregateInput = {
    durationDays?: SortOrder
    priceAmount?: SortOrder
    sortOrder?: SortOrder
  }

  export type EnumPromotionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PromotionType | EnumPromotionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PromotionType[] | ListEnumPromotionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PromotionType[] | ListEnumPromotionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPromotionTypeWithAggregatesFilter<$PrismaModel> | $Enums.PromotionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPromotionTypeFilter<$PrismaModel>
    _max?: NestedEnumPromotionTypeFilter<$PrismaModel>
  }

  export type PromotionPlanScalarRelationFilter = {
    is?: PromotionPlanWhereInput
    isNot?: PromotionPlanWhereInput
  }

  export type PaymentListRelationFilter = {
    every?: PaymentWhereInput
    some?: PaymentWhereInput
    none?: PaymentWhereInput
  }

  export type PaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PromotionOrderCountOrderByAggregateInput = {
    id?: SortOrder
    buyerId?: SortOrder
    listingId?: SortOrder
    planId?: SortOrder
    status?: SortOrder
    subtotal?: SortOrder
    tax?: SortOrder
    total?: SortOrder
    currency?: SortOrder
    createdAt?: SortOrder
    paidAt?: SortOrder
    externalRef?: SortOrder
    metadata?: SortOrder
  }

  export type PromotionOrderAvgOrderByAggregateInput = {
    subtotal?: SortOrder
    tax?: SortOrder
    total?: SortOrder
  }

  export type PromotionOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    buyerId?: SortOrder
    listingId?: SortOrder
    planId?: SortOrder
    status?: SortOrder
    subtotal?: SortOrder
    tax?: SortOrder
    total?: SortOrder
    currency?: SortOrder
    createdAt?: SortOrder
    paidAt?: SortOrder
    externalRef?: SortOrder
  }

  export type PromotionOrderMinOrderByAggregateInput = {
    id?: SortOrder
    buyerId?: SortOrder
    listingId?: SortOrder
    planId?: SortOrder
    status?: SortOrder
    subtotal?: SortOrder
    tax?: SortOrder
    total?: SortOrder
    currency?: SortOrder
    createdAt?: SortOrder
    paidAt?: SortOrder
    externalRef?: SortOrder
  }

  export type PromotionOrderSumOrderByAggregateInput = {
    subtotal?: SortOrder
    tax?: SortOrder
    total?: SortOrder
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type PromotionOrderScalarRelationFilter = {
    is?: PromotionOrderWhereInput
    isNot?: PromotionOrderWhereInput
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    promotionOrderId?: SortOrder
    provider?: SortOrder
    providerPaymentId?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    receiptUrl?: SortOrder
    rawPayload?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    promotionOrderId?: SortOrder
    provider?: SortOrder
    providerPaymentId?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    receiptUrl?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    promotionOrderId?: SortOrder
    provider?: SortOrder
    providerPaymentId?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    receiptUrl?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type AdSlotCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    placement?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
  }

  export type AdSlotMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    placement?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
  }

  export type AdSlotMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    placement?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
  }

  export type AdSlotScalarRelationFilter = {
    is?: AdSlotWhereInput
    isNot?: AdSlotWhereInput
  }

  export type ListingNullableScalarRelationFilter = {
    is?: ListingWhereInput | null
    isNot?: ListingWhereInput | null
  }

  export type AdImpressionCountOrderByAggregateInput = {
    id?: SortOrder
    adSlotId?: SortOrder
    listingId?: SortOrder
    thirdPartyCampaignId?: SortOrder
    occurredAt?: SortOrder
    metadata?: SortOrder
  }

  export type AdImpressionMaxOrderByAggregateInput = {
    id?: SortOrder
    adSlotId?: SortOrder
    listingId?: SortOrder
    thirdPartyCampaignId?: SortOrder
    occurredAt?: SortOrder
  }

  export type AdImpressionMinOrderByAggregateInput = {
    id?: SortOrder
    adSlotId?: SortOrder
    listingId?: SortOrder
    thirdPartyCampaignId?: SortOrder
    occurredAt?: SortOrder
  }

  export type UserProfileCreateNestedOneWithoutUserInput = {
    create?: XOR<UserProfileCreateWithoutUserInput, UserProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserProfileCreateOrConnectWithoutUserInput
    connect?: UserProfileWhereUniqueInput
  }

  export type ListingCreateNestedManyWithoutSellerInput = {
    create?: XOR<ListingCreateWithoutSellerInput, ListingUncheckedCreateWithoutSellerInput> | ListingCreateWithoutSellerInput[] | ListingUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ListingCreateOrConnectWithoutSellerInput | ListingCreateOrConnectWithoutSellerInput[]
    createMany?: ListingCreateManySellerInputEnvelope
    connect?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
  }

  export type FavoriteCreateNestedManyWithoutUserInput = {
    create?: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput> | FavoriteCreateWithoutUserInput[] | FavoriteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutUserInput | FavoriteCreateOrConnectWithoutUserInput[]
    createMany?: FavoriteCreateManyUserInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type ConversationCreateNestedManyWithoutBuyerInput = {
    create?: XOR<ConversationCreateWithoutBuyerInput, ConversationUncheckedCreateWithoutBuyerInput> | ConversationCreateWithoutBuyerInput[] | ConversationUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutBuyerInput | ConversationCreateOrConnectWithoutBuyerInput[]
    createMany?: ConversationCreateManyBuyerInputEnvelope
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
  }

  export type ConversationCreateNestedManyWithoutSellerInput = {
    create?: XOR<ConversationCreateWithoutSellerInput, ConversationUncheckedCreateWithoutSellerInput> | ConversationCreateWithoutSellerInput[] | ConversationUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutSellerInput | ConversationCreateOrConnectWithoutSellerInput[]
    createMany?: ConversationCreateManySellerInputEnvelope
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type ReportCreateNestedManyWithoutReporterInput = {
    create?: XOR<ReportCreateWithoutReporterInput, ReportUncheckedCreateWithoutReporterInput> | ReportCreateWithoutReporterInput[] | ReportUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutReporterInput | ReportCreateOrConnectWithoutReporterInput[]
    createMany?: ReportCreateManyReporterInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type PromotionOrderCreateNestedManyWithoutBuyerInput = {
    create?: XOR<PromotionOrderCreateWithoutBuyerInput, PromotionOrderUncheckedCreateWithoutBuyerInput> | PromotionOrderCreateWithoutBuyerInput[] | PromotionOrderUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutBuyerInput | PromotionOrderCreateOrConnectWithoutBuyerInput[]
    createMany?: PromotionOrderCreateManyBuyerInputEnvelope
    connect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
  }

  export type UserProfileUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<UserProfileCreateWithoutUserInput, UserProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserProfileCreateOrConnectWithoutUserInput
    connect?: UserProfileWhereUniqueInput
  }

  export type ListingUncheckedCreateNestedManyWithoutSellerInput = {
    create?: XOR<ListingCreateWithoutSellerInput, ListingUncheckedCreateWithoutSellerInput> | ListingCreateWithoutSellerInput[] | ListingUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ListingCreateOrConnectWithoutSellerInput | ListingCreateOrConnectWithoutSellerInput[]
    createMany?: ListingCreateManySellerInputEnvelope
    connect?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
  }

  export type FavoriteUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput> | FavoriteCreateWithoutUserInput[] | FavoriteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutUserInput | FavoriteCreateOrConnectWithoutUserInput[]
    createMany?: FavoriteCreateManyUserInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type ConversationUncheckedCreateNestedManyWithoutBuyerInput = {
    create?: XOR<ConversationCreateWithoutBuyerInput, ConversationUncheckedCreateWithoutBuyerInput> | ConversationCreateWithoutBuyerInput[] | ConversationUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutBuyerInput | ConversationCreateOrConnectWithoutBuyerInput[]
    createMany?: ConversationCreateManyBuyerInputEnvelope
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
  }

  export type ConversationUncheckedCreateNestedManyWithoutSellerInput = {
    create?: XOR<ConversationCreateWithoutSellerInput, ConversationUncheckedCreateWithoutSellerInput> | ConversationCreateWithoutSellerInput[] | ConversationUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutSellerInput | ConversationCreateOrConnectWithoutSellerInput[]
    createMany?: ConversationCreateManySellerInputEnvelope
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type ReportUncheckedCreateNestedManyWithoutReporterInput = {
    create?: XOR<ReportCreateWithoutReporterInput, ReportUncheckedCreateWithoutReporterInput> | ReportCreateWithoutReporterInput[] | ReportUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutReporterInput | ReportCreateOrConnectWithoutReporterInput[]
    createMany?: ReportCreateManyReporterInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type PromotionOrderUncheckedCreateNestedManyWithoutBuyerInput = {
    create?: XOR<PromotionOrderCreateWithoutBuyerInput, PromotionOrderUncheckedCreateWithoutBuyerInput> | PromotionOrderCreateWithoutBuyerInput[] | PromotionOrderUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutBuyerInput | PromotionOrderCreateOrConnectWithoutBuyerInput[]
    createMany?: PromotionOrderCreateManyBuyerInputEnvelope
    connect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type EnumUserStatusFieldUpdateOperationsInput = {
    set?: $Enums.UserStatus
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UserProfileUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserProfileCreateWithoutUserInput, UserProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserProfileCreateOrConnectWithoutUserInput
    upsert?: UserProfileUpsertWithoutUserInput
    disconnect?: UserProfileWhereInput | boolean
    delete?: UserProfileWhereInput | boolean
    connect?: UserProfileWhereUniqueInput
    update?: XOR<XOR<UserProfileUpdateToOneWithWhereWithoutUserInput, UserProfileUpdateWithoutUserInput>, UserProfileUncheckedUpdateWithoutUserInput>
  }

  export type ListingUpdateManyWithoutSellerNestedInput = {
    create?: XOR<ListingCreateWithoutSellerInput, ListingUncheckedCreateWithoutSellerInput> | ListingCreateWithoutSellerInput[] | ListingUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ListingCreateOrConnectWithoutSellerInput | ListingCreateOrConnectWithoutSellerInput[]
    upsert?: ListingUpsertWithWhereUniqueWithoutSellerInput | ListingUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: ListingCreateManySellerInputEnvelope
    set?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    disconnect?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    delete?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    connect?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    update?: ListingUpdateWithWhereUniqueWithoutSellerInput | ListingUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: ListingUpdateManyWithWhereWithoutSellerInput | ListingUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: ListingScalarWhereInput | ListingScalarWhereInput[]
  }

  export type FavoriteUpdateManyWithoutUserNestedInput = {
    create?: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput> | FavoriteCreateWithoutUserInput[] | FavoriteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutUserInput | FavoriteCreateOrConnectWithoutUserInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutUserInput | FavoriteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FavoriteCreateManyUserInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutUserInput | FavoriteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutUserInput | FavoriteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type ConversationUpdateManyWithoutBuyerNestedInput = {
    create?: XOR<ConversationCreateWithoutBuyerInput, ConversationUncheckedCreateWithoutBuyerInput> | ConversationCreateWithoutBuyerInput[] | ConversationUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutBuyerInput | ConversationCreateOrConnectWithoutBuyerInput[]
    upsert?: ConversationUpsertWithWhereUniqueWithoutBuyerInput | ConversationUpsertWithWhereUniqueWithoutBuyerInput[]
    createMany?: ConversationCreateManyBuyerInputEnvelope
    set?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    disconnect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    delete?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    update?: ConversationUpdateWithWhereUniqueWithoutBuyerInput | ConversationUpdateWithWhereUniqueWithoutBuyerInput[]
    updateMany?: ConversationUpdateManyWithWhereWithoutBuyerInput | ConversationUpdateManyWithWhereWithoutBuyerInput[]
    deleteMany?: ConversationScalarWhereInput | ConversationScalarWhereInput[]
  }

  export type ConversationUpdateManyWithoutSellerNestedInput = {
    create?: XOR<ConversationCreateWithoutSellerInput, ConversationUncheckedCreateWithoutSellerInput> | ConversationCreateWithoutSellerInput[] | ConversationUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutSellerInput | ConversationCreateOrConnectWithoutSellerInput[]
    upsert?: ConversationUpsertWithWhereUniqueWithoutSellerInput | ConversationUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: ConversationCreateManySellerInputEnvelope
    set?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    disconnect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    delete?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    update?: ConversationUpdateWithWhereUniqueWithoutSellerInput | ConversationUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: ConversationUpdateManyWithWhereWithoutSellerInput | ConversationUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: ConversationScalarWhereInput | ConversationScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type ReportUpdateManyWithoutReporterNestedInput = {
    create?: XOR<ReportCreateWithoutReporterInput, ReportUncheckedCreateWithoutReporterInput> | ReportCreateWithoutReporterInput[] | ReportUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutReporterInput | ReportCreateOrConnectWithoutReporterInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutReporterInput | ReportUpsertWithWhereUniqueWithoutReporterInput[]
    createMany?: ReportCreateManyReporterInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutReporterInput | ReportUpdateWithWhereUniqueWithoutReporterInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutReporterInput | ReportUpdateManyWithWhereWithoutReporterInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type PromotionOrderUpdateManyWithoutBuyerNestedInput = {
    create?: XOR<PromotionOrderCreateWithoutBuyerInput, PromotionOrderUncheckedCreateWithoutBuyerInput> | PromotionOrderCreateWithoutBuyerInput[] | PromotionOrderUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutBuyerInput | PromotionOrderCreateOrConnectWithoutBuyerInput[]
    upsert?: PromotionOrderUpsertWithWhereUniqueWithoutBuyerInput | PromotionOrderUpsertWithWhereUniqueWithoutBuyerInput[]
    createMany?: PromotionOrderCreateManyBuyerInputEnvelope
    set?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    disconnect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    delete?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    connect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    update?: PromotionOrderUpdateWithWhereUniqueWithoutBuyerInput | PromotionOrderUpdateWithWhereUniqueWithoutBuyerInput[]
    updateMany?: PromotionOrderUpdateManyWithWhereWithoutBuyerInput | PromotionOrderUpdateManyWithWhereWithoutBuyerInput[]
    deleteMany?: PromotionOrderScalarWhereInput | PromotionOrderScalarWhereInput[]
  }

  export type UserProfileUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserProfileCreateWithoutUserInput, UserProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserProfileCreateOrConnectWithoutUserInput
    upsert?: UserProfileUpsertWithoutUserInput
    disconnect?: UserProfileWhereInput | boolean
    delete?: UserProfileWhereInput | boolean
    connect?: UserProfileWhereUniqueInput
    update?: XOR<XOR<UserProfileUpdateToOneWithWhereWithoutUserInput, UserProfileUpdateWithoutUserInput>, UserProfileUncheckedUpdateWithoutUserInput>
  }

  export type ListingUncheckedUpdateManyWithoutSellerNestedInput = {
    create?: XOR<ListingCreateWithoutSellerInput, ListingUncheckedCreateWithoutSellerInput> | ListingCreateWithoutSellerInput[] | ListingUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ListingCreateOrConnectWithoutSellerInput | ListingCreateOrConnectWithoutSellerInput[]
    upsert?: ListingUpsertWithWhereUniqueWithoutSellerInput | ListingUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: ListingCreateManySellerInputEnvelope
    set?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    disconnect?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    delete?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    connect?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    update?: ListingUpdateWithWhereUniqueWithoutSellerInput | ListingUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: ListingUpdateManyWithWhereWithoutSellerInput | ListingUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: ListingScalarWhereInput | ListingScalarWhereInput[]
  }

  export type FavoriteUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput> | FavoriteCreateWithoutUserInput[] | FavoriteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutUserInput | FavoriteCreateOrConnectWithoutUserInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutUserInput | FavoriteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FavoriteCreateManyUserInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutUserInput | FavoriteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutUserInput | FavoriteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type ConversationUncheckedUpdateManyWithoutBuyerNestedInput = {
    create?: XOR<ConversationCreateWithoutBuyerInput, ConversationUncheckedCreateWithoutBuyerInput> | ConversationCreateWithoutBuyerInput[] | ConversationUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutBuyerInput | ConversationCreateOrConnectWithoutBuyerInput[]
    upsert?: ConversationUpsertWithWhereUniqueWithoutBuyerInput | ConversationUpsertWithWhereUniqueWithoutBuyerInput[]
    createMany?: ConversationCreateManyBuyerInputEnvelope
    set?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    disconnect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    delete?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    update?: ConversationUpdateWithWhereUniqueWithoutBuyerInput | ConversationUpdateWithWhereUniqueWithoutBuyerInput[]
    updateMany?: ConversationUpdateManyWithWhereWithoutBuyerInput | ConversationUpdateManyWithWhereWithoutBuyerInput[]
    deleteMany?: ConversationScalarWhereInput | ConversationScalarWhereInput[]
  }

  export type ConversationUncheckedUpdateManyWithoutSellerNestedInput = {
    create?: XOR<ConversationCreateWithoutSellerInput, ConversationUncheckedCreateWithoutSellerInput> | ConversationCreateWithoutSellerInput[] | ConversationUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutSellerInput | ConversationCreateOrConnectWithoutSellerInput[]
    upsert?: ConversationUpsertWithWhereUniqueWithoutSellerInput | ConversationUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: ConversationCreateManySellerInputEnvelope
    set?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    disconnect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    delete?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    update?: ConversationUpdateWithWhereUniqueWithoutSellerInput | ConversationUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: ConversationUpdateManyWithWhereWithoutSellerInput | ConversationUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: ConversationScalarWhereInput | ConversationScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type ReportUncheckedUpdateManyWithoutReporterNestedInput = {
    create?: XOR<ReportCreateWithoutReporterInput, ReportUncheckedCreateWithoutReporterInput> | ReportCreateWithoutReporterInput[] | ReportUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutReporterInput | ReportCreateOrConnectWithoutReporterInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutReporterInput | ReportUpsertWithWhereUniqueWithoutReporterInput[]
    createMany?: ReportCreateManyReporterInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutReporterInput | ReportUpdateWithWhereUniqueWithoutReporterInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutReporterInput | ReportUpdateManyWithWhereWithoutReporterInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type PromotionOrderUncheckedUpdateManyWithoutBuyerNestedInput = {
    create?: XOR<PromotionOrderCreateWithoutBuyerInput, PromotionOrderUncheckedCreateWithoutBuyerInput> | PromotionOrderCreateWithoutBuyerInput[] | PromotionOrderUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutBuyerInput | PromotionOrderCreateOrConnectWithoutBuyerInput[]
    upsert?: PromotionOrderUpsertWithWhereUniqueWithoutBuyerInput | PromotionOrderUpsertWithWhereUniqueWithoutBuyerInput[]
    createMany?: PromotionOrderCreateManyBuyerInputEnvelope
    set?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    disconnect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    delete?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    connect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    update?: PromotionOrderUpdateWithWhereUniqueWithoutBuyerInput | PromotionOrderUpdateWithWhereUniqueWithoutBuyerInput[]
    updateMany?: PromotionOrderUpdateManyWithWhereWithoutBuyerInput | PromotionOrderUpdateManyWithWhereWithoutBuyerInput[]
    deleteMany?: PromotionOrderScalarWhereInput | PromotionOrderScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutProfileInput = {
    create?: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfileInput
    connect?: UserWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type UserUpdateOneRequiredWithoutProfileNestedInput = {
    create?: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfileInput
    upsert?: UserUpsertWithoutProfileInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProfileInput, UserUpdateWithoutProfileInput>, UserUncheckedUpdateWithoutProfileInput>
  }

  export type LocationCreateNestedOneWithoutChildrenInput = {
    create?: XOR<LocationCreateWithoutChildrenInput, LocationUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: LocationCreateOrConnectWithoutChildrenInput
    connect?: LocationWhereUniqueInput
  }

  export type LocationCreateNestedManyWithoutParentInput = {
    create?: XOR<LocationCreateWithoutParentInput, LocationUncheckedCreateWithoutParentInput> | LocationCreateWithoutParentInput[] | LocationUncheckedCreateWithoutParentInput[]
    connectOrCreate?: LocationCreateOrConnectWithoutParentInput | LocationCreateOrConnectWithoutParentInput[]
    createMany?: LocationCreateManyParentInputEnvelope
    connect?: LocationWhereUniqueInput | LocationWhereUniqueInput[]
  }

  export type LocationUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<LocationCreateWithoutParentInput, LocationUncheckedCreateWithoutParentInput> | LocationCreateWithoutParentInput[] | LocationUncheckedCreateWithoutParentInput[]
    connectOrCreate?: LocationCreateOrConnectWithoutParentInput | LocationCreateOrConnectWithoutParentInput[]
    createMany?: LocationCreateManyParentInputEnvelope
    connect?: LocationWhereUniqueInput | LocationWhereUniqueInput[]
  }

  export type LocationUpdateOneWithoutChildrenNestedInput = {
    create?: XOR<LocationCreateWithoutChildrenInput, LocationUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: LocationCreateOrConnectWithoutChildrenInput
    upsert?: LocationUpsertWithoutChildrenInput
    disconnect?: LocationWhereInput | boolean
    delete?: LocationWhereInput | boolean
    connect?: LocationWhereUniqueInput
    update?: XOR<XOR<LocationUpdateToOneWithWhereWithoutChildrenInput, LocationUpdateWithoutChildrenInput>, LocationUncheckedUpdateWithoutChildrenInput>
  }

  export type LocationUpdateManyWithoutParentNestedInput = {
    create?: XOR<LocationCreateWithoutParentInput, LocationUncheckedCreateWithoutParentInput> | LocationCreateWithoutParentInput[] | LocationUncheckedCreateWithoutParentInput[]
    connectOrCreate?: LocationCreateOrConnectWithoutParentInput | LocationCreateOrConnectWithoutParentInput[]
    upsert?: LocationUpsertWithWhereUniqueWithoutParentInput | LocationUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: LocationCreateManyParentInputEnvelope
    set?: LocationWhereUniqueInput | LocationWhereUniqueInput[]
    disconnect?: LocationWhereUniqueInput | LocationWhereUniqueInput[]
    delete?: LocationWhereUniqueInput | LocationWhereUniqueInput[]
    connect?: LocationWhereUniqueInput | LocationWhereUniqueInput[]
    update?: LocationUpdateWithWhereUniqueWithoutParentInput | LocationUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: LocationUpdateManyWithWhereWithoutParentInput | LocationUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: LocationScalarWhereInput | LocationScalarWhereInput[]
  }

  export type LocationUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<LocationCreateWithoutParentInput, LocationUncheckedCreateWithoutParentInput> | LocationCreateWithoutParentInput[] | LocationUncheckedCreateWithoutParentInput[]
    connectOrCreate?: LocationCreateOrConnectWithoutParentInput | LocationCreateOrConnectWithoutParentInput[]
    upsert?: LocationUpsertWithWhereUniqueWithoutParentInput | LocationUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: LocationCreateManyParentInputEnvelope
    set?: LocationWhereUniqueInput | LocationWhereUniqueInput[]
    disconnect?: LocationWhereUniqueInput | LocationWhereUniqueInput[]
    delete?: LocationWhereUniqueInput | LocationWhereUniqueInput[]
    connect?: LocationWhereUniqueInput | LocationWhereUniqueInput[]
    update?: LocationUpdateWithWhereUniqueWithoutParentInput | LocationUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: LocationUpdateManyWithWhereWithoutParentInput | LocationUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: LocationScalarWhereInput | LocationScalarWhereInput[]
  }

  export type CategoryCreateNestedOneWithoutChildrenInput = {
    create?: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutChildrenInput
    connect?: CategoryWhereUniqueInput
  }

  export type CategoryCreateNestedManyWithoutParentInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ListingCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ListingCreateWithoutCategoryInput, ListingUncheckedCreateWithoutCategoryInput> | ListingCreateWithoutCategoryInput[] | ListingUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ListingCreateOrConnectWithoutCategoryInput | ListingCreateOrConnectWithoutCategoryInput[]
    createMany?: ListingCreateManyCategoryInputEnvelope
    connect?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
  }

  export type ListingAttributeDefCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ListingAttributeDefCreateWithoutCategoryInput, ListingAttributeDefUncheckedCreateWithoutCategoryInput> | ListingAttributeDefCreateWithoutCategoryInput[] | ListingAttributeDefUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ListingAttributeDefCreateOrConnectWithoutCategoryInput | ListingAttributeDefCreateOrConnectWithoutCategoryInput[]
    createMany?: ListingAttributeDefCreateManyCategoryInputEnvelope
    connect?: ListingAttributeDefWhereUniqueInput | ListingAttributeDefWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ListingUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ListingCreateWithoutCategoryInput, ListingUncheckedCreateWithoutCategoryInput> | ListingCreateWithoutCategoryInput[] | ListingUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ListingCreateOrConnectWithoutCategoryInput | ListingCreateOrConnectWithoutCategoryInput[]
    createMany?: ListingCreateManyCategoryInputEnvelope
    connect?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
  }

  export type ListingAttributeDefUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ListingAttributeDefCreateWithoutCategoryInput, ListingAttributeDefUncheckedCreateWithoutCategoryInput> | ListingAttributeDefCreateWithoutCategoryInput[] | ListingAttributeDefUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ListingAttributeDefCreateOrConnectWithoutCategoryInput | ListingAttributeDefCreateOrConnectWithoutCategoryInput[]
    createMany?: ListingAttributeDefCreateManyCategoryInputEnvelope
    connect?: ListingAttributeDefWhereUniqueInput | ListingAttributeDefWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CategoryUpdateOneWithoutChildrenNestedInput = {
    create?: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutChildrenInput
    upsert?: CategoryUpsertWithoutChildrenInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutChildrenInput, CategoryUpdateWithoutChildrenInput>, CategoryUncheckedUpdateWithoutChildrenInput>
  }

  export type CategoryUpdateManyWithoutParentNestedInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentInput | CategoryUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentInput | CategoryUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentInput | CategoryUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ListingUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ListingCreateWithoutCategoryInput, ListingUncheckedCreateWithoutCategoryInput> | ListingCreateWithoutCategoryInput[] | ListingUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ListingCreateOrConnectWithoutCategoryInput | ListingCreateOrConnectWithoutCategoryInput[]
    upsert?: ListingUpsertWithWhereUniqueWithoutCategoryInput | ListingUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ListingCreateManyCategoryInputEnvelope
    set?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    disconnect?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    delete?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    connect?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    update?: ListingUpdateWithWhereUniqueWithoutCategoryInput | ListingUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ListingUpdateManyWithWhereWithoutCategoryInput | ListingUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ListingScalarWhereInput | ListingScalarWhereInput[]
  }

  export type ListingAttributeDefUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ListingAttributeDefCreateWithoutCategoryInput, ListingAttributeDefUncheckedCreateWithoutCategoryInput> | ListingAttributeDefCreateWithoutCategoryInput[] | ListingAttributeDefUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ListingAttributeDefCreateOrConnectWithoutCategoryInput | ListingAttributeDefCreateOrConnectWithoutCategoryInput[]
    upsert?: ListingAttributeDefUpsertWithWhereUniqueWithoutCategoryInput | ListingAttributeDefUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ListingAttributeDefCreateManyCategoryInputEnvelope
    set?: ListingAttributeDefWhereUniqueInput | ListingAttributeDefWhereUniqueInput[]
    disconnect?: ListingAttributeDefWhereUniqueInput | ListingAttributeDefWhereUniqueInput[]
    delete?: ListingAttributeDefWhereUniqueInput | ListingAttributeDefWhereUniqueInput[]
    connect?: ListingAttributeDefWhereUniqueInput | ListingAttributeDefWhereUniqueInput[]
    update?: ListingAttributeDefUpdateWithWhereUniqueWithoutCategoryInput | ListingAttributeDefUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ListingAttributeDefUpdateManyWithWhereWithoutCategoryInput | ListingAttributeDefUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ListingAttributeDefScalarWhereInput | ListingAttributeDefScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentInput | CategoryUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentInput | CategoryUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentInput | CategoryUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ListingUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ListingCreateWithoutCategoryInput, ListingUncheckedCreateWithoutCategoryInput> | ListingCreateWithoutCategoryInput[] | ListingUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ListingCreateOrConnectWithoutCategoryInput | ListingCreateOrConnectWithoutCategoryInput[]
    upsert?: ListingUpsertWithWhereUniqueWithoutCategoryInput | ListingUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ListingCreateManyCategoryInputEnvelope
    set?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    disconnect?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    delete?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    connect?: ListingWhereUniqueInput | ListingWhereUniqueInput[]
    update?: ListingUpdateWithWhereUniqueWithoutCategoryInput | ListingUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ListingUpdateManyWithWhereWithoutCategoryInput | ListingUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ListingScalarWhereInput | ListingScalarWhereInput[]
  }

  export type ListingAttributeDefUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ListingAttributeDefCreateWithoutCategoryInput, ListingAttributeDefUncheckedCreateWithoutCategoryInput> | ListingAttributeDefCreateWithoutCategoryInput[] | ListingAttributeDefUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ListingAttributeDefCreateOrConnectWithoutCategoryInput | ListingAttributeDefCreateOrConnectWithoutCategoryInput[]
    upsert?: ListingAttributeDefUpsertWithWhereUniqueWithoutCategoryInput | ListingAttributeDefUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ListingAttributeDefCreateManyCategoryInputEnvelope
    set?: ListingAttributeDefWhereUniqueInput | ListingAttributeDefWhereUniqueInput[]
    disconnect?: ListingAttributeDefWhereUniqueInput | ListingAttributeDefWhereUniqueInput[]
    delete?: ListingAttributeDefWhereUniqueInput | ListingAttributeDefWhereUniqueInput[]
    connect?: ListingAttributeDefWhereUniqueInput | ListingAttributeDefWhereUniqueInput[]
    update?: ListingAttributeDefUpdateWithWhereUniqueWithoutCategoryInput | ListingAttributeDefUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ListingAttributeDefUpdateManyWithWhereWithoutCategoryInput | ListingAttributeDefUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ListingAttributeDefScalarWhereInput | ListingAttributeDefScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutListingsInput = {
    create?: XOR<UserCreateWithoutListingsInput, UserUncheckedCreateWithoutListingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutListingsInput
    connect?: UserWhereUniqueInput
  }

  export type CategoryCreateNestedOneWithoutListingsInput = {
    create?: XOR<CategoryCreateWithoutListingsInput, CategoryUncheckedCreateWithoutListingsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutListingsInput
    connect?: CategoryWhereUniqueInput
  }

  export type ListingMediaCreateNestedManyWithoutListingInput = {
    create?: XOR<ListingMediaCreateWithoutListingInput, ListingMediaUncheckedCreateWithoutListingInput> | ListingMediaCreateWithoutListingInput[] | ListingMediaUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingMediaCreateOrConnectWithoutListingInput | ListingMediaCreateOrConnectWithoutListingInput[]
    createMany?: ListingMediaCreateManyListingInputEnvelope
    connect?: ListingMediaWhereUniqueInput | ListingMediaWhereUniqueInput[]
  }

  export type ListingAttributeCreateNestedManyWithoutListingInput = {
    create?: XOR<ListingAttributeCreateWithoutListingInput, ListingAttributeUncheckedCreateWithoutListingInput> | ListingAttributeCreateWithoutListingInput[] | ListingAttributeUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingAttributeCreateOrConnectWithoutListingInput | ListingAttributeCreateOrConnectWithoutListingInput[]
    createMany?: ListingAttributeCreateManyListingInputEnvelope
    connect?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
  }

  export type FavoriteCreateNestedManyWithoutListingInput = {
    create?: XOR<FavoriteCreateWithoutListingInput, FavoriteUncheckedCreateWithoutListingInput> | FavoriteCreateWithoutListingInput[] | FavoriteUncheckedCreateWithoutListingInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutListingInput | FavoriteCreateOrConnectWithoutListingInput[]
    createMany?: FavoriteCreateManyListingInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type ConversationCreateNestedManyWithoutListingInput = {
    create?: XOR<ConversationCreateWithoutListingInput, ConversationUncheckedCreateWithoutListingInput> | ConversationCreateWithoutListingInput[] | ConversationUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutListingInput | ConversationCreateOrConnectWithoutListingInput[]
    createMany?: ConversationCreateManyListingInputEnvelope
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
  }

  export type PromotionOrderCreateNestedManyWithoutListingInput = {
    create?: XOR<PromotionOrderCreateWithoutListingInput, PromotionOrderUncheckedCreateWithoutListingInput> | PromotionOrderCreateWithoutListingInput[] | PromotionOrderUncheckedCreateWithoutListingInput[]
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutListingInput | PromotionOrderCreateOrConnectWithoutListingInput[]
    createMany?: PromotionOrderCreateManyListingInputEnvelope
    connect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
  }

  export type AdImpressionCreateNestedManyWithoutListingInput = {
    create?: XOR<AdImpressionCreateWithoutListingInput, AdImpressionUncheckedCreateWithoutListingInput> | AdImpressionCreateWithoutListingInput[] | AdImpressionUncheckedCreateWithoutListingInput[]
    connectOrCreate?: AdImpressionCreateOrConnectWithoutListingInput | AdImpressionCreateOrConnectWithoutListingInput[]
    createMany?: AdImpressionCreateManyListingInputEnvelope
    connect?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
  }

  export type ListingMediaUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<ListingMediaCreateWithoutListingInput, ListingMediaUncheckedCreateWithoutListingInput> | ListingMediaCreateWithoutListingInput[] | ListingMediaUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingMediaCreateOrConnectWithoutListingInput | ListingMediaCreateOrConnectWithoutListingInput[]
    createMany?: ListingMediaCreateManyListingInputEnvelope
    connect?: ListingMediaWhereUniqueInput | ListingMediaWhereUniqueInput[]
  }

  export type ListingAttributeUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<ListingAttributeCreateWithoutListingInput, ListingAttributeUncheckedCreateWithoutListingInput> | ListingAttributeCreateWithoutListingInput[] | ListingAttributeUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingAttributeCreateOrConnectWithoutListingInput | ListingAttributeCreateOrConnectWithoutListingInput[]
    createMany?: ListingAttributeCreateManyListingInputEnvelope
    connect?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
  }

  export type FavoriteUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<FavoriteCreateWithoutListingInput, FavoriteUncheckedCreateWithoutListingInput> | FavoriteCreateWithoutListingInput[] | FavoriteUncheckedCreateWithoutListingInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutListingInput | FavoriteCreateOrConnectWithoutListingInput[]
    createMany?: FavoriteCreateManyListingInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type ConversationUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<ConversationCreateWithoutListingInput, ConversationUncheckedCreateWithoutListingInput> | ConversationCreateWithoutListingInput[] | ConversationUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutListingInput | ConversationCreateOrConnectWithoutListingInput[]
    createMany?: ConversationCreateManyListingInputEnvelope
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
  }

  export type PromotionOrderUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<PromotionOrderCreateWithoutListingInput, PromotionOrderUncheckedCreateWithoutListingInput> | PromotionOrderCreateWithoutListingInput[] | PromotionOrderUncheckedCreateWithoutListingInput[]
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutListingInput | PromotionOrderCreateOrConnectWithoutListingInput[]
    createMany?: PromotionOrderCreateManyListingInputEnvelope
    connect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
  }

  export type AdImpressionUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<AdImpressionCreateWithoutListingInput, AdImpressionUncheckedCreateWithoutListingInput> | AdImpressionCreateWithoutListingInput[] | AdImpressionUncheckedCreateWithoutListingInput[]
    connectOrCreate?: AdImpressionCreateOrConnectWithoutListingInput | AdImpressionCreateOrConnectWithoutListingInput[]
    createMany?: AdImpressionCreateManyListingInputEnvelope
    connect?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumConditionFieldUpdateOperationsInput = {
    set?: $Enums.Condition
  }

  export type EnumListingStatusFieldUpdateOperationsInput = {
    set?: $Enums.ListingStatus
  }

  export type UserUpdateOneRequiredWithoutListingsNestedInput = {
    create?: XOR<UserCreateWithoutListingsInput, UserUncheckedCreateWithoutListingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutListingsInput
    upsert?: UserUpsertWithoutListingsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutListingsInput, UserUpdateWithoutListingsInput>, UserUncheckedUpdateWithoutListingsInput>
  }

  export type CategoryUpdateOneRequiredWithoutListingsNestedInput = {
    create?: XOR<CategoryCreateWithoutListingsInput, CategoryUncheckedCreateWithoutListingsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutListingsInput
    upsert?: CategoryUpsertWithoutListingsInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutListingsInput, CategoryUpdateWithoutListingsInput>, CategoryUncheckedUpdateWithoutListingsInput>
  }

  export type ListingMediaUpdateManyWithoutListingNestedInput = {
    create?: XOR<ListingMediaCreateWithoutListingInput, ListingMediaUncheckedCreateWithoutListingInput> | ListingMediaCreateWithoutListingInput[] | ListingMediaUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingMediaCreateOrConnectWithoutListingInput | ListingMediaCreateOrConnectWithoutListingInput[]
    upsert?: ListingMediaUpsertWithWhereUniqueWithoutListingInput | ListingMediaUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ListingMediaCreateManyListingInputEnvelope
    set?: ListingMediaWhereUniqueInput | ListingMediaWhereUniqueInput[]
    disconnect?: ListingMediaWhereUniqueInput | ListingMediaWhereUniqueInput[]
    delete?: ListingMediaWhereUniqueInput | ListingMediaWhereUniqueInput[]
    connect?: ListingMediaWhereUniqueInput | ListingMediaWhereUniqueInput[]
    update?: ListingMediaUpdateWithWhereUniqueWithoutListingInput | ListingMediaUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ListingMediaUpdateManyWithWhereWithoutListingInput | ListingMediaUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ListingMediaScalarWhereInput | ListingMediaScalarWhereInput[]
  }

  export type ListingAttributeUpdateManyWithoutListingNestedInput = {
    create?: XOR<ListingAttributeCreateWithoutListingInput, ListingAttributeUncheckedCreateWithoutListingInput> | ListingAttributeCreateWithoutListingInput[] | ListingAttributeUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingAttributeCreateOrConnectWithoutListingInput | ListingAttributeCreateOrConnectWithoutListingInput[]
    upsert?: ListingAttributeUpsertWithWhereUniqueWithoutListingInput | ListingAttributeUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ListingAttributeCreateManyListingInputEnvelope
    set?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    disconnect?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    delete?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    connect?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    update?: ListingAttributeUpdateWithWhereUniqueWithoutListingInput | ListingAttributeUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ListingAttributeUpdateManyWithWhereWithoutListingInput | ListingAttributeUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ListingAttributeScalarWhereInput | ListingAttributeScalarWhereInput[]
  }

  export type FavoriteUpdateManyWithoutListingNestedInput = {
    create?: XOR<FavoriteCreateWithoutListingInput, FavoriteUncheckedCreateWithoutListingInput> | FavoriteCreateWithoutListingInput[] | FavoriteUncheckedCreateWithoutListingInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutListingInput | FavoriteCreateOrConnectWithoutListingInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutListingInput | FavoriteUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: FavoriteCreateManyListingInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutListingInput | FavoriteUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutListingInput | FavoriteUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type ConversationUpdateManyWithoutListingNestedInput = {
    create?: XOR<ConversationCreateWithoutListingInput, ConversationUncheckedCreateWithoutListingInput> | ConversationCreateWithoutListingInput[] | ConversationUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutListingInput | ConversationCreateOrConnectWithoutListingInput[]
    upsert?: ConversationUpsertWithWhereUniqueWithoutListingInput | ConversationUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ConversationCreateManyListingInputEnvelope
    set?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    disconnect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    delete?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    update?: ConversationUpdateWithWhereUniqueWithoutListingInput | ConversationUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ConversationUpdateManyWithWhereWithoutListingInput | ConversationUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ConversationScalarWhereInput | ConversationScalarWhereInput[]
  }

  export type PromotionOrderUpdateManyWithoutListingNestedInput = {
    create?: XOR<PromotionOrderCreateWithoutListingInput, PromotionOrderUncheckedCreateWithoutListingInput> | PromotionOrderCreateWithoutListingInput[] | PromotionOrderUncheckedCreateWithoutListingInput[]
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutListingInput | PromotionOrderCreateOrConnectWithoutListingInput[]
    upsert?: PromotionOrderUpsertWithWhereUniqueWithoutListingInput | PromotionOrderUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: PromotionOrderCreateManyListingInputEnvelope
    set?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    disconnect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    delete?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    connect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    update?: PromotionOrderUpdateWithWhereUniqueWithoutListingInput | PromotionOrderUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: PromotionOrderUpdateManyWithWhereWithoutListingInput | PromotionOrderUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: PromotionOrderScalarWhereInput | PromotionOrderScalarWhereInput[]
  }

  export type AdImpressionUpdateManyWithoutListingNestedInput = {
    create?: XOR<AdImpressionCreateWithoutListingInput, AdImpressionUncheckedCreateWithoutListingInput> | AdImpressionCreateWithoutListingInput[] | AdImpressionUncheckedCreateWithoutListingInput[]
    connectOrCreate?: AdImpressionCreateOrConnectWithoutListingInput | AdImpressionCreateOrConnectWithoutListingInput[]
    upsert?: AdImpressionUpsertWithWhereUniqueWithoutListingInput | AdImpressionUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: AdImpressionCreateManyListingInputEnvelope
    set?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    disconnect?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    delete?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    connect?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    update?: AdImpressionUpdateWithWhereUniqueWithoutListingInput | AdImpressionUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: AdImpressionUpdateManyWithWhereWithoutListingInput | AdImpressionUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: AdImpressionScalarWhereInput | AdImpressionScalarWhereInput[]
  }

  export type ListingMediaUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<ListingMediaCreateWithoutListingInput, ListingMediaUncheckedCreateWithoutListingInput> | ListingMediaCreateWithoutListingInput[] | ListingMediaUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingMediaCreateOrConnectWithoutListingInput | ListingMediaCreateOrConnectWithoutListingInput[]
    upsert?: ListingMediaUpsertWithWhereUniqueWithoutListingInput | ListingMediaUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ListingMediaCreateManyListingInputEnvelope
    set?: ListingMediaWhereUniqueInput | ListingMediaWhereUniqueInput[]
    disconnect?: ListingMediaWhereUniqueInput | ListingMediaWhereUniqueInput[]
    delete?: ListingMediaWhereUniqueInput | ListingMediaWhereUniqueInput[]
    connect?: ListingMediaWhereUniqueInput | ListingMediaWhereUniqueInput[]
    update?: ListingMediaUpdateWithWhereUniqueWithoutListingInput | ListingMediaUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ListingMediaUpdateManyWithWhereWithoutListingInput | ListingMediaUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ListingMediaScalarWhereInput | ListingMediaScalarWhereInput[]
  }

  export type ListingAttributeUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<ListingAttributeCreateWithoutListingInput, ListingAttributeUncheckedCreateWithoutListingInput> | ListingAttributeCreateWithoutListingInput[] | ListingAttributeUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingAttributeCreateOrConnectWithoutListingInput | ListingAttributeCreateOrConnectWithoutListingInput[]
    upsert?: ListingAttributeUpsertWithWhereUniqueWithoutListingInput | ListingAttributeUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ListingAttributeCreateManyListingInputEnvelope
    set?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    disconnect?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    delete?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    connect?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    update?: ListingAttributeUpdateWithWhereUniqueWithoutListingInput | ListingAttributeUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ListingAttributeUpdateManyWithWhereWithoutListingInput | ListingAttributeUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ListingAttributeScalarWhereInput | ListingAttributeScalarWhereInput[]
  }

  export type FavoriteUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<FavoriteCreateWithoutListingInput, FavoriteUncheckedCreateWithoutListingInput> | FavoriteCreateWithoutListingInput[] | FavoriteUncheckedCreateWithoutListingInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutListingInput | FavoriteCreateOrConnectWithoutListingInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutListingInput | FavoriteUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: FavoriteCreateManyListingInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutListingInput | FavoriteUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutListingInput | FavoriteUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type ConversationUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<ConversationCreateWithoutListingInput, ConversationUncheckedCreateWithoutListingInput> | ConversationCreateWithoutListingInput[] | ConversationUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutListingInput | ConversationCreateOrConnectWithoutListingInput[]
    upsert?: ConversationUpsertWithWhereUniqueWithoutListingInput | ConversationUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ConversationCreateManyListingInputEnvelope
    set?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    disconnect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    delete?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    update?: ConversationUpdateWithWhereUniqueWithoutListingInput | ConversationUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ConversationUpdateManyWithWhereWithoutListingInput | ConversationUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ConversationScalarWhereInput | ConversationScalarWhereInput[]
  }

  export type PromotionOrderUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<PromotionOrderCreateWithoutListingInput, PromotionOrderUncheckedCreateWithoutListingInput> | PromotionOrderCreateWithoutListingInput[] | PromotionOrderUncheckedCreateWithoutListingInput[]
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutListingInput | PromotionOrderCreateOrConnectWithoutListingInput[]
    upsert?: PromotionOrderUpsertWithWhereUniqueWithoutListingInput | PromotionOrderUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: PromotionOrderCreateManyListingInputEnvelope
    set?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    disconnect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    delete?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    connect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    update?: PromotionOrderUpdateWithWhereUniqueWithoutListingInput | PromotionOrderUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: PromotionOrderUpdateManyWithWhereWithoutListingInput | PromotionOrderUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: PromotionOrderScalarWhereInput | PromotionOrderScalarWhereInput[]
  }

  export type AdImpressionUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<AdImpressionCreateWithoutListingInput, AdImpressionUncheckedCreateWithoutListingInput> | AdImpressionCreateWithoutListingInput[] | AdImpressionUncheckedCreateWithoutListingInput[]
    connectOrCreate?: AdImpressionCreateOrConnectWithoutListingInput | AdImpressionCreateOrConnectWithoutListingInput[]
    upsert?: AdImpressionUpsertWithWhereUniqueWithoutListingInput | AdImpressionUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: AdImpressionCreateManyListingInputEnvelope
    set?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    disconnect?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    delete?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    connect?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    update?: AdImpressionUpdateWithWhereUniqueWithoutListingInput | AdImpressionUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: AdImpressionUpdateManyWithWhereWithoutListingInput | AdImpressionUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: AdImpressionScalarWhereInput | AdImpressionScalarWhereInput[]
  }

  export type ListingCreateNestedOneWithoutMediaInput = {
    create?: XOR<ListingCreateWithoutMediaInput, ListingUncheckedCreateWithoutMediaInput>
    connectOrCreate?: ListingCreateOrConnectWithoutMediaInput
    connect?: ListingWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ListingUpdateOneRequiredWithoutMediaNestedInput = {
    create?: XOR<ListingCreateWithoutMediaInput, ListingUncheckedCreateWithoutMediaInput>
    connectOrCreate?: ListingCreateOrConnectWithoutMediaInput
    upsert?: ListingUpsertWithoutMediaInput
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutMediaInput, ListingUpdateWithoutMediaInput>, ListingUncheckedUpdateWithoutMediaInput>
  }

  export type CategoryCreateNestedOneWithoutAttributeDefsInput = {
    create?: XOR<CategoryCreateWithoutAttributeDefsInput, CategoryUncheckedCreateWithoutAttributeDefsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutAttributeDefsInput
    connect?: CategoryWhereUniqueInput
  }

  export type ListingAttributeCreateNestedManyWithoutAttrDefInput = {
    create?: XOR<ListingAttributeCreateWithoutAttrDefInput, ListingAttributeUncheckedCreateWithoutAttrDefInput> | ListingAttributeCreateWithoutAttrDefInput[] | ListingAttributeUncheckedCreateWithoutAttrDefInput[]
    connectOrCreate?: ListingAttributeCreateOrConnectWithoutAttrDefInput | ListingAttributeCreateOrConnectWithoutAttrDefInput[]
    createMany?: ListingAttributeCreateManyAttrDefInputEnvelope
    connect?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
  }

  export type ListingAttributeUncheckedCreateNestedManyWithoutAttrDefInput = {
    create?: XOR<ListingAttributeCreateWithoutAttrDefInput, ListingAttributeUncheckedCreateWithoutAttrDefInput> | ListingAttributeCreateWithoutAttrDefInput[] | ListingAttributeUncheckedCreateWithoutAttrDefInput[]
    connectOrCreate?: ListingAttributeCreateOrConnectWithoutAttrDefInput | ListingAttributeCreateOrConnectWithoutAttrDefInput[]
    createMany?: ListingAttributeCreateManyAttrDefInputEnvelope
    connect?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
  }

  export type CategoryUpdateOneRequiredWithoutAttributeDefsNestedInput = {
    create?: XOR<CategoryCreateWithoutAttributeDefsInput, CategoryUncheckedCreateWithoutAttributeDefsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutAttributeDefsInput
    upsert?: CategoryUpsertWithoutAttributeDefsInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutAttributeDefsInput, CategoryUpdateWithoutAttributeDefsInput>, CategoryUncheckedUpdateWithoutAttributeDefsInput>
  }

  export type ListingAttributeUpdateManyWithoutAttrDefNestedInput = {
    create?: XOR<ListingAttributeCreateWithoutAttrDefInput, ListingAttributeUncheckedCreateWithoutAttrDefInput> | ListingAttributeCreateWithoutAttrDefInput[] | ListingAttributeUncheckedCreateWithoutAttrDefInput[]
    connectOrCreate?: ListingAttributeCreateOrConnectWithoutAttrDefInput | ListingAttributeCreateOrConnectWithoutAttrDefInput[]
    upsert?: ListingAttributeUpsertWithWhereUniqueWithoutAttrDefInput | ListingAttributeUpsertWithWhereUniqueWithoutAttrDefInput[]
    createMany?: ListingAttributeCreateManyAttrDefInputEnvelope
    set?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    disconnect?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    delete?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    connect?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    update?: ListingAttributeUpdateWithWhereUniqueWithoutAttrDefInput | ListingAttributeUpdateWithWhereUniqueWithoutAttrDefInput[]
    updateMany?: ListingAttributeUpdateManyWithWhereWithoutAttrDefInput | ListingAttributeUpdateManyWithWhereWithoutAttrDefInput[]
    deleteMany?: ListingAttributeScalarWhereInput | ListingAttributeScalarWhereInput[]
  }

  export type ListingAttributeUncheckedUpdateManyWithoutAttrDefNestedInput = {
    create?: XOR<ListingAttributeCreateWithoutAttrDefInput, ListingAttributeUncheckedCreateWithoutAttrDefInput> | ListingAttributeCreateWithoutAttrDefInput[] | ListingAttributeUncheckedCreateWithoutAttrDefInput[]
    connectOrCreate?: ListingAttributeCreateOrConnectWithoutAttrDefInput | ListingAttributeCreateOrConnectWithoutAttrDefInput[]
    upsert?: ListingAttributeUpsertWithWhereUniqueWithoutAttrDefInput | ListingAttributeUpsertWithWhereUniqueWithoutAttrDefInput[]
    createMany?: ListingAttributeCreateManyAttrDefInputEnvelope
    set?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    disconnect?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    delete?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    connect?: ListingAttributeWhereUniqueInput | ListingAttributeWhereUniqueInput[]
    update?: ListingAttributeUpdateWithWhereUniqueWithoutAttrDefInput | ListingAttributeUpdateWithWhereUniqueWithoutAttrDefInput[]
    updateMany?: ListingAttributeUpdateManyWithWhereWithoutAttrDefInput | ListingAttributeUpdateManyWithWhereWithoutAttrDefInput[]
    deleteMany?: ListingAttributeScalarWhereInput | ListingAttributeScalarWhereInput[]
  }

  export type ListingCreateNestedOneWithoutAttributesInput = {
    create?: XOR<ListingCreateWithoutAttributesInput, ListingUncheckedCreateWithoutAttributesInput>
    connectOrCreate?: ListingCreateOrConnectWithoutAttributesInput
    connect?: ListingWhereUniqueInput
  }

  export type ListingAttributeDefCreateNestedOneWithoutAttributesInput = {
    create?: XOR<ListingAttributeDefCreateWithoutAttributesInput, ListingAttributeDefUncheckedCreateWithoutAttributesInput>
    connectOrCreate?: ListingAttributeDefCreateOrConnectWithoutAttributesInput
    connect?: ListingAttributeDefWhereUniqueInput
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type ListingUpdateOneRequiredWithoutAttributesNestedInput = {
    create?: XOR<ListingCreateWithoutAttributesInput, ListingUncheckedCreateWithoutAttributesInput>
    connectOrCreate?: ListingCreateOrConnectWithoutAttributesInput
    upsert?: ListingUpsertWithoutAttributesInput
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutAttributesInput, ListingUpdateWithoutAttributesInput>, ListingUncheckedUpdateWithoutAttributesInput>
  }

  export type ListingAttributeDefUpdateOneRequiredWithoutAttributesNestedInput = {
    create?: XOR<ListingAttributeDefCreateWithoutAttributesInput, ListingAttributeDefUncheckedCreateWithoutAttributesInput>
    connectOrCreate?: ListingAttributeDefCreateOrConnectWithoutAttributesInput
    upsert?: ListingAttributeDefUpsertWithoutAttributesInput
    connect?: ListingAttributeDefWhereUniqueInput
    update?: XOR<XOR<ListingAttributeDefUpdateToOneWithWhereWithoutAttributesInput, ListingAttributeDefUpdateWithoutAttributesInput>, ListingAttributeDefUncheckedUpdateWithoutAttributesInput>
  }

  export type UserCreateNestedOneWithoutFavoritesInput = {
    create?: XOR<UserCreateWithoutFavoritesInput, UserUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavoritesInput
    connect?: UserWhereUniqueInput
  }

  export type ListingCreateNestedOneWithoutFavoritesInput = {
    create?: XOR<ListingCreateWithoutFavoritesInput, ListingUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: ListingCreateOrConnectWithoutFavoritesInput
    connect?: ListingWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutFavoritesNestedInput = {
    create?: XOR<UserCreateWithoutFavoritesInput, UserUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavoritesInput
    upsert?: UserUpsertWithoutFavoritesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFavoritesInput, UserUpdateWithoutFavoritesInput>, UserUncheckedUpdateWithoutFavoritesInput>
  }

  export type ListingUpdateOneRequiredWithoutFavoritesNestedInput = {
    create?: XOR<ListingCreateWithoutFavoritesInput, ListingUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: ListingCreateOrConnectWithoutFavoritesInput
    upsert?: ListingUpsertWithoutFavoritesInput
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutFavoritesInput, ListingUpdateWithoutFavoritesInput>, ListingUncheckedUpdateWithoutFavoritesInput>
  }

  export type ListingCreateNestedOneWithoutConversationsInput = {
    create?: XOR<ListingCreateWithoutConversationsInput, ListingUncheckedCreateWithoutConversationsInput>
    connectOrCreate?: ListingCreateOrConnectWithoutConversationsInput
    connect?: ListingWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutConversationsBuyerInput = {
    create?: XOR<UserCreateWithoutConversationsBuyerInput, UserUncheckedCreateWithoutConversationsBuyerInput>
    connectOrCreate?: UserCreateOrConnectWithoutConversationsBuyerInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutConversationsSellerInput = {
    create?: XOR<UserCreateWithoutConversationsSellerInput, UserUncheckedCreateWithoutConversationsSellerInput>
    connectOrCreate?: UserCreateOrConnectWithoutConversationsSellerInput
    connect?: UserWhereUniqueInput
  }

  export type MessageCreateNestedManyWithoutConversationInput = {
    create?: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput> | MessageCreateWithoutConversationInput[] | MessageUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutConversationInput | MessageCreateOrConnectWithoutConversationInput[]
    createMany?: MessageCreateManyConversationInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutConversationInput = {
    create?: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput> | MessageCreateWithoutConversationInput[] | MessageUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutConversationInput | MessageCreateOrConnectWithoutConversationInput[]
    createMany?: MessageCreateManyConversationInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type EnumConversationStatusFieldUpdateOperationsInput = {
    set?: $Enums.ConversationStatus
  }

  export type ListingUpdateOneRequiredWithoutConversationsNestedInput = {
    create?: XOR<ListingCreateWithoutConversationsInput, ListingUncheckedCreateWithoutConversationsInput>
    connectOrCreate?: ListingCreateOrConnectWithoutConversationsInput
    upsert?: ListingUpsertWithoutConversationsInput
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutConversationsInput, ListingUpdateWithoutConversationsInput>, ListingUncheckedUpdateWithoutConversationsInput>
  }

  export type UserUpdateOneRequiredWithoutConversationsBuyerNestedInput = {
    create?: XOR<UserCreateWithoutConversationsBuyerInput, UserUncheckedCreateWithoutConversationsBuyerInput>
    connectOrCreate?: UserCreateOrConnectWithoutConversationsBuyerInput
    upsert?: UserUpsertWithoutConversationsBuyerInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutConversationsBuyerInput, UserUpdateWithoutConversationsBuyerInput>, UserUncheckedUpdateWithoutConversationsBuyerInput>
  }

  export type UserUpdateOneRequiredWithoutConversationsSellerNestedInput = {
    create?: XOR<UserCreateWithoutConversationsSellerInput, UserUncheckedCreateWithoutConversationsSellerInput>
    connectOrCreate?: UserCreateOrConnectWithoutConversationsSellerInput
    upsert?: UserUpsertWithoutConversationsSellerInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutConversationsSellerInput, UserUpdateWithoutConversationsSellerInput>, UserUncheckedUpdateWithoutConversationsSellerInput>
  }

  export type MessageUpdateManyWithoutConversationNestedInput = {
    create?: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput> | MessageCreateWithoutConversationInput[] | MessageUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutConversationInput | MessageCreateOrConnectWithoutConversationInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutConversationInput | MessageUpsertWithWhereUniqueWithoutConversationInput[]
    createMany?: MessageCreateManyConversationInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutConversationInput | MessageUpdateWithWhereUniqueWithoutConversationInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutConversationInput | MessageUpdateManyWithWhereWithoutConversationInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutConversationNestedInput = {
    create?: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput> | MessageCreateWithoutConversationInput[] | MessageUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutConversationInput | MessageCreateOrConnectWithoutConversationInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutConversationInput | MessageUpsertWithWhereUniqueWithoutConversationInput[]
    createMany?: MessageCreateManyConversationInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutConversationInput | MessageUpdateWithWhereUniqueWithoutConversationInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutConversationInput | MessageUpdateManyWithWhereWithoutConversationInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type ConversationCreateNestedOneWithoutMessagesInput = {
    create?: XOR<ConversationCreateWithoutMessagesInput, ConversationUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: ConversationCreateOrConnectWithoutMessagesInput
    connect?: ConversationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMessagesInput = {
    create?: XOR<UserCreateWithoutMessagesInput, UserUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutMessagesInput
    connect?: UserWhereUniqueInput
  }

  export type ConversationUpdateOneRequiredWithoutMessagesNestedInput = {
    create?: XOR<ConversationCreateWithoutMessagesInput, ConversationUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: ConversationCreateOrConnectWithoutMessagesInput
    upsert?: ConversationUpsertWithoutMessagesInput
    connect?: ConversationWhereUniqueInput
    update?: XOR<XOR<ConversationUpdateToOneWithWhereWithoutMessagesInput, ConversationUpdateWithoutMessagesInput>, ConversationUncheckedUpdateWithoutMessagesInput>
  }

  export type UserUpdateOneRequiredWithoutMessagesNestedInput = {
    create?: XOR<UserCreateWithoutMessagesInput, UserUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutMessagesInput
    upsert?: UserUpsertWithoutMessagesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMessagesInput, UserUpdateWithoutMessagesInput>, UserUncheckedUpdateWithoutMessagesInput>
  }

  export type UserCreateNestedOneWithoutReportsInput = {
    create?: XOR<UserCreateWithoutReportsInput, UserUncheckedCreateWithoutReportsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReportsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumReportTargetFieldUpdateOperationsInput = {
    set?: $Enums.ReportTarget
  }

  export type EnumReportStatusFieldUpdateOperationsInput = {
    set?: $Enums.ReportStatus
  }

  export type UserUpdateOneRequiredWithoutReportsNestedInput = {
    create?: XOR<UserCreateWithoutReportsInput, UserUncheckedCreateWithoutReportsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReportsInput
    upsert?: UserUpsertWithoutReportsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReportsInput, UserUpdateWithoutReportsInput>, UserUncheckedUpdateWithoutReportsInput>
  }

  export type PromotionOrderCreateNestedManyWithoutPlanInput = {
    create?: XOR<PromotionOrderCreateWithoutPlanInput, PromotionOrderUncheckedCreateWithoutPlanInput> | PromotionOrderCreateWithoutPlanInput[] | PromotionOrderUncheckedCreateWithoutPlanInput[]
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutPlanInput | PromotionOrderCreateOrConnectWithoutPlanInput[]
    createMany?: PromotionOrderCreateManyPlanInputEnvelope
    connect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
  }

  export type PromotionOrderUncheckedCreateNestedManyWithoutPlanInput = {
    create?: XOR<PromotionOrderCreateWithoutPlanInput, PromotionOrderUncheckedCreateWithoutPlanInput> | PromotionOrderCreateWithoutPlanInput[] | PromotionOrderUncheckedCreateWithoutPlanInput[]
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutPlanInput | PromotionOrderCreateOrConnectWithoutPlanInput[]
    createMany?: PromotionOrderCreateManyPlanInputEnvelope
    connect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
  }

  export type EnumPromotionTypeFieldUpdateOperationsInput = {
    set?: $Enums.PromotionType
  }

  export type PromotionOrderUpdateManyWithoutPlanNestedInput = {
    create?: XOR<PromotionOrderCreateWithoutPlanInput, PromotionOrderUncheckedCreateWithoutPlanInput> | PromotionOrderCreateWithoutPlanInput[] | PromotionOrderUncheckedCreateWithoutPlanInput[]
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutPlanInput | PromotionOrderCreateOrConnectWithoutPlanInput[]
    upsert?: PromotionOrderUpsertWithWhereUniqueWithoutPlanInput | PromotionOrderUpsertWithWhereUniqueWithoutPlanInput[]
    createMany?: PromotionOrderCreateManyPlanInputEnvelope
    set?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    disconnect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    delete?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    connect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    update?: PromotionOrderUpdateWithWhereUniqueWithoutPlanInput | PromotionOrderUpdateWithWhereUniqueWithoutPlanInput[]
    updateMany?: PromotionOrderUpdateManyWithWhereWithoutPlanInput | PromotionOrderUpdateManyWithWhereWithoutPlanInput[]
    deleteMany?: PromotionOrderScalarWhereInput | PromotionOrderScalarWhereInput[]
  }

  export type PromotionOrderUncheckedUpdateManyWithoutPlanNestedInput = {
    create?: XOR<PromotionOrderCreateWithoutPlanInput, PromotionOrderUncheckedCreateWithoutPlanInput> | PromotionOrderCreateWithoutPlanInput[] | PromotionOrderUncheckedCreateWithoutPlanInput[]
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutPlanInput | PromotionOrderCreateOrConnectWithoutPlanInput[]
    upsert?: PromotionOrderUpsertWithWhereUniqueWithoutPlanInput | PromotionOrderUpsertWithWhereUniqueWithoutPlanInput[]
    createMany?: PromotionOrderCreateManyPlanInputEnvelope
    set?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    disconnect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    delete?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    connect?: PromotionOrderWhereUniqueInput | PromotionOrderWhereUniqueInput[]
    update?: PromotionOrderUpdateWithWhereUniqueWithoutPlanInput | PromotionOrderUpdateWithWhereUniqueWithoutPlanInput[]
    updateMany?: PromotionOrderUpdateManyWithWhereWithoutPlanInput | PromotionOrderUpdateManyWithWhereWithoutPlanInput[]
    deleteMany?: PromotionOrderScalarWhereInput | PromotionOrderScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutPromoOrdersInput = {
    create?: XOR<UserCreateWithoutPromoOrdersInput, UserUncheckedCreateWithoutPromoOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutPromoOrdersInput
    connect?: UserWhereUniqueInput
  }

  export type ListingCreateNestedOneWithoutPromoOrdersInput = {
    create?: XOR<ListingCreateWithoutPromoOrdersInput, ListingUncheckedCreateWithoutPromoOrdersInput>
    connectOrCreate?: ListingCreateOrConnectWithoutPromoOrdersInput
    connect?: ListingWhereUniqueInput
  }

  export type PromotionPlanCreateNestedOneWithoutOrdersInput = {
    create?: XOR<PromotionPlanCreateWithoutOrdersInput, PromotionPlanUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: PromotionPlanCreateOrConnectWithoutOrdersInput
    connect?: PromotionPlanWhereUniqueInput
  }

  export type PaymentCreateNestedManyWithoutPromotionOrderInput = {
    create?: XOR<PaymentCreateWithoutPromotionOrderInput, PaymentUncheckedCreateWithoutPromotionOrderInput> | PaymentCreateWithoutPromotionOrderInput[] | PaymentUncheckedCreateWithoutPromotionOrderInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPromotionOrderInput | PaymentCreateOrConnectWithoutPromotionOrderInput[]
    createMany?: PaymentCreateManyPromotionOrderInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutPromotionOrderInput = {
    create?: XOR<PaymentCreateWithoutPromotionOrderInput, PaymentUncheckedCreateWithoutPromotionOrderInput> | PaymentCreateWithoutPromotionOrderInput[] | PaymentUncheckedCreateWithoutPromotionOrderInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPromotionOrderInput | PaymentCreateOrConnectWithoutPromotionOrderInput[]
    createMany?: PaymentCreateManyPromotionOrderInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutPromoOrdersNestedInput = {
    create?: XOR<UserCreateWithoutPromoOrdersInput, UserUncheckedCreateWithoutPromoOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutPromoOrdersInput
    upsert?: UserUpsertWithoutPromoOrdersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPromoOrdersInput, UserUpdateWithoutPromoOrdersInput>, UserUncheckedUpdateWithoutPromoOrdersInput>
  }

  export type ListingUpdateOneRequiredWithoutPromoOrdersNestedInput = {
    create?: XOR<ListingCreateWithoutPromoOrdersInput, ListingUncheckedCreateWithoutPromoOrdersInput>
    connectOrCreate?: ListingCreateOrConnectWithoutPromoOrdersInput
    upsert?: ListingUpsertWithoutPromoOrdersInput
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutPromoOrdersInput, ListingUpdateWithoutPromoOrdersInput>, ListingUncheckedUpdateWithoutPromoOrdersInput>
  }

  export type PromotionPlanUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<PromotionPlanCreateWithoutOrdersInput, PromotionPlanUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: PromotionPlanCreateOrConnectWithoutOrdersInput
    upsert?: PromotionPlanUpsertWithoutOrdersInput
    connect?: PromotionPlanWhereUniqueInput
    update?: XOR<XOR<PromotionPlanUpdateToOneWithWhereWithoutOrdersInput, PromotionPlanUpdateWithoutOrdersInput>, PromotionPlanUncheckedUpdateWithoutOrdersInput>
  }

  export type PaymentUpdateManyWithoutPromotionOrderNestedInput = {
    create?: XOR<PaymentCreateWithoutPromotionOrderInput, PaymentUncheckedCreateWithoutPromotionOrderInput> | PaymentCreateWithoutPromotionOrderInput[] | PaymentUncheckedCreateWithoutPromotionOrderInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPromotionOrderInput | PaymentCreateOrConnectWithoutPromotionOrderInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutPromotionOrderInput | PaymentUpsertWithWhereUniqueWithoutPromotionOrderInput[]
    createMany?: PaymentCreateManyPromotionOrderInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutPromotionOrderInput | PaymentUpdateWithWhereUniqueWithoutPromotionOrderInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutPromotionOrderInput | PaymentUpdateManyWithWhereWithoutPromotionOrderInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutPromotionOrderNestedInput = {
    create?: XOR<PaymentCreateWithoutPromotionOrderInput, PaymentUncheckedCreateWithoutPromotionOrderInput> | PaymentCreateWithoutPromotionOrderInput[] | PaymentUncheckedCreateWithoutPromotionOrderInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPromotionOrderInput | PaymentCreateOrConnectWithoutPromotionOrderInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutPromotionOrderInput | PaymentUpsertWithWhereUniqueWithoutPromotionOrderInput[]
    createMany?: PaymentCreateManyPromotionOrderInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutPromotionOrderInput | PaymentUpdateWithWhereUniqueWithoutPromotionOrderInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutPromotionOrderInput | PaymentUpdateManyWithWhereWithoutPromotionOrderInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type PromotionOrderCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<PromotionOrderCreateWithoutPaymentsInput, PromotionOrderUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutPaymentsInput
    connect?: PromotionOrderWhereUniqueInput
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type PromotionOrderUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<PromotionOrderCreateWithoutPaymentsInput, PromotionOrderUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: PromotionOrderCreateOrConnectWithoutPaymentsInput
    upsert?: PromotionOrderUpsertWithoutPaymentsInput
    connect?: PromotionOrderWhereUniqueInput
    update?: XOR<XOR<PromotionOrderUpdateToOneWithWhereWithoutPaymentsInput, PromotionOrderUpdateWithoutPaymentsInput>, PromotionOrderUncheckedUpdateWithoutPaymentsInput>
  }

  export type AdImpressionCreateNestedManyWithoutAdSlotInput = {
    create?: XOR<AdImpressionCreateWithoutAdSlotInput, AdImpressionUncheckedCreateWithoutAdSlotInput> | AdImpressionCreateWithoutAdSlotInput[] | AdImpressionUncheckedCreateWithoutAdSlotInput[]
    connectOrCreate?: AdImpressionCreateOrConnectWithoutAdSlotInput | AdImpressionCreateOrConnectWithoutAdSlotInput[]
    createMany?: AdImpressionCreateManyAdSlotInputEnvelope
    connect?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
  }

  export type AdImpressionUncheckedCreateNestedManyWithoutAdSlotInput = {
    create?: XOR<AdImpressionCreateWithoutAdSlotInput, AdImpressionUncheckedCreateWithoutAdSlotInput> | AdImpressionCreateWithoutAdSlotInput[] | AdImpressionUncheckedCreateWithoutAdSlotInput[]
    connectOrCreate?: AdImpressionCreateOrConnectWithoutAdSlotInput | AdImpressionCreateOrConnectWithoutAdSlotInput[]
    createMany?: AdImpressionCreateManyAdSlotInputEnvelope
    connect?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
  }

  export type AdImpressionUpdateManyWithoutAdSlotNestedInput = {
    create?: XOR<AdImpressionCreateWithoutAdSlotInput, AdImpressionUncheckedCreateWithoutAdSlotInput> | AdImpressionCreateWithoutAdSlotInput[] | AdImpressionUncheckedCreateWithoutAdSlotInput[]
    connectOrCreate?: AdImpressionCreateOrConnectWithoutAdSlotInput | AdImpressionCreateOrConnectWithoutAdSlotInput[]
    upsert?: AdImpressionUpsertWithWhereUniqueWithoutAdSlotInput | AdImpressionUpsertWithWhereUniqueWithoutAdSlotInput[]
    createMany?: AdImpressionCreateManyAdSlotInputEnvelope
    set?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    disconnect?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    delete?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    connect?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    update?: AdImpressionUpdateWithWhereUniqueWithoutAdSlotInput | AdImpressionUpdateWithWhereUniqueWithoutAdSlotInput[]
    updateMany?: AdImpressionUpdateManyWithWhereWithoutAdSlotInput | AdImpressionUpdateManyWithWhereWithoutAdSlotInput[]
    deleteMany?: AdImpressionScalarWhereInput | AdImpressionScalarWhereInput[]
  }

  export type AdImpressionUncheckedUpdateManyWithoutAdSlotNestedInput = {
    create?: XOR<AdImpressionCreateWithoutAdSlotInput, AdImpressionUncheckedCreateWithoutAdSlotInput> | AdImpressionCreateWithoutAdSlotInput[] | AdImpressionUncheckedCreateWithoutAdSlotInput[]
    connectOrCreate?: AdImpressionCreateOrConnectWithoutAdSlotInput | AdImpressionCreateOrConnectWithoutAdSlotInput[]
    upsert?: AdImpressionUpsertWithWhereUniqueWithoutAdSlotInput | AdImpressionUpsertWithWhereUniqueWithoutAdSlotInput[]
    createMany?: AdImpressionCreateManyAdSlotInputEnvelope
    set?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    disconnect?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    delete?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    connect?: AdImpressionWhereUniqueInput | AdImpressionWhereUniqueInput[]
    update?: AdImpressionUpdateWithWhereUniqueWithoutAdSlotInput | AdImpressionUpdateWithWhereUniqueWithoutAdSlotInput[]
    updateMany?: AdImpressionUpdateManyWithWhereWithoutAdSlotInput | AdImpressionUpdateManyWithWhereWithoutAdSlotInput[]
    deleteMany?: AdImpressionScalarWhereInput | AdImpressionScalarWhereInput[]
  }

  export type AdSlotCreateNestedOneWithoutImpressionsInput = {
    create?: XOR<AdSlotCreateWithoutImpressionsInput, AdSlotUncheckedCreateWithoutImpressionsInput>
    connectOrCreate?: AdSlotCreateOrConnectWithoutImpressionsInput
    connect?: AdSlotWhereUniqueInput
  }

  export type ListingCreateNestedOneWithoutAdImpressionsInput = {
    create?: XOR<ListingCreateWithoutAdImpressionsInput, ListingUncheckedCreateWithoutAdImpressionsInput>
    connectOrCreate?: ListingCreateOrConnectWithoutAdImpressionsInput
    connect?: ListingWhereUniqueInput
  }

  export type AdSlotUpdateOneRequiredWithoutImpressionsNestedInput = {
    create?: XOR<AdSlotCreateWithoutImpressionsInput, AdSlotUncheckedCreateWithoutImpressionsInput>
    connectOrCreate?: AdSlotCreateOrConnectWithoutImpressionsInput
    upsert?: AdSlotUpsertWithoutImpressionsInput
    connect?: AdSlotWhereUniqueInput
    update?: XOR<XOR<AdSlotUpdateToOneWithWhereWithoutImpressionsInput, AdSlotUpdateWithoutImpressionsInput>, AdSlotUncheckedUpdateWithoutImpressionsInput>
  }

  export type ListingUpdateOneWithoutAdImpressionsNestedInput = {
    create?: XOR<ListingCreateWithoutAdImpressionsInput, ListingUncheckedCreateWithoutAdImpressionsInput>
    connectOrCreate?: ListingCreateOrConnectWithoutAdImpressionsInput
    upsert?: ListingUpsertWithoutAdImpressionsInput
    disconnect?: ListingWhereInput | boolean
    delete?: ListingWhereInput | boolean
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutAdImpressionsInput, ListingUpdateWithoutAdImpressionsInput>, ListingUncheckedUpdateWithoutAdImpressionsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumConditionFilter<$PrismaModel = never> = {
    equals?: $Enums.Condition | EnumConditionFieldRefInput<$PrismaModel>
    in?: $Enums.Condition[] | ListEnumConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.Condition[] | ListEnumConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumConditionFilter<$PrismaModel> | $Enums.Condition
  }

  export type NestedEnumListingStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ListingStatus | EnumListingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumListingStatusFilter<$PrismaModel> | $Enums.ListingStatus
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumConditionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Condition | EnumConditionFieldRefInput<$PrismaModel>
    in?: $Enums.Condition[] | ListEnumConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.Condition[] | ListEnumConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumConditionWithAggregatesFilter<$PrismaModel> | $Enums.Condition
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumConditionFilter<$PrismaModel>
    _max?: NestedEnumConditionFilter<$PrismaModel>
  }

  export type NestedEnumListingStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ListingStatus | EnumListingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumListingStatusWithAggregatesFilter<$PrismaModel> | $Enums.ListingStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumListingStatusFilter<$PrismaModel>
    _max?: NestedEnumListingStatusFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumConversationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ConversationStatus | EnumConversationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ConversationStatus[] | ListEnumConversationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConversationStatus[] | ListEnumConversationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumConversationStatusFilter<$PrismaModel> | $Enums.ConversationStatus
  }

  export type NestedEnumConversationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ConversationStatus | EnumConversationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ConversationStatus[] | ListEnumConversationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConversationStatus[] | ListEnumConversationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumConversationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ConversationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumConversationStatusFilter<$PrismaModel>
    _max?: NestedEnumConversationStatusFilter<$PrismaModel>
  }

  export type NestedEnumReportTargetFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportTarget | EnumReportTargetFieldRefInput<$PrismaModel>
    in?: $Enums.ReportTarget[] | ListEnumReportTargetFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportTarget[] | ListEnumReportTargetFieldRefInput<$PrismaModel>
    not?: NestedEnumReportTargetFilter<$PrismaModel> | $Enums.ReportTarget
  }

  export type NestedEnumReportStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportStatus | EnumReportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReportStatusFilter<$PrismaModel> | $Enums.ReportStatus
  }

  export type NestedEnumReportTargetWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportTarget | EnumReportTargetFieldRefInput<$PrismaModel>
    in?: $Enums.ReportTarget[] | ListEnumReportTargetFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportTarget[] | ListEnumReportTargetFieldRefInput<$PrismaModel>
    not?: NestedEnumReportTargetWithAggregatesFilter<$PrismaModel> | $Enums.ReportTarget
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReportTargetFilter<$PrismaModel>
    _max?: NestedEnumReportTargetFilter<$PrismaModel>
  }

  export type NestedEnumReportStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportStatus | EnumReportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReportStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReportStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReportStatusFilter<$PrismaModel>
    _max?: NestedEnumReportStatusFilter<$PrismaModel>
  }

  export type NestedEnumPromotionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PromotionType | EnumPromotionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PromotionType[] | ListEnumPromotionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PromotionType[] | ListEnumPromotionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPromotionTypeFilter<$PrismaModel> | $Enums.PromotionType
  }

  export type NestedEnumPromotionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PromotionType | EnumPromotionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PromotionType[] | ListEnumPromotionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PromotionType[] | ListEnumPromotionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPromotionTypeWithAggregatesFilter<$PrismaModel> | $Enums.PromotionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPromotionTypeFilter<$PrismaModel>
    _max?: NestedEnumPromotionTypeFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type UserProfileCreateWithoutUserInput = {
    displayName: string
    phone?: string | null
    avatarUrl?: string | null
    about?: string | null
    provinceId?: string | null
    cityId?: string | null
    addressText?: string | null
  }

  export type UserProfileUncheckedCreateWithoutUserInput = {
    displayName: string
    phone?: string | null
    avatarUrl?: string | null
    about?: string | null
    provinceId?: string | null
    cityId?: string | null
    addressText?: string | null
  }

  export type UserProfileCreateOrConnectWithoutUserInput = {
    where: UserProfileWhereUniqueInput
    create: XOR<UserProfileCreateWithoutUserInput, UserProfileUncheckedCreateWithoutUserInput>
  }

  export type ListingCreateWithoutSellerInput = {
    id?: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    category: CategoryCreateNestedOneWithoutListingsInput
    media?: ListingMediaCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeCreateNestedManyWithoutListingInput
    favorites?: FavoriteCreateNestedManyWithoutListingInput
    conversations?: ConversationCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutSellerInput = {
    id?: string
    categoryId: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    media?: ListingMediaUncheckedCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeUncheckedCreateNestedManyWithoutListingInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutListingInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutSellerInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutSellerInput, ListingUncheckedCreateWithoutSellerInput>
  }

  export type ListingCreateManySellerInputEnvelope = {
    data: ListingCreateManySellerInput | ListingCreateManySellerInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteCreateWithoutUserInput = {
    createdAt?: Date | string
    listing: ListingCreateNestedOneWithoutFavoritesInput
  }

  export type FavoriteUncheckedCreateWithoutUserInput = {
    listingId: string
    createdAt?: Date | string
  }

  export type FavoriteCreateOrConnectWithoutUserInput = {
    where: FavoriteWhereUniqueInput
    create: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput>
  }

  export type FavoriteCreateManyUserInputEnvelope = {
    data: FavoriteCreateManyUserInput | FavoriteCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ConversationCreateWithoutBuyerInput = {
    id?: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
    listing: ListingCreateNestedOneWithoutConversationsInput
    seller: UserCreateNestedOneWithoutConversationsSellerInput
    messages?: MessageCreateNestedManyWithoutConversationInput
  }

  export type ConversationUncheckedCreateWithoutBuyerInput = {
    id?: string
    listingId: string
    sellerId: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
    messages?: MessageUncheckedCreateNestedManyWithoutConversationInput
  }

  export type ConversationCreateOrConnectWithoutBuyerInput = {
    where: ConversationWhereUniqueInput
    create: XOR<ConversationCreateWithoutBuyerInput, ConversationUncheckedCreateWithoutBuyerInput>
  }

  export type ConversationCreateManyBuyerInputEnvelope = {
    data: ConversationCreateManyBuyerInput | ConversationCreateManyBuyerInput[]
    skipDuplicates?: boolean
  }

  export type ConversationCreateWithoutSellerInput = {
    id?: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
    listing: ListingCreateNestedOneWithoutConversationsInput
    buyer: UserCreateNestedOneWithoutConversationsBuyerInput
    messages?: MessageCreateNestedManyWithoutConversationInput
  }

  export type ConversationUncheckedCreateWithoutSellerInput = {
    id?: string
    listingId: string
    buyerId: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
    messages?: MessageUncheckedCreateNestedManyWithoutConversationInput
  }

  export type ConversationCreateOrConnectWithoutSellerInput = {
    where: ConversationWhereUniqueInput
    create: XOR<ConversationCreateWithoutSellerInput, ConversationUncheckedCreateWithoutSellerInput>
  }

  export type ConversationCreateManySellerInputEnvelope = {
    data: ConversationCreateManySellerInput | ConversationCreateManySellerInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutSenderInput = {
    id?: string
    body?: string | null
    mediaUrl?: string | null
    createdAt?: Date | string
    readAt?: Date | string | null
    conversation: ConversationCreateNestedOneWithoutMessagesInput
  }

  export type MessageUncheckedCreateWithoutSenderInput = {
    id?: string
    conversationId: string
    body?: string | null
    mediaUrl?: string | null
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type MessageCreateOrConnectWithoutSenderInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageCreateManySenderInputEnvelope = {
    data: MessageCreateManySenderInput | MessageCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type ReportCreateWithoutReporterInput = {
    id?: string
    targetType: $Enums.ReportTarget
    targetId: string
    reason: string
    detailsText?: string | null
    status?: $Enums.ReportStatus
    createdAt?: Date | string
    closedAt?: Date | string | null
    adminId?: string | null
  }

  export type ReportUncheckedCreateWithoutReporterInput = {
    id?: string
    targetType: $Enums.ReportTarget
    targetId: string
    reason: string
    detailsText?: string | null
    status?: $Enums.ReportStatus
    createdAt?: Date | string
    closedAt?: Date | string | null
    adminId?: string | null
  }

  export type ReportCreateOrConnectWithoutReporterInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutReporterInput, ReportUncheckedCreateWithoutReporterInput>
  }

  export type ReportCreateManyReporterInputEnvelope = {
    data: ReportCreateManyReporterInput | ReportCreateManyReporterInput[]
    skipDuplicates?: boolean
  }

  export type PromotionOrderCreateWithoutBuyerInput = {
    id?: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    listing: ListingCreateNestedOneWithoutPromoOrdersInput
    plan: PromotionPlanCreateNestedOneWithoutOrdersInput
    payments?: PaymentCreateNestedManyWithoutPromotionOrderInput
  }

  export type PromotionOrderUncheckedCreateWithoutBuyerInput = {
    id?: string
    listingId: string
    planId: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    payments?: PaymentUncheckedCreateNestedManyWithoutPromotionOrderInput
  }

  export type PromotionOrderCreateOrConnectWithoutBuyerInput = {
    where: PromotionOrderWhereUniqueInput
    create: XOR<PromotionOrderCreateWithoutBuyerInput, PromotionOrderUncheckedCreateWithoutBuyerInput>
  }

  export type PromotionOrderCreateManyBuyerInputEnvelope = {
    data: PromotionOrderCreateManyBuyerInput | PromotionOrderCreateManyBuyerInput[]
    skipDuplicates?: boolean
  }

  export type UserProfileUpsertWithoutUserInput = {
    update: XOR<UserProfileUpdateWithoutUserInput, UserProfileUncheckedUpdateWithoutUserInput>
    create: XOR<UserProfileCreateWithoutUserInput, UserProfileUncheckedCreateWithoutUserInput>
    where?: UserProfileWhereInput
  }

  export type UserProfileUpdateToOneWithWhereWithoutUserInput = {
    where?: UserProfileWhereInput
    data: XOR<UserProfileUpdateWithoutUserInput, UserProfileUncheckedUpdateWithoutUserInput>
  }

  export type UserProfileUpdateWithoutUserInput = {
    displayName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    about?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressText?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserProfileUncheckedUpdateWithoutUserInput = {
    displayName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    about?: NullableStringFieldUpdateOperationsInput | string | null
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressText?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ListingUpsertWithWhereUniqueWithoutSellerInput = {
    where: ListingWhereUniqueInput
    update: XOR<ListingUpdateWithoutSellerInput, ListingUncheckedUpdateWithoutSellerInput>
    create: XOR<ListingCreateWithoutSellerInput, ListingUncheckedCreateWithoutSellerInput>
  }

  export type ListingUpdateWithWhereUniqueWithoutSellerInput = {
    where: ListingWhereUniqueInput
    data: XOR<ListingUpdateWithoutSellerInput, ListingUncheckedUpdateWithoutSellerInput>
  }

  export type ListingUpdateManyWithWhereWithoutSellerInput = {
    where: ListingScalarWhereInput
    data: XOR<ListingUpdateManyMutationInput, ListingUncheckedUpdateManyWithoutSellerInput>
  }

  export type ListingScalarWhereInput = {
    AND?: ListingScalarWhereInput | ListingScalarWhereInput[]
    OR?: ListingScalarWhereInput[]
    NOT?: ListingScalarWhereInput | ListingScalarWhereInput[]
    id?: StringFilter<"Listing"> | string
    sellerId?: StringFilter<"Listing"> | string
    categoryId?: StringFilter<"Listing"> | string
    title?: StringFilter<"Listing"> | string
    description?: StringNullableFilter<"Listing"> | string | null
    priceAmount?: DecimalFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Listing"> | string
    condition?: EnumConditionFilter<"Listing"> | $Enums.Condition
    quantity?: IntFilter<"Listing"> | number
    status?: EnumListingStatusFilter<"Listing"> | $Enums.ListingStatus
    provinceId?: StringNullableFilter<"Listing"> | string | null
    cityId?: StringNullableFilter<"Listing"> | string | null
    viewsCount?: IntFilter<"Listing"> | number
    favoritesCount?: IntFilter<"Listing"> | number
    contactsCount?: IntFilter<"Listing"> | number
    promotedUntil?: DateTimeNullableFilter<"Listing"> | Date | string | null
    createdAt?: DateTimeFilter<"Listing"> | Date | string
    updatedAt?: DateTimeFilter<"Listing"> | Date | string
    publishedAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
  }

  export type FavoriteUpsertWithWhereUniqueWithoutUserInput = {
    where: FavoriteWhereUniqueInput
    update: XOR<FavoriteUpdateWithoutUserInput, FavoriteUncheckedUpdateWithoutUserInput>
    create: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput>
  }

  export type FavoriteUpdateWithWhereUniqueWithoutUserInput = {
    where: FavoriteWhereUniqueInput
    data: XOR<FavoriteUpdateWithoutUserInput, FavoriteUncheckedUpdateWithoutUserInput>
  }

  export type FavoriteUpdateManyWithWhereWithoutUserInput = {
    where: FavoriteScalarWhereInput
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyWithoutUserInput>
  }

  export type FavoriteScalarWhereInput = {
    AND?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
    OR?: FavoriteScalarWhereInput[]
    NOT?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
    userId?: StringFilter<"Favorite"> | string
    listingId?: StringFilter<"Favorite"> | string
    createdAt?: DateTimeFilter<"Favorite"> | Date | string
  }

  export type ConversationUpsertWithWhereUniqueWithoutBuyerInput = {
    where: ConversationWhereUniqueInput
    update: XOR<ConversationUpdateWithoutBuyerInput, ConversationUncheckedUpdateWithoutBuyerInput>
    create: XOR<ConversationCreateWithoutBuyerInput, ConversationUncheckedCreateWithoutBuyerInput>
  }

  export type ConversationUpdateWithWhereUniqueWithoutBuyerInput = {
    where: ConversationWhereUniqueInput
    data: XOR<ConversationUpdateWithoutBuyerInput, ConversationUncheckedUpdateWithoutBuyerInput>
  }

  export type ConversationUpdateManyWithWhereWithoutBuyerInput = {
    where: ConversationScalarWhereInput
    data: XOR<ConversationUpdateManyMutationInput, ConversationUncheckedUpdateManyWithoutBuyerInput>
  }

  export type ConversationScalarWhereInput = {
    AND?: ConversationScalarWhereInput | ConversationScalarWhereInput[]
    OR?: ConversationScalarWhereInput[]
    NOT?: ConversationScalarWhereInput | ConversationScalarWhereInput[]
    id?: StringFilter<"Conversation"> | string
    listingId?: StringFilter<"Conversation"> | string
    buyerId?: StringFilter<"Conversation"> | string
    sellerId?: StringFilter<"Conversation"> | string
    lastMessageAt?: DateTimeNullableFilter<"Conversation"> | Date | string | null
    status?: EnumConversationStatusFilter<"Conversation"> | $Enums.ConversationStatus
    createdAt?: DateTimeFilter<"Conversation"> | Date | string
  }

  export type ConversationUpsertWithWhereUniqueWithoutSellerInput = {
    where: ConversationWhereUniqueInput
    update: XOR<ConversationUpdateWithoutSellerInput, ConversationUncheckedUpdateWithoutSellerInput>
    create: XOR<ConversationCreateWithoutSellerInput, ConversationUncheckedCreateWithoutSellerInput>
  }

  export type ConversationUpdateWithWhereUniqueWithoutSellerInput = {
    where: ConversationWhereUniqueInput
    data: XOR<ConversationUpdateWithoutSellerInput, ConversationUncheckedUpdateWithoutSellerInput>
  }

  export type ConversationUpdateManyWithWhereWithoutSellerInput = {
    where: ConversationScalarWhereInput
    data: XOR<ConversationUpdateManyMutationInput, ConversationUncheckedUpdateManyWithoutSellerInput>
  }

  export type MessageUpsertWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
  }

  export type MessageUpdateManyWithWhereWithoutSenderInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutSenderInput>
  }

  export type MessageScalarWhereInput = {
    AND?: MessageScalarWhereInput | MessageScalarWhereInput[]
    OR?: MessageScalarWhereInput[]
    NOT?: MessageScalarWhereInput | MessageScalarWhereInput[]
    id?: StringFilter<"Message"> | string
    conversationId?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    body?: StringNullableFilter<"Message"> | string | null
    mediaUrl?: StringNullableFilter<"Message"> | string | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    readAt?: DateTimeNullableFilter<"Message"> | Date | string | null
  }

  export type ReportUpsertWithWhereUniqueWithoutReporterInput = {
    where: ReportWhereUniqueInput
    update: XOR<ReportUpdateWithoutReporterInput, ReportUncheckedUpdateWithoutReporterInput>
    create: XOR<ReportCreateWithoutReporterInput, ReportUncheckedCreateWithoutReporterInput>
  }

  export type ReportUpdateWithWhereUniqueWithoutReporterInput = {
    where: ReportWhereUniqueInput
    data: XOR<ReportUpdateWithoutReporterInput, ReportUncheckedUpdateWithoutReporterInput>
  }

  export type ReportUpdateManyWithWhereWithoutReporterInput = {
    where: ReportScalarWhereInput
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyWithoutReporterInput>
  }

  export type ReportScalarWhereInput = {
    AND?: ReportScalarWhereInput | ReportScalarWhereInput[]
    OR?: ReportScalarWhereInput[]
    NOT?: ReportScalarWhereInput | ReportScalarWhereInput[]
    id?: StringFilter<"Report"> | string
    reporterId?: StringFilter<"Report"> | string
    targetType?: EnumReportTargetFilter<"Report"> | $Enums.ReportTarget
    targetId?: StringFilter<"Report"> | string
    reason?: StringFilter<"Report"> | string
    detailsText?: StringNullableFilter<"Report"> | string | null
    status?: EnumReportStatusFilter<"Report"> | $Enums.ReportStatus
    createdAt?: DateTimeFilter<"Report"> | Date | string
    closedAt?: DateTimeNullableFilter<"Report"> | Date | string | null
    adminId?: StringNullableFilter<"Report"> | string | null
  }

  export type PromotionOrderUpsertWithWhereUniqueWithoutBuyerInput = {
    where: PromotionOrderWhereUniqueInput
    update: XOR<PromotionOrderUpdateWithoutBuyerInput, PromotionOrderUncheckedUpdateWithoutBuyerInput>
    create: XOR<PromotionOrderCreateWithoutBuyerInput, PromotionOrderUncheckedCreateWithoutBuyerInput>
  }

  export type PromotionOrderUpdateWithWhereUniqueWithoutBuyerInput = {
    where: PromotionOrderWhereUniqueInput
    data: XOR<PromotionOrderUpdateWithoutBuyerInput, PromotionOrderUncheckedUpdateWithoutBuyerInput>
  }

  export type PromotionOrderUpdateManyWithWhereWithoutBuyerInput = {
    where: PromotionOrderScalarWhereInput
    data: XOR<PromotionOrderUpdateManyMutationInput, PromotionOrderUncheckedUpdateManyWithoutBuyerInput>
  }

  export type PromotionOrderScalarWhereInput = {
    AND?: PromotionOrderScalarWhereInput | PromotionOrderScalarWhereInput[]
    OR?: PromotionOrderScalarWhereInput[]
    NOT?: PromotionOrderScalarWhereInput | PromotionOrderScalarWhereInput[]
    id?: StringFilter<"PromotionOrder"> | string
    buyerId?: StringFilter<"PromotionOrder"> | string
    listingId?: StringFilter<"PromotionOrder"> | string
    planId?: StringFilter<"PromotionOrder"> | string
    status?: StringFilter<"PromotionOrder"> | string
    subtotal?: DecimalFilter<"PromotionOrder"> | Decimal | DecimalJsLike | number | string
    tax?: DecimalFilter<"PromotionOrder"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"PromotionOrder"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PromotionOrder"> | string
    createdAt?: DateTimeFilter<"PromotionOrder"> | Date | string
    paidAt?: DateTimeNullableFilter<"PromotionOrder"> | Date | string | null
    externalRef?: StringNullableFilter<"PromotionOrder"> | string | null
    metadata?: JsonNullableFilter<"PromotionOrder">
  }

  export type UserCreateWithoutProfileInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    listings?: ListingCreateNestedManyWithoutSellerInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationCreateNestedManyWithoutSellerInput
    messages?: MessageCreateNestedManyWithoutSenderInput
    reports?: ReportCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutBuyerInput
  }

  export type UserUncheckedCreateWithoutProfileInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    listings?: ListingUncheckedCreateNestedManyWithoutSellerInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationUncheckedCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationUncheckedCreateNestedManyWithoutSellerInput
    messages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutBuyerInput
  }

  export type UserCreateOrConnectWithoutProfileInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
  }

  export type UserUpsertWithoutProfileInput = {
    update: XOR<UserUpdateWithoutProfileInput, UserUncheckedUpdateWithoutProfileInput>
    create: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProfileInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProfileInput, UserUncheckedUpdateWithoutProfileInput>
  }

  export type UserUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    listings?: ListingUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUpdateManyWithoutSellerNestedInput
    messages?: MessageUpdateManyWithoutSenderNestedInput
    reports?: ReportUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutBuyerNestedInput
  }

  export type UserUncheckedUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    listings?: ListingUncheckedUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUncheckedUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUncheckedUpdateManyWithoutSellerNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutBuyerNestedInput
  }

  export type LocationCreateWithoutChildrenInput = {
    id?: string
    country: string
    name: string
    slug: string
    createdAt?: Date | string
    parent?: LocationCreateNestedOneWithoutChildrenInput
  }

  export type LocationUncheckedCreateWithoutChildrenInput = {
    id?: string
    country: string
    name: string
    slug: string
    parentId?: string | null
    createdAt?: Date | string
  }

  export type LocationCreateOrConnectWithoutChildrenInput = {
    where: LocationWhereUniqueInput
    create: XOR<LocationCreateWithoutChildrenInput, LocationUncheckedCreateWithoutChildrenInput>
  }

  export type LocationCreateWithoutParentInput = {
    id?: string
    country: string
    name: string
    slug: string
    createdAt?: Date | string
    children?: LocationCreateNestedManyWithoutParentInput
  }

  export type LocationUncheckedCreateWithoutParentInput = {
    id?: string
    country: string
    name: string
    slug: string
    createdAt?: Date | string
    children?: LocationUncheckedCreateNestedManyWithoutParentInput
  }

  export type LocationCreateOrConnectWithoutParentInput = {
    where: LocationWhereUniqueInput
    create: XOR<LocationCreateWithoutParentInput, LocationUncheckedCreateWithoutParentInput>
  }

  export type LocationCreateManyParentInputEnvelope = {
    data: LocationCreateManyParentInput | LocationCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type LocationUpsertWithoutChildrenInput = {
    update: XOR<LocationUpdateWithoutChildrenInput, LocationUncheckedUpdateWithoutChildrenInput>
    create: XOR<LocationCreateWithoutChildrenInput, LocationUncheckedCreateWithoutChildrenInput>
    where?: LocationWhereInput
  }

  export type LocationUpdateToOneWithWhereWithoutChildrenInput = {
    where?: LocationWhereInput
    data: XOR<LocationUpdateWithoutChildrenInput, LocationUncheckedUpdateWithoutChildrenInput>
  }

  export type LocationUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: LocationUpdateOneWithoutChildrenNestedInput
  }

  export type LocationUncheckedUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LocationUpsertWithWhereUniqueWithoutParentInput = {
    where: LocationWhereUniqueInput
    update: XOR<LocationUpdateWithoutParentInput, LocationUncheckedUpdateWithoutParentInput>
    create: XOR<LocationCreateWithoutParentInput, LocationUncheckedCreateWithoutParentInput>
  }

  export type LocationUpdateWithWhereUniqueWithoutParentInput = {
    where: LocationWhereUniqueInput
    data: XOR<LocationUpdateWithoutParentInput, LocationUncheckedUpdateWithoutParentInput>
  }

  export type LocationUpdateManyWithWhereWithoutParentInput = {
    where: LocationScalarWhereInput
    data: XOR<LocationUpdateManyMutationInput, LocationUncheckedUpdateManyWithoutParentInput>
  }

  export type LocationScalarWhereInput = {
    AND?: LocationScalarWhereInput | LocationScalarWhereInput[]
    OR?: LocationScalarWhereInput[]
    NOT?: LocationScalarWhereInput | LocationScalarWhereInput[]
    id?: StringFilter<"Location"> | string
    country?: StringFilter<"Location"> | string
    name?: StringFilter<"Location"> | string
    slug?: StringFilter<"Location"> | string
    parentId?: StringNullableFilter<"Location"> | string | null
    createdAt?: DateTimeFilter<"Location"> | Date | string
  }

  export type CategoryCreateWithoutChildrenInput = {
    id?: string
    name: string
    slug: string
    level: number
    isActive?: boolean
    sortOrder?: number
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    listings?: ListingCreateNestedManyWithoutCategoryInput
    attributeDefs?: ListingAttributeDefCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutChildrenInput = {
    id?: string
    name: string
    slug: string
    parentId?: string | null
    level: number
    isActive?: boolean
    sortOrder?: number
    listings?: ListingUncheckedCreateNestedManyWithoutCategoryInput
    attributeDefs?: ListingAttributeDefUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutChildrenInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
  }

  export type CategoryCreateWithoutParentInput = {
    id?: string
    name: string
    slug: string
    level: number
    isActive?: boolean
    sortOrder?: number
    children?: CategoryCreateNestedManyWithoutParentInput
    listings?: ListingCreateNestedManyWithoutCategoryInput
    attributeDefs?: ListingAttributeDefCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutParentInput = {
    id?: string
    name: string
    slug: string
    level: number
    isActive?: boolean
    sortOrder?: number
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    listings?: ListingUncheckedCreateNestedManyWithoutCategoryInput
    attributeDefs?: ListingAttributeDefUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutParentInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput>
  }

  export type CategoryCreateManyParentInputEnvelope = {
    data: CategoryCreateManyParentInput | CategoryCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type ListingCreateWithoutCategoryInput = {
    id?: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    seller: UserCreateNestedOneWithoutListingsInput
    media?: ListingMediaCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeCreateNestedManyWithoutListingInput
    favorites?: FavoriteCreateNestedManyWithoutListingInput
    conversations?: ConversationCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutCategoryInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    media?: ListingMediaUncheckedCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeUncheckedCreateNestedManyWithoutListingInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutListingInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutCategoryInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutCategoryInput, ListingUncheckedCreateWithoutCategoryInput>
  }

  export type ListingCreateManyCategoryInputEnvelope = {
    data: ListingCreateManyCategoryInput | ListingCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ListingAttributeDefCreateWithoutCategoryInput = {
    id?: string
    name: string
    key: string
    dataType: string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: boolean
    sortOrder?: number
    attributes?: ListingAttributeCreateNestedManyWithoutAttrDefInput
  }

  export type ListingAttributeDefUncheckedCreateWithoutCategoryInput = {
    id?: string
    name: string
    key: string
    dataType: string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: boolean
    sortOrder?: number
    attributes?: ListingAttributeUncheckedCreateNestedManyWithoutAttrDefInput
  }

  export type ListingAttributeDefCreateOrConnectWithoutCategoryInput = {
    where: ListingAttributeDefWhereUniqueInput
    create: XOR<ListingAttributeDefCreateWithoutCategoryInput, ListingAttributeDefUncheckedCreateWithoutCategoryInput>
  }

  export type ListingAttributeDefCreateManyCategoryInputEnvelope = {
    data: ListingAttributeDefCreateManyCategoryInput | ListingAttributeDefCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type CategoryUpsertWithoutChildrenInput = {
    update: XOR<CategoryUpdateWithoutChildrenInput, CategoryUncheckedUpdateWithoutChildrenInput>
    create: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutChildrenInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutChildrenInput, CategoryUncheckedUpdateWithoutChildrenInput>
  }

  export type CategoryUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    listings?: ListingUpdateManyWithoutCategoryNestedInput
    attributeDefs?: ListingAttributeDefUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    listings?: ListingUncheckedUpdateManyWithoutCategoryNestedInput
    attributeDefs?: ListingAttributeDefUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUpsertWithWhereUniqueWithoutParentInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutParentInput, CategoryUncheckedUpdateWithoutParentInput>
    create: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutParentInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutParentInput, CategoryUncheckedUpdateWithoutParentInput>
  }

  export type CategoryUpdateManyWithWhereWithoutParentInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutParentInput>
  }

  export type CategoryScalarWhereInput = {
    AND?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    OR?: CategoryScalarWhereInput[]
    NOT?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    id?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    slug?: StringFilter<"Category"> | string
    parentId?: StringNullableFilter<"Category"> | string | null
    level?: IntFilter<"Category"> | number
    isActive?: BoolFilter<"Category"> | boolean
    sortOrder?: IntFilter<"Category"> | number
  }

  export type ListingUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ListingWhereUniqueInput
    update: XOR<ListingUpdateWithoutCategoryInput, ListingUncheckedUpdateWithoutCategoryInput>
    create: XOR<ListingCreateWithoutCategoryInput, ListingUncheckedCreateWithoutCategoryInput>
  }

  export type ListingUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ListingWhereUniqueInput
    data: XOR<ListingUpdateWithoutCategoryInput, ListingUncheckedUpdateWithoutCategoryInput>
  }

  export type ListingUpdateManyWithWhereWithoutCategoryInput = {
    where: ListingScalarWhereInput
    data: XOR<ListingUpdateManyMutationInput, ListingUncheckedUpdateManyWithoutCategoryInput>
  }

  export type ListingAttributeDefUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ListingAttributeDefWhereUniqueInput
    update: XOR<ListingAttributeDefUpdateWithoutCategoryInput, ListingAttributeDefUncheckedUpdateWithoutCategoryInput>
    create: XOR<ListingAttributeDefCreateWithoutCategoryInput, ListingAttributeDefUncheckedCreateWithoutCategoryInput>
  }

  export type ListingAttributeDefUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ListingAttributeDefWhereUniqueInput
    data: XOR<ListingAttributeDefUpdateWithoutCategoryInput, ListingAttributeDefUncheckedUpdateWithoutCategoryInput>
  }

  export type ListingAttributeDefUpdateManyWithWhereWithoutCategoryInput = {
    where: ListingAttributeDefScalarWhereInput
    data: XOR<ListingAttributeDefUpdateManyMutationInput, ListingAttributeDefUncheckedUpdateManyWithoutCategoryInput>
  }

  export type ListingAttributeDefScalarWhereInput = {
    AND?: ListingAttributeDefScalarWhereInput | ListingAttributeDefScalarWhereInput[]
    OR?: ListingAttributeDefScalarWhereInput[]
    NOT?: ListingAttributeDefScalarWhereInput | ListingAttributeDefScalarWhereInput[]
    id?: StringFilter<"ListingAttributeDef"> | string
    categoryId?: StringFilter<"ListingAttributeDef"> | string
    name?: StringFilter<"ListingAttributeDef"> | string
    key?: StringFilter<"ListingAttributeDef"> | string
    dataType?: StringFilter<"ListingAttributeDef"> | string
    enumOptions?: JsonNullableFilter<"ListingAttributeDef">
    isRequired?: BoolFilter<"ListingAttributeDef"> | boolean
    sortOrder?: IntFilter<"ListingAttributeDef"> | number
  }

  export type UserCreateWithoutListingsInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationCreateNestedManyWithoutSellerInput
    messages?: MessageCreateNestedManyWithoutSenderInput
    reports?: ReportCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutBuyerInput
  }

  export type UserUncheckedCreateWithoutListingsInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationUncheckedCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationUncheckedCreateNestedManyWithoutSellerInput
    messages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutBuyerInput
  }

  export type UserCreateOrConnectWithoutListingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutListingsInput, UserUncheckedCreateWithoutListingsInput>
  }

  export type CategoryCreateWithoutListingsInput = {
    id?: string
    name: string
    slug: string
    level: number
    isActive?: boolean
    sortOrder?: number
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    attributeDefs?: ListingAttributeDefCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutListingsInput = {
    id?: string
    name: string
    slug: string
    parentId?: string | null
    level: number
    isActive?: boolean
    sortOrder?: number
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    attributeDefs?: ListingAttributeDefUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutListingsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutListingsInput, CategoryUncheckedCreateWithoutListingsInput>
  }

  export type ListingMediaCreateWithoutListingInput = {
    id?: string
    url: string
    position: number
    width?: number | null
    height?: number | null
    mimeType?: string | null
    createdAt?: Date | string
  }

  export type ListingMediaUncheckedCreateWithoutListingInput = {
    id?: string
    url: string
    position: number
    width?: number | null
    height?: number | null
    mimeType?: string | null
    createdAt?: Date | string
  }

  export type ListingMediaCreateOrConnectWithoutListingInput = {
    where: ListingMediaWhereUniqueInput
    create: XOR<ListingMediaCreateWithoutListingInput, ListingMediaUncheckedCreateWithoutListingInput>
  }

  export type ListingMediaCreateManyListingInputEnvelope = {
    data: ListingMediaCreateManyListingInput | ListingMediaCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type ListingAttributeCreateWithoutListingInput = {
    id?: string
    valueText?: string | null
    valueNumber?: Decimal | DecimalJsLike | number | string | null
    valueBool?: boolean | null
    attrDef: ListingAttributeDefCreateNestedOneWithoutAttributesInput
  }

  export type ListingAttributeUncheckedCreateWithoutListingInput = {
    id?: string
    attrDefId: string
    valueText?: string | null
    valueNumber?: Decimal | DecimalJsLike | number | string | null
    valueBool?: boolean | null
  }

  export type ListingAttributeCreateOrConnectWithoutListingInput = {
    where: ListingAttributeWhereUniqueInput
    create: XOR<ListingAttributeCreateWithoutListingInput, ListingAttributeUncheckedCreateWithoutListingInput>
  }

  export type ListingAttributeCreateManyListingInputEnvelope = {
    data: ListingAttributeCreateManyListingInput | ListingAttributeCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteCreateWithoutListingInput = {
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutFavoritesInput
  }

  export type FavoriteUncheckedCreateWithoutListingInput = {
    userId: string
    createdAt?: Date | string
  }

  export type FavoriteCreateOrConnectWithoutListingInput = {
    where: FavoriteWhereUniqueInput
    create: XOR<FavoriteCreateWithoutListingInput, FavoriteUncheckedCreateWithoutListingInput>
  }

  export type FavoriteCreateManyListingInputEnvelope = {
    data: FavoriteCreateManyListingInput | FavoriteCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type ConversationCreateWithoutListingInput = {
    id?: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
    buyer: UserCreateNestedOneWithoutConversationsBuyerInput
    seller: UserCreateNestedOneWithoutConversationsSellerInput
    messages?: MessageCreateNestedManyWithoutConversationInput
  }

  export type ConversationUncheckedCreateWithoutListingInput = {
    id?: string
    buyerId: string
    sellerId: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
    messages?: MessageUncheckedCreateNestedManyWithoutConversationInput
  }

  export type ConversationCreateOrConnectWithoutListingInput = {
    where: ConversationWhereUniqueInput
    create: XOR<ConversationCreateWithoutListingInput, ConversationUncheckedCreateWithoutListingInput>
  }

  export type ConversationCreateManyListingInputEnvelope = {
    data: ConversationCreateManyListingInput | ConversationCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type PromotionOrderCreateWithoutListingInput = {
    id?: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    buyer: UserCreateNestedOneWithoutPromoOrdersInput
    plan: PromotionPlanCreateNestedOneWithoutOrdersInput
    payments?: PaymentCreateNestedManyWithoutPromotionOrderInput
  }

  export type PromotionOrderUncheckedCreateWithoutListingInput = {
    id?: string
    buyerId: string
    planId: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    payments?: PaymentUncheckedCreateNestedManyWithoutPromotionOrderInput
  }

  export type PromotionOrderCreateOrConnectWithoutListingInput = {
    where: PromotionOrderWhereUniqueInput
    create: XOR<PromotionOrderCreateWithoutListingInput, PromotionOrderUncheckedCreateWithoutListingInput>
  }

  export type PromotionOrderCreateManyListingInputEnvelope = {
    data: PromotionOrderCreateManyListingInput | PromotionOrderCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type AdImpressionCreateWithoutListingInput = {
    id?: string
    thirdPartyCampaignId?: string | null
    occurredAt?: Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    adSlot: AdSlotCreateNestedOneWithoutImpressionsInput
  }

  export type AdImpressionUncheckedCreateWithoutListingInput = {
    id?: string
    adSlotId: string
    thirdPartyCampaignId?: string | null
    occurredAt?: Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AdImpressionCreateOrConnectWithoutListingInput = {
    where: AdImpressionWhereUniqueInput
    create: XOR<AdImpressionCreateWithoutListingInput, AdImpressionUncheckedCreateWithoutListingInput>
  }

  export type AdImpressionCreateManyListingInputEnvelope = {
    data: AdImpressionCreateManyListingInput | AdImpressionCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutListingsInput = {
    update: XOR<UserUpdateWithoutListingsInput, UserUncheckedUpdateWithoutListingsInput>
    create: XOR<UserCreateWithoutListingsInput, UserUncheckedCreateWithoutListingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutListingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutListingsInput, UserUncheckedUpdateWithoutListingsInput>
  }

  export type UserUpdateWithoutListingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUpdateManyWithoutSellerNestedInput
    messages?: MessageUpdateManyWithoutSenderNestedInput
    reports?: ReportUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutBuyerNestedInput
  }

  export type UserUncheckedUpdateWithoutListingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUncheckedUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUncheckedUpdateManyWithoutSellerNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutBuyerNestedInput
  }

  export type CategoryUpsertWithoutListingsInput = {
    update: XOR<CategoryUpdateWithoutListingsInput, CategoryUncheckedUpdateWithoutListingsInput>
    create: XOR<CategoryCreateWithoutListingsInput, CategoryUncheckedCreateWithoutListingsInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutListingsInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutListingsInput, CategoryUncheckedUpdateWithoutListingsInput>
  }

  export type CategoryUpdateWithoutListingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    attributeDefs?: ListingAttributeDefUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutListingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    attributeDefs?: ListingAttributeDefUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type ListingMediaUpsertWithWhereUniqueWithoutListingInput = {
    where: ListingMediaWhereUniqueInput
    update: XOR<ListingMediaUpdateWithoutListingInput, ListingMediaUncheckedUpdateWithoutListingInput>
    create: XOR<ListingMediaCreateWithoutListingInput, ListingMediaUncheckedCreateWithoutListingInput>
  }

  export type ListingMediaUpdateWithWhereUniqueWithoutListingInput = {
    where: ListingMediaWhereUniqueInput
    data: XOR<ListingMediaUpdateWithoutListingInput, ListingMediaUncheckedUpdateWithoutListingInput>
  }

  export type ListingMediaUpdateManyWithWhereWithoutListingInput = {
    where: ListingMediaScalarWhereInput
    data: XOR<ListingMediaUpdateManyMutationInput, ListingMediaUncheckedUpdateManyWithoutListingInput>
  }

  export type ListingMediaScalarWhereInput = {
    AND?: ListingMediaScalarWhereInput | ListingMediaScalarWhereInput[]
    OR?: ListingMediaScalarWhereInput[]
    NOT?: ListingMediaScalarWhereInput | ListingMediaScalarWhereInput[]
    id?: StringFilter<"ListingMedia"> | string
    listingId?: StringFilter<"ListingMedia"> | string
    url?: StringFilter<"ListingMedia"> | string
    position?: IntFilter<"ListingMedia"> | number
    width?: IntNullableFilter<"ListingMedia"> | number | null
    height?: IntNullableFilter<"ListingMedia"> | number | null
    mimeType?: StringNullableFilter<"ListingMedia"> | string | null
    createdAt?: DateTimeFilter<"ListingMedia"> | Date | string
  }

  export type ListingAttributeUpsertWithWhereUniqueWithoutListingInput = {
    where: ListingAttributeWhereUniqueInput
    update: XOR<ListingAttributeUpdateWithoutListingInput, ListingAttributeUncheckedUpdateWithoutListingInput>
    create: XOR<ListingAttributeCreateWithoutListingInput, ListingAttributeUncheckedCreateWithoutListingInput>
  }

  export type ListingAttributeUpdateWithWhereUniqueWithoutListingInput = {
    where: ListingAttributeWhereUniqueInput
    data: XOR<ListingAttributeUpdateWithoutListingInput, ListingAttributeUncheckedUpdateWithoutListingInput>
  }

  export type ListingAttributeUpdateManyWithWhereWithoutListingInput = {
    where: ListingAttributeScalarWhereInput
    data: XOR<ListingAttributeUpdateManyMutationInput, ListingAttributeUncheckedUpdateManyWithoutListingInput>
  }

  export type ListingAttributeScalarWhereInput = {
    AND?: ListingAttributeScalarWhereInput | ListingAttributeScalarWhereInput[]
    OR?: ListingAttributeScalarWhereInput[]
    NOT?: ListingAttributeScalarWhereInput | ListingAttributeScalarWhereInput[]
    id?: StringFilter<"ListingAttribute"> | string
    listingId?: StringFilter<"ListingAttribute"> | string
    attrDefId?: StringFilter<"ListingAttribute"> | string
    valueText?: StringNullableFilter<"ListingAttribute"> | string | null
    valueNumber?: DecimalNullableFilter<"ListingAttribute"> | Decimal | DecimalJsLike | number | string | null
    valueBool?: BoolNullableFilter<"ListingAttribute"> | boolean | null
  }

  export type FavoriteUpsertWithWhereUniqueWithoutListingInput = {
    where: FavoriteWhereUniqueInput
    update: XOR<FavoriteUpdateWithoutListingInput, FavoriteUncheckedUpdateWithoutListingInput>
    create: XOR<FavoriteCreateWithoutListingInput, FavoriteUncheckedCreateWithoutListingInput>
  }

  export type FavoriteUpdateWithWhereUniqueWithoutListingInput = {
    where: FavoriteWhereUniqueInput
    data: XOR<FavoriteUpdateWithoutListingInput, FavoriteUncheckedUpdateWithoutListingInput>
  }

  export type FavoriteUpdateManyWithWhereWithoutListingInput = {
    where: FavoriteScalarWhereInput
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyWithoutListingInput>
  }

  export type ConversationUpsertWithWhereUniqueWithoutListingInput = {
    where: ConversationWhereUniqueInput
    update: XOR<ConversationUpdateWithoutListingInput, ConversationUncheckedUpdateWithoutListingInput>
    create: XOR<ConversationCreateWithoutListingInput, ConversationUncheckedCreateWithoutListingInput>
  }

  export type ConversationUpdateWithWhereUniqueWithoutListingInput = {
    where: ConversationWhereUniqueInput
    data: XOR<ConversationUpdateWithoutListingInput, ConversationUncheckedUpdateWithoutListingInput>
  }

  export type ConversationUpdateManyWithWhereWithoutListingInput = {
    where: ConversationScalarWhereInput
    data: XOR<ConversationUpdateManyMutationInput, ConversationUncheckedUpdateManyWithoutListingInput>
  }

  export type PromotionOrderUpsertWithWhereUniqueWithoutListingInput = {
    where: PromotionOrderWhereUniqueInput
    update: XOR<PromotionOrderUpdateWithoutListingInput, PromotionOrderUncheckedUpdateWithoutListingInput>
    create: XOR<PromotionOrderCreateWithoutListingInput, PromotionOrderUncheckedCreateWithoutListingInput>
  }

  export type PromotionOrderUpdateWithWhereUniqueWithoutListingInput = {
    where: PromotionOrderWhereUniqueInput
    data: XOR<PromotionOrderUpdateWithoutListingInput, PromotionOrderUncheckedUpdateWithoutListingInput>
  }

  export type PromotionOrderUpdateManyWithWhereWithoutListingInput = {
    where: PromotionOrderScalarWhereInput
    data: XOR<PromotionOrderUpdateManyMutationInput, PromotionOrderUncheckedUpdateManyWithoutListingInput>
  }

  export type AdImpressionUpsertWithWhereUniqueWithoutListingInput = {
    where: AdImpressionWhereUniqueInput
    update: XOR<AdImpressionUpdateWithoutListingInput, AdImpressionUncheckedUpdateWithoutListingInput>
    create: XOR<AdImpressionCreateWithoutListingInput, AdImpressionUncheckedCreateWithoutListingInput>
  }

  export type AdImpressionUpdateWithWhereUniqueWithoutListingInput = {
    where: AdImpressionWhereUniqueInput
    data: XOR<AdImpressionUpdateWithoutListingInput, AdImpressionUncheckedUpdateWithoutListingInput>
  }

  export type AdImpressionUpdateManyWithWhereWithoutListingInput = {
    where: AdImpressionScalarWhereInput
    data: XOR<AdImpressionUpdateManyMutationInput, AdImpressionUncheckedUpdateManyWithoutListingInput>
  }

  export type AdImpressionScalarWhereInput = {
    AND?: AdImpressionScalarWhereInput | AdImpressionScalarWhereInput[]
    OR?: AdImpressionScalarWhereInput[]
    NOT?: AdImpressionScalarWhereInput | AdImpressionScalarWhereInput[]
    id?: StringFilter<"AdImpression"> | string
    adSlotId?: StringFilter<"AdImpression"> | string
    listingId?: StringNullableFilter<"AdImpression"> | string | null
    thirdPartyCampaignId?: StringNullableFilter<"AdImpression"> | string | null
    occurredAt?: DateTimeFilter<"AdImpression"> | Date | string
    metadata?: JsonNullableFilter<"AdImpression">
  }

  export type ListingCreateWithoutMediaInput = {
    id?: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    seller: UserCreateNestedOneWithoutListingsInput
    category: CategoryCreateNestedOneWithoutListingsInput
    attributes?: ListingAttributeCreateNestedManyWithoutListingInput
    favorites?: FavoriteCreateNestedManyWithoutListingInput
    conversations?: ConversationCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutMediaInput = {
    id?: string
    sellerId: string
    categoryId: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    attributes?: ListingAttributeUncheckedCreateNestedManyWithoutListingInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutListingInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutMediaInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutMediaInput, ListingUncheckedCreateWithoutMediaInput>
  }

  export type ListingUpsertWithoutMediaInput = {
    update: XOR<ListingUpdateWithoutMediaInput, ListingUncheckedUpdateWithoutMediaInput>
    create: XOR<ListingCreateWithoutMediaInput, ListingUncheckedCreateWithoutMediaInput>
    where?: ListingWhereInput
  }

  export type ListingUpdateToOneWithWhereWithoutMediaInput = {
    where?: ListingWhereInput
    data: XOR<ListingUpdateWithoutMediaInput, ListingUncheckedUpdateWithoutMediaInput>
  }

  export type ListingUpdateWithoutMediaInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seller?: UserUpdateOneRequiredWithoutListingsNestedInput
    category?: CategoryUpdateOneRequiredWithoutListingsNestedInput
    attributes?: ListingAttributeUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUpdateManyWithoutListingNestedInput
    conversations?: ConversationUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutMediaInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attributes?: ListingAttributeUncheckedUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutListingNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUncheckedUpdateManyWithoutListingNestedInput
  }

  export type CategoryCreateWithoutAttributeDefsInput = {
    id?: string
    name: string
    slug: string
    level: number
    isActive?: boolean
    sortOrder?: number
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    listings?: ListingCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutAttributeDefsInput = {
    id?: string
    name: string
    slug: string
    parentId?: string | null
    level: number
    isActive?: boolean
    sortOrder?: number
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    listings?: ListingUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutAttributeDefsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutAttributeDefsInput, CategoryUncheckedCreateWithoutAttributeDefsInput>
  }

  export type ListingAttributeCreateWithoutAttrDefInput = {
    id?: string
    valueText?: string | null
    valueNumber?: Decimal | DecimalJsLike | number | string | null
    valueBool?: boolean | null
    listing: ListingCreateNestedOneWithoutAttributesInput
  }

  export type ListingAttributeUncheckedCreateWithoutAttrDefInput = {
    id?: string
    listingId: string
    valueText?: string | null
    valueNumber?: Decimal | DecimalJsLike | number | string | null
    valueBool?: boolean | null
  }

  export type ListingAttributeCreateOrConnectWithoutAttrDefInput = {
    where: ListingAttributeWhereUniqueInput
    create: XOR<ListingAttributeCreateWithoutAttrDefInput, ListingAttributeUncheckedCreateWithoutAttrDefInput>
  }

  export type ListingAttributeCreateManyAttrDefInputEnvelope = {
    data: ListingAttributeCreateManyAttrDefInput | ListingAttributeCreateManyAttrDefInput[]
    skipDuplicates?: boolean
  }

  export type CategoryUpsertWithoutAttributeDefsInput = {
    update: XOR<CategoryUpdateWithoutAttributeDefsInput, CategoryUncheckedUpdateWithoutAttributeDefsInput>
    create: XOR<CategoryCreateWithoutAttributeDefsInput, CategoryUncheckedCreateWithoutAttributeDefsInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutAttributeDefsInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutAttributeDefsInput, CategoryUncheckedUpdateWithoutAttributeDefsInput>
  }

  export type CategoryUpdateWithoutAttributeDefsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    listings?: ListingUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutAttributeDefsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    listings?: ListingUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type ListingAttributeUpsertWithWhereUniqueWithoutAttrDefInput = {
    where: ListingAttributeWhereUniqueInput
    update: XOR<ListingAttributeUpdateWithoutAttrDefInput, ListingAttributeUncheckedUpdateWithoutAttrDefInput>
    create: XOR<ListingAttributeCreateWithoutAttrDefInput, ListingAttributeUncheckedCreateWithoutAttrDefInput>
  }

  export type ListingAttributeUpdateWithWhereUniqueWithoutAttrDefInput = {
    where: ListingAttributeWhereUniqueInput
    data: XOR<ListingAttributeUpdateWithoutAttrDefInput, ListingAttributeUncheckedUpdateWithoutAttrDefInput>
  }

  export type ListingAttributeUpdateManyWithWhereWithoutAttrDefInput = {
    where: ListingAttributeScalarWhereInput
    data: XOR<ListingAttributeUpdateManyMutationInput, ListingAttributeUncheckedUpdateManyWithoutAttrDefInput>
  }

  export type ListingCreateWithoutAttributesInput = {
    id?: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    seller: UserCreateNestedOneWithoutListingsInput
    category: CategoryCreateNestedOneWithoutListingsInput
    media?: ListingMediaCreateNestedManyWithoutListingInput
    favorites?: FavoriteCreateNestedManyWithoutListingInput
    conversations?: ConversationCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutAttributesInput = {
    id?: string
    sellerId: string
    categoryId: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    media?: ListingMediaUncheckedCreateNestedManyWithoutListingInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutListingInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutAttributesInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutAttributesInput, ListingUncheckedCreateWithoutAttributesInput>
  }

  export type ListingAttributeDefCreateWithoutAttributesInput = {
    id?: string
    name: string
    key: string
    dataType: string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: boolean
    sortOrder?: number
    category: CategoryCreateNestedOneWithoutAttributeDefsInput
  }

  export type ListingAttributeDefUncheckedCreateWithoutAttributesInput = {
    id?: string
    categoryId: string
    name: string
    key: string
    dataType: string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: boolean
    sortOrder?: number
  }

  export type ListingAttributeDefCreateOrConnectWithoutAttributesInput = {
    where: ListingAttributeDefWhereUniqueInput
    create: XOR<ListingAttributeDefCreateWithoutAttributesInput, ListingAttributeDefUncheckedCreateWithoutAttributesInput>
  }

  export type ListingUpsertWithoutAttributesInput = {
    update: XOR<ListingUpdateWithoutAttributesInput, ListingUncheckedUpdateWithoutAttributesInput>
    create: XOR<ListingCreateWithoutAttributesInput, ListingUncheckedCreateWithoutAttributesInput>
    where?: ListingWhereInput
  }

  export type ListingUpdateToOneWithWhereWithoutAttributesInput = {
    where?: ListingWhereInput
    data: XOR<ListingUpdateWithoutAttributesInput, ListingUncheckedUpdateWithoutAttributesInput>
  }

  export type ListingUpdateWithoutAttributesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seller?: UserUpdateOneRequiredWithoutListingsNestedInput
    category?: CategoryUpdateOneRequiredWithoutListingsNestedInput
    media?: ListingMediaUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUpdateManyWithoutListingNestedInput
    conversations?: ConversationUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutAttributesInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: ListingMediaUncheckedUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutListingNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUncheckedUpdateManyWithoutListingNestedInput
  }

  export type ListingAttributeDefUpsertWithoutAttributesInput = {
    update: XOR<ListingAttributeDefUpdateWithoutAttributesInput, ListingAttributeDefUncheckedUpdateWithoutAttributesInput>
    create: XOR<ListingAttributeDefCreateWithoutAttributesInput, ListingAttributeDefUncheckedCreateWithoutAttributesInput>
    where?: ListingAttributeDefWhereInput
  }

  export type ListingAttributeDefUpdateToOneWithWhereWithoutAttributesInput = {
    where?: ListingAttributeDefWhereInput
    data: XOR<ListingAttributeDefUpdateWithoutAttributesInput, ListingAttributeDefUncheckedUpdateWithoutAttributesInput>
  }

  export type ListingAttributeDefUpdateWithoutAttributesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    category?: CategoryUpdateOneRequiredWithoutAttributeDefsNestedInput
  }

  export type ListingAttributeDefUncheckedUpdateWithoutAttributesInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
  }

  export type UserCreateWithoutFavoritesInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileCreateNestedOneWithoutUserInput
    listings?: ListingCreateNestedManyWithoutSellerInput
    conversationsBuyer?: ConversationCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationCreateNestedManyWithoutSellerInput
    messages?: MessageCreateNestedManyWithoutSenderInput
    reports?: ReportCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutBuyerInput
  }

  export type UserUncheckedCreateWithoutFavoritesInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    listings?: ListingUncheckedCreateNestedManyWithoutSellerInput
    conversationsBuyer?: ConversationUncheckedCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationUncheckedCreateNestedManyWithoutSellerInput
    messages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutBuyerInput
  }

  export type UserCreateOrConnectWithoutFavoritesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFavoritesInput, UserUncheckedCreateWithoutFavoritesInput>
  }

  export type ListingCreateWithoutFavoritesInput = {
    id?: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    seller: UserCreateNestedOneWithoutListingsInput
    category: CategoryCreateNestedOneWithoutListingsInput
    media?: ListingMediaCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeCreateNestedManyWithoutListingInput
    conversations?: ConversationCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutFavoritesInput = {
    id?: string
    sellerId: string
    categoryId: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    media?: ListingMediaUncheckedCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeUncheckedCreateNestedManyWithoutListingInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutFavoritesInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutFavoritesInput, ListingUncheckedCreateWithoutFavoritesInput>
  }

  export type UserUpsertWithoutFavoritesInput = {
    update: XOR<UserUpdateWithoutFavoritesInput, UserUncheckedUpdateWithoutFavoritesInput>
    create: XOR<UserCreateWithoutFavoritesInput, UserUncheckedCreateWithoutFavoritesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFavoritesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFavoritesInput, UserUncheckedUpdateWithoutFavoritesInput>
  }

  export type UserUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    listings?: ListingUpdateManyWithoutSellerNestedInput
    conversationsBuyer?: ConversationUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUpdateManyWithoutSellerNestedInput
    messages?: MessageUpdateManyWithoutSenderNestedInput
    reports?: ReportUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutBuyerNestedInput
  }

  export type UserUncheckedUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    listings?: ListingUncheckedUpdateManyWithoutSellerNestedInput
    conversationsBuyer?: ConversationUncheckedUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUncheckedUpdateManyWithoutSellerNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutBuyerNestedInput
  }

  export type ListingUpsertWithoutFavoritesInput = {
    update: XOR<ListingUpdateWithoutFavoritesInput, ListingUncheckedUpdateWithoutFavoritesInput>
    create: XOR<ListingCreateWithoutFavoritesInput, ListingUncheckedCreateWithoutFavoritesInput>
    where?: ListingWhereInput
  }

  export type ListingUpdateToOneWithWhereWithoutFavoritesInput = {
    where?: ListingWhereInput
    data: XOR<ListingUpdateWithoutFavoritesInput, ListingUncheckedUpdateWithoutFavoritesInput>
  }

  export type ListingUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seller?: UserUpdateOneRequiredWithoutListingsNestedInput
    category?: CategoryUpdateOneRequiredWithoutListingsNestedInput
    media?: ListingMediaUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUpdateManyWithoutListingNestedInput
    conversations?: ConversationUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: ListingMediaUncheckedUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUncheckedUpdateManyWithoutListingNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUncheckedUpdateManyWithoutListingNestedInput
  }

  export type ListingCreateWithoutConversationsInput = {
    id?: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    seller: UserCreateNestedOneWithoutListingsInput
    category: CategoryCreateNestedOneWithoutListingsInput
    media?: ListingMediaCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeCreateNestedManyWithoutListingInput
    favorites?: FavoriteCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutConversationsInput = {
    id?: string
    sellerId: string
    categoryId: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    media?: ListingMediaUncheckedCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeUncheckedCreateNestedManyWithoutListingInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutConversationsInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutConversationsInput, ListingUncheckedCreateWithoutConversationsInput>
  }

  export type UserCreateWithoutConversationsBuyerInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileCreateNestedOneWithoutUserInput
    listings?: ListingCreateNestedManyWithoutSellerInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    conversationsSeller?: ConversationCreateNestedManyWithoutSellerInput
    messages?: MessageCreateNestedManyWithoutSenderInput
    reports?: ReportCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutBuyerInput
  }

  export type UserUncheckedCreateWithoutConversationsBuyerInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    listings?: ListingUncheckedCreateNestedManyWithoutSellerInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    conversationsSeller?: ConversationUncheckedCreateNestedManyWithoutSellerInput
    messages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutBuyerInput
  }

  export type UserCreateOrConnectWithoutConversationsBuyerInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutConversationsBuyerInput, UserUncheckedCreateWithoutConversationsBuyerInput>
  }

  export type UserCreateWithoutConversationsSellerInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileCreateNestedOneWithoutUserInput
    listings?: ListingCreateNestedManyWithoutSellerInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationCreateNestedManyWithoutBuyerInput
    messages?: MessageCreateNestedManyWithoutSenderInput
    reports?: ReportCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutBuyerInput
  }

  export type UserUncheckedCreateWithoutConversationsSellerInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    listings?: ListingUncheckedCreateNestedManyWithoutSellerInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationUncheckedCreateNestedManyWithoutBuyerInput
    messages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutBuyerInput
  }

  export type UserCreateOrConnectWithoutConversationsSellerInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutConversationsSellerInput, UserUncheckedCreateWithoutConversationsSellerInput>
  }

  export type MessageCreateWithoutConversationInput = {
    id?: string
    body?: string | null
    mediaUrl?: string | null
    createdAt?: Date | string
    readAt?: Date | string | null
    sender: UserCreateNestedOneWithoutMessagesInput
  }

  export type MessageUncheckedCreateWithoutConversationInput = {
    id?: string
    senderId: string
    body?: string | null
    mediaUrl?: string | null
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type MessageCreateOrConnectWithoutConversationInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput>
  }

  export type MessageCreateManyConversationInputEnvelope = {
    data: MessageCreateManyConversationInput | MessageCreateManyConversationInput[]
    skipDuplicates?: boolean
  }

  export type ListingUpsertWithoutConversationsInput = {
    update: XOR<ListingUpdateWithoutConversationsInput, ListingUncheckedUpdateWithoutConversationsInput>
    create: XOR<ListingCreateWithoutConversationsInput, ListingUncheckedCreateWithoutConversationsInput>
    where?: ListingWhereInput
  }

  export type ListingUpdateToOneWithWhereWithoutConversationsInput = {
    where?: ListingWhereInput
    data: XOR<ListingUpdateWithoutConversationsInput, ListingUncheckedUpdateWithoutConversationsInput>
  }

  export type ListingUpdateWithoutConversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seller?: UserUpdateOneRequiredWithoutListingsNestedInput
    category?: CategoryUpdateOneRequiredWithoutListingsNestedInput
    media?: ListingMediaUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutConversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: ListingMediaUncheckedUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUncheckedUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUncheckedUpdateManyWithoutListingNestedInput
  }

  export type UserUpsertWithoutConversationsBuyerInput = {
    update: XOR<UserUpdateWithoutConversationsBuyerInput, UserUncheckedUpdateWithoutConversationsBuyerInput>
    create: XOR<UserCreateWithoutConversationsBuyerInput, UserUncheckedCreateWithoutConversationsBuyerInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutConversationsBuyerInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutConversationsBuyerInput, UserUncheckedUpdateWithoutConversationsBuyerInput>
  }

  export type UserUpdateWithoutConversationsBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    listings?: ListingUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    conversationsSeller?: ConversationUpdateManyWithoutSellerNestedInput
    messages?: MessageUpdateManyWithoutSenderNestedInput
    reports?: ReportUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutBuyerNestedInput
  }

  export type UserUncheckedUpdateWithoutConversationsBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    listings?: ListingUncheckedUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    conversationsSeller?: ConversationUncheckedUpdateManyWithoutSellerNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutBuyerNestedInput
  }

  export type UserUpsertWithoutConversationsSellerInput = {
    update: XOR<UserUpdateWithoutConversationsSellerInput, UserUncheckedUpdateWithoutConversationsSellerInput>
    create: XOR<UserCreateWithoutConversationsSellerInput, UserUncheckedCreateWithoutConversationsSellerInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutConversationsSellerInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutConversationsSellerInput, UserUncheckedUpdateWithoutConversationsSellerInput>
  }

  export type UserUpdateWithoutConversationsSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    listings?: ListingUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUpdateManyWithoutBuyerNestedInput
    messages?: MessageUpdateManyWithoutSenderNestedInput
    reports?: ReportUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutBuyerNestedInput
  }

  export type UserUncheckedUpdateWithoutConversationsSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    listings?: ListingUncheckedUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUncheckedUpdateManyWithoutBuyerNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutBuyerNestedInput
  }

  export type MessageUpsertWithWhereUniqueWithoutConversationInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutConversationInput, MessageUncheckedUpdateWithoutConversationInput>
    create: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutConversationInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutConversationInput, MessageUncheckedUpdateWithoutConversationInput>
  }

  export type MessageUpdateManyWithWhereWithoutConversationInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutConversationInput>
  }

  export type ConversationCreateWithoutMessagesInput = {
    id?: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
    listing: ListingCreateNestedOneWithoutConversationsInput
    buyer: UserCreateNestedOneWithoutConversationsBuyerInput
    seller: UserCreateNestedOneWithoutConversationsSellerInput
  }

  export type ConversationUncheckedCreateWithoutMessagesInput = {
    id?: string
    listingId: string
    buyerId: string
    sellerId: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
  }

  export type ConversationCreateOrConnectWithoutMessagesInput = {
    where: ConversationWhereUniqueInput
    create: XOR<ConversationCreateWithoutMessagesInput, ConversationUncheckedCreateWithoutMessagesInput>
  }

  export type UserCreateWithoutMessagesInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileCreateNestedOneWithoutUserInput
    listings?: ListingCreateNestedManyWithoutSellerInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationCreateNestedManyWithoutSellerInput
    reports?: ReportCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutBuyerInput
  }

  export type UserUncheckedCreateWithoutMessagesInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    listings?: ListingUncheckedCreateNestedManyWithoutSellerInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationUncheckedCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationUncheckedCreateNestedManyWithoutSellerInput
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutBuyerInput
  }

  export type UserCreateOrConnectWithoutMessagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMessagesInput, UserUncheckedCreateWithoutMessagesInput>
  }

  export type ConversationUpsertWithoutMessagesInput = {
    update: XOR<ConversationUpdateWithoutMessagesInput, ConversationUncheckedUpdateWithoutMessagesInput>
    create: XOR<ConversationCreateWithoutMessagesInput, ConversationUncheckedCreateWithoutMessagesInput>
    where?: ConversationWhereInput
  }

  export type ConversationUpdateToOneWithWhereWithoutMessagesInput = {
    where?: ConversationWhereInput
    data: XOR<ConversationUpdateWithoutMessagesInput, ConversationUncheckedUpdateWithoutMessagesInput>
  }

  export type ConversationUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listing?: ListingUpdateOneRequiredWithoutConversationsNestedInput
    buyer?: UserUpdateOneRequiredWithoutConversationsBuyerNestedInput
    seller?: UserUpdateOneRequiredWithoutConversationsSellerNestedInput
  }

  export type ConversationUncheckedUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutMessagesInput = {
    update: XOR<UserUpdateWithoutMessagesInput, UserUncheckedUpdateWithoutMessagesInput>
    create: XOR<UserCreateWithoutMessagesInput, UserUncheckedCreateWithoutMessagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMessagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMessagesInput, UserUncheckedUpdateWithoutMessagesInput>
  }

  export type UserUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    listings?: ListingUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUpdateManyWithoutSellerNestedInput
    reports?: ReportUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutBuyerNestedInput
  }

  export type UserUncheckedUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    listings?: ListingUncheckedUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUncheckedUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUncheckedUpdateManyWithoutSellerNestedInput
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutBuyerNestedInput
  }

  export type UserCreateWithoutReportsInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileCreateNestedOneWithoutUserInput
    listings?: ListingCreateNestedManyWithoutSellerInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationCreateNestedManyWithoutSellerInput
    messages?: MessageCreateNestedManyWithoutSenderInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutBuyerInput
  }

  export type UserUncheckedCreateWithoutReportsInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    listings?: ListingUncheckedCreateNestedManyWithoutSellerInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationUncheckedCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationUncheckedCreateNestedManyWithoutSellerInput
    messages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutBuyerInput
  }

  export type UserCreateOrConnectWithoutReportsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReportsInput, UserUncheckedCreateWithoutReportsInput>
  }

  export type UserUpsertWithoutReportsInput = {
    update: XOR<UserUpdateWithoutReportsInput, UserUncheckedUpdateWithoutReportsInput>
    create: XOR<UserCreateWithoutReportsInput, UserUncheckedCreateWithoutReportsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReportsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReportsInput, UserUncheckedUpdateWithoutReportsInput>
  }

  export type UserUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    listings?: ListingUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUpdateManyWithoutSellerNestedInput
    messages?: MessageUpdateManyWithoutSenderNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutBuyerNestedInput
  }

  export type UserUncheckedUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    listings?: ListingUncheckedUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUncheckedUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUncheckedUpdateManyWithoutSellerNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutBuyerNestedInput
  }

  export type PromotionOrderCreateWithoutPlanInput = {
    id?: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    buyer: UserCreateNestedOneWithoutPromoOrdersInput
    listing: ListingCreateNestedOneWithoutPromoOrdersInput
    payments?: PaymentCreateNestedManyWithoutPromotionOrderInput
  }

  export type PromotionOrderUncheckedCreateWithoutPlanInput = {
    id?: string
    buyerId: string
    listingId: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    payments?: PaymentUncheckedCreateNestedManyWithoutPromotionOrderInput
  }

  export type PromotionOrderCreateOrConnectWithoutPlanInput = {
    where: PromotionOrderWhereUniqueInput
    create: XOR<PromotionOrderCreateWithoutPlanInput, PromotionOrderUncheckedCreateWithoutPlanInput>
  }

  export type PromotionOrderCreateManyPlanInputEnvelope = {
    data: PromotionOrderCreateManyPlanInput | PromotionOrderCreateManyPlanInput[]
    skipDuplicates?: boolean
  }

  export type PromotionOrderUpsertWithWhereUniqueWithoutPlanInput = {
    where: PromotionOrderWhereUniqueInput
    update: XOR<PromotionOrderUpdateWithoutPlanInput, PromotionOrderUncheckedUpdateWithoutPlanInput>
    create: XOR<PromotionOrderCreateWithoutPlanInput, PromotionOrderUncheckedCreateWithoutPlanInput>
  }

  export type PromotionOrderUpdateWithWhereUniqueWithoutPlanInput = {
    where: PromotionOrderWhereUniqueInput
    data: XOR<PromotionOrderUpdateWithoutPlanInput, PromotionOrderUncheckedUpdateWithoutPlanInput>
  }

  export type PromotionOrderUpdateManyWithWhereWithoutPlanInput = {
    where: PromotionOrderScalarWhereInput
    data: XOR<PromotionOrderUpdateManyMutationInput, PromotionOrderUncheckedUpdateManyWithoutPlanInput>
  }

  export type UserCreateWithoutPromoOrdersInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileCreateNestedOneWithoutUserInput
    listings?: ListingCreateNestedManyWithoutSellerInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationCreateNestedManyWithoutSellerInput
    messages?: MessageCreateNestedManyWithoutSenderInput
    reports?: ReportCreateNestedManyWithoutReporterInput
  }

  export type UserUncheckedCreateWithoutPromoOrdersInput = {
    id?: string
    email: string
    passwordHash: string
    isAdmin?: boolean
    status?: $Enums.UserStatus
    createdAt?: Date | string
    lastLoginAt?: Date | string | null
    deletedAt?: Date | string | null
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    listings?: ListingUncheckedCreateNestedManyWithoutSellerInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    conversationsBuyer?: ConversationUncheckedCreateNestedManyWithoutBuyerInput
    conversationsSeller?: ConversationUncheckedCreateNestedManyWithoutSellerInput
    messages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
  }

  export type UserCreateOrConnectWithoutPromoOrdersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPromoOrdersInput, UserUncheckedCreateWithoutPromoOrdersInput>
  }

  export type ListingCreateWithoutPromoOrdersInput = {
    id?: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    seller: UserCreateNestedOneWithoutListingsInput
    category: CategoryCreateNestedOneWithoutListingsInput
    media?: ListingMediaCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeCreateNestedManyWithoutListingInput
    favorites?: FavoriteCreateNestedManyWithoutListingInput
    conversations?: ConversationCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutPromoOrdersInput = {
    id?: string
    sellerId: string
    categoryId: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    media?: ListingMediaUncheckedCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeUncheckedCreateNestedManyWithoutListingInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutListingInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutListingInput
    adImpressions?: AdImpressionUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutPromoOrdersInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutPromoOrdersInput, ListingUncheckedCreateWithoutPromoOrdersInput>
  }

  export type PromotionPlanCreateWithoutOrdersInput = {
    id?: string
    code: string
    name: string
    description?: string | null
    type: $Enums.PromotionType
    durationDays: number
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    isActive?: boolean
    sortOrder?: number
  }

  export type PromotionPlanUncheckedCreateWithoutOrdersInput = {
    id?: string
    code: string
    name: string
    description?: string | null
    type: $Enums.PromotionType
    durationDays: number
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    isActive?: boolean
    sortOrder?: number
  }

  export type PromotionPlanCreateOrConnectWithoutOrdersInput = {
    where: PromotionPlanWhereUniqueInput
    create: XOR<PromotionPlanCreateWithoutOrdersInput, PromotionPlanUncheckedCreateWithoutOrdersInput>
  }

  export type PaymentCreateWithoutPromotionOrderInput = {
    id?: string
    provider: string
    providerPaymentId: string
    status: $Enums.PaymentStatus
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    receiptUrl?: string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentUncheckedCreateWithoutPromotionOrderInput = {
    id?: string
    provider: string
    providerPaymentId: string
    status: $Enums.PaymentStatus
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    receiptUrl?: string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentCreateOrConnectWithoutPromotionOrderInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutPromotionOrderInput, PaymentUncheckedCreateWithoutPromotionOrderInput>
  }

  export type PaymentCreateManyPromotionOrderInputEnvelope = {
    data: PaymentCreateManyPromotionOrderInput | PaymentCreateManyPromotionOrderInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutPromoOrdersInput = {
    update: XOR<UserUpdateWithoutPromoOrdersInput, UserUncheckedUpdateWithoutPromoOrdersInput>
    create: XOR<UserCreateWithoutPromoOrdersInput, UserUncheckedCreateWithoutPromoOrdersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPromoOrdersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPromoOrdersInput, UserUncheckedUpdateWithoutPromoOrdersInput>
  }

  export type UserUpdateWithoutPromoOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    listings?: ListingUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUpdateManyWithoutSellerNestedInput
    messages?: MessageUpdateManyWithoutSenderNestedInput
    reports?: ReportUpdateManyWithoutReporterNestedInput
  }

  export type UserUncheckedUpdateWithoutPromoOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    isAdmin?: BoolFieldUpdateOperationsInput | boolean
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    listings?: ListingUncheckedUpdateManyWithoutSellerNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    conversationsBuyer?: ConversationUncheckedUpdateManyWithoutBuyerNestedInput
    conversationsSeller?: ConversationUncheckedUpdateManyWithoutSellerNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
  }

  export type ListingUpsertWithoutPromoOrdersInput = {
    update: XOR<ListingUpdateWithoutPromoOrdersInput, ListingUncheckedUpdateWithoutPromoOrdersInput>
    create: XOR<ListingCreateWithoutPromoOrdersInput, ListingUncheckedCreateWithoutPromoOrdersInput>
    where?: ListingWhereInput
  }

  export type ListingUpdateToOneWithWhereWithoutPromoOrdersInput = {
    where?: ListingWhereInput
    data: XOR<ListingUpdateWithoutPromoOrdersInput, ListingUncheckedUpdateWithoutPromoOrdersInput>
  }

  export type ListingUpdateWithoutPromoOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seller?: UserUpdateOneRequiredWithoutListingsNestedInput
    category?: CategoryUpdateOneRequiredWithoutListingsNestedInput
    media?: ListingMediaUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUpdateManyWithoutListingNestedInput
    conversations?: ConversationUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutPromoOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: ListingMediaUncheckedUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUncheckedUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutListingNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUncheckedUpdateManyWithoutListingNestedInput
  }

  export type PromotionPlanUpsertWithoutOrdersInput = {
    update: XOR<PromotionPlanUpdateWithoutOrdersInput, PromotionPlanUncheckedUpdateWithoutOrdersInput>
    create: XOR<PromotionPlanCreateWithoutOrdersInput, PromotionPlanUncheckedCreateWithoutOrdersInput>
    where?: PromotionPlanWhereInput
  }

  export type PromotionPlanUpdateToOneWithWhereWithoutOrdersInput = {
    where?: PromotionPlanWhereInput
    data: XOR<PromotionPlanUpdateWithoutOrdersInput, PromotionPlanUncheckedUpdateWithoutOrdersInput>
  }

  export type PromotionPlanUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    durationDays?: IntFieldUpdateOperationsInput | number
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
  }

  export type PromotionPlanUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    durationDays?: IntFieldUpdateOperationsInput | number
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
  }

  export type PaymentUpsertWithWhereUniqueWithoutPromotionOrderInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutPromotionOrderInput, PaymentUncheckedUpdateWithoutPromotionOrderInput>
    create: XOR<PaymentCreateWithoutPromotionOrderInput, PaymentUncheckedCreateWithoutPromotionOrderInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutPromotionOrderInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutPromotionOrderInput, PaymentUncheckedUpdateWithoutPromotionOrderInput>
  }

  export type PaymentUpdateManyWithWhereWithoutPromotionOrderInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutPromotionOrderInput>
  }

  export type PaymentScalarWhereInput = {
    AND?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    OR?: PaymentScalarWhereInput[]
    NOT?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    id?: StringFilter<"Payment"> | string
    promotionOrderId?: StringFilter<"Payment"> | string
    provider?: StringFilter<"Payment"> | string
    providerPaymentId?: StringFilter<"Payment"> | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Payment"> | string
    receiptUrl?: StringNullableFilter<"Payment"> | string | null
    rawPayload?: JsonNullableFilter<"Payment">
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
  }

  export type PromotionOrderCreateWithoutPaymentsInput = {
    id?: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    buyer: UserCreateNestedOneWithoutPromoOrdersInput
    listing: ListingCreateNestedOneWithoutPromoOrdersInput
    plan: PromotionPlanCreateNestedOneWithoutOrdersInput
  }

  export type PromotionOrderUncheckedCreateWithoutPaymentsInput = {
    id?: string
    buyerId: string
    listingId: string
    planId: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PromotionOrderCreateOrConnectWithoutPaymentsInput = {
    where: PromotionOrderWhereUniqueInput
    create: XOR<PromotionOrderCreateWithoutPaymentsInput, PromotionOrderUncheckedCreateWithoutPaymentsInput>
  }

  export type PromotionOrderUpsertWithoutPaymentsInput = {
    update: XOR<PromotionOrderUpdateWithoutPaymentsInput, PromotionOrderUncheckedUpdateWithoutPaymentsInput>
    create: XOR<PromotionOrderCreateWithoutPaymentsInput, PromotionOrderUncheckedCreateWithoutPaymentsInput>
    where?: PromotionOrderWhereInput
  }

  export type PromotionOrderUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: PromotionOrderWhereInput
    data: XOR<PromotionOrderUpdateWithoutPaymentsInput, PromotionOrderUncheckedUpdateWithoutPaymentsInput>
  }

  export type PromotionOrderUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    buyer?: UserUpdateOneRequiredWithoutPromoOrdersNestedInput
    listing?: ListingUpdateOneRequiredWithoutPromoOrdersNestedInput
    plan?: PromotionPlanUpdateOneRequiredWithoutOrdersNestedInput
  }

  export type PromotionOrderUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    planId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AdImpressionCreateWithoutAdSlotInput = {
    id?: string
    thirdPartyCampaignId?: string | null
    occurredAt?: Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    listing?: ListingCreateNestedOneWithoutAdImpressionsInput
  }

  export type AdImpressionUncheckedCreateWithoutAdSlotInput = {
    id?: string
    listingId?: string | null
    thirdPartyCampaignId?: string | null
    occurredAt?: Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AdImpressionCreateOrConnectWithoutAdSlotInput = {
    where: AdImpressionWhereUniqueInput
    create: XOR<AdImpressionCreateWithoutAdSlotInput, AdImpressionUncheckedCreateWithoutAdSlotInput>
  }

  export type AdImpressionCreateManyAdSlotInputEnvelope = {
    data: AdImpressionCreateManyAdSlotInput | AdImpressionCreateManyAdSlotInput[]
    skipDuplicates?: boolean
  }

  export type AdImpressionUpsertWithWhereUniqueWithoutAdSlotInput = {
    where: AdImpressionWhereUniqueInput
    update: XOR<AdImpressionUpdateWithoutAdSlotInput, AdImpressionUncheckedUpdateWithoutAdSlotInput>
    create: XOR<AdImpressionCreateWithoutAdSlotInput, AdImpressionUncheckedCreateWithoutAdSlotInput>
  }

  export type AdImpressionUpdateWithWhereUniqueWithoutAdSlotInput = {
    where: AdImpressionWhereUniqueInput
    data: XOR<AdImpressionUpdateWithoutAdSlotInput, AdImpressionUncheckedUpdateWithoutAdSlotInput>
  }

  export type AdImpressionUpdateManyWithWhereWithoutAdSlotInput = {
    where: AdImpressionScalarWhereInput
    data: XOR<AdImpressionUpdateManyMutationInput, AdImpressionUncheckedUpdateManyWithoutAdSlotInput>
  }

  export type AdSlotCreateWithoutImpressionsInput = {
    id?: string
    code: string
    placement: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
  }

  export type AdSlotUncheckedCreateWithoutImpressionsInput = {
    id?: string
    code: string
    placement: string
    description?: string | null
    isActive?: boolean
    createdAt?: Date | string
  }

  export type AdSlotCreateOrConnectWithoutImpressionsInput = {
    where: AdSlotWhereUniqueInput
    create: XOR<AdSlotCreateWithoutImpressionsInput, AdSlotUncheckedCreateWithoutImpressionsInput>
  }

  export type ListingCreateWithoutAdImpressionsInput = {
    id?: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    seller: UserCreateNestedOneWithoutListingsInput
    category: CategoryCreateNestedOneWithoutListingsInput
    media?: ListingMediaCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeCreateNestedManyWithoutListingInput
    favorites?: FavoriteCreateNestedManyWithoutListingInput
    conversations?: ConversationCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutAdImpressionsInput = {
    id?: string
    sellerId: string
    categoryId: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
    media?: ListingMediaUncheckedCreateNestedManyWithoutListingInput
    attributes?: ListingAttributeUncheckedCreateNestedManyWithoutListingInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutListingInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutListingInput
    promoOrders?: PromotionOrderUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutAdImpressionsInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutAdImpressionsInput, ListingUncheckedCreateWithoutAdImpressionsInput>
  }

  export type AdSlotUpsertWithoutImpressionsInput = {
    update: XOR<AdSlotUpdateWithoutImpressionsInput, AdSlotUncheckedUpdateWithoutImpressionsInput>
    create: XOR<AdSlotCreateWithoutImpressionsInput, AdSlotUncheckedCreateWithoutImpressionsInput>
    where?: AdSlotWhereInput
  }

  export type AdSlotUpdateToOneWithWhereWithoutImpressionsInput = {
    where?: AdSlotWhereInput
    data: XOR<AdSlotUpdateWithoutImpressionsInput, AdSlotUncheckedUpdateWithoutImpressionsInput>
  }

  export type AdSlotUpdateWithoutImpressionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    placement?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdSlotUncheckedUpdateWithoutImpressionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    placement?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingUpsertWithoutAdImpressionsInput = {
    update: XOR<ListingUpdateWithoutAdImpressionsInput, ListingUncheckedUpdateWithoutAdImpressionsInput>
    create: XOR<ListingCreateWithoutAdImpressionsInput, ListingUncheckedCreateWithoutAdImpressionsInput>
    where?: ListingWhereInput
  }

  export type ListingUpdateToOneWithWhereWithoutAdImpressionsInput = {
    where?: ListingWhereInput
    data: XOR<ListingUpdateWithoutAdImpressionsInput, ListingUncheckedUpdateWithoutAdImpressionsInput>
  }

  export type ListingUpdateWithoutAdImpressionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seller?: UserUpdateOneRequiredWithoutListingsNestedInput
    category?: CategoryUpdateOneRequiredWithoutListingsNestedInput
    media?: ListingMediaUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUpdateManyWithoutListingNestedInput
    conversations?: ConversationUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutAdImpressionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: ListingMediaUncheckedUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUncheckedUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutListingNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutListingNestedInput
  }

  export type ListingCreateManySellerInput = {
    id?: string
    categoryId: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type FavoriteCreateManyUserInput = {
    listingId: string
    createdAt?: Date | string
  }

  export type ConversationCreateManyBuyerInput = {
    id?: string
    listingId: string
    sellerId: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
  }

  export type ConversationCreateManySellerInput = {
    id?: string
    listingId: string
    buyerId: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
  }

  export type MessageCreateManySenderInput = {
    id?: string
    conversationId: string
    body?: string | null
    mediaUrl?: string | null
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type ReportCreateManyReporterInput = {
    id?: string
    targetType: $Enums.ReportTarget
    targetId: string
    reason: string
    detailsText?: string | null
    status?: $Enums.ReportStatus
    createdAt?: Date | string
    closedAt?: Date | string | null
    adminId?: string | null
  }

  export type PromotionOrderCreateManyBuyerInput = {
    id?: string
    listingId: string
    planId: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ListingUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: CategoryUpdateOneRequiredWithoutListingsNestedInput
    media?: ListingMediaUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUpdateManyWithoutListingNestedInput
    conversations?: ConversationUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: ListingMediaUncheckedUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUncheckedUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutListingNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUncheckedUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateManyWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FavoriteUpdateWithoutUserInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listing?: ListingUpdateOneRequiredWithoutFavoritesNestedInput
  }

  export type FavoriteUncheckedUpdateWithoutUserInput = {
    listingId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteUncheckedUpdateManyWithoutUserInput = {
    listingId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversationUpdateWithoutBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listing?: ListingUpdateOneRequiredWithoutConversationsNestedInput
    seller?: UserUpdateOneRequiredWithoutConversationsSellerNestedInput
    messages?: MessageUpdateManyWithoutConversationNestedInput
  }

  export type ConversationUncheckedUpdateWithoutBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: MessageUncheckedUpdateManyWithoutConversationNestedInput
  }

  export type ConversationUncheckedUpdateManyWithoutBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversationUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listing?: ListingUpdateOneRequiredWithoutConversationsNestedInput
    buyer?: UserUpdateOneRequiredWithoutConversationsBuyerNestedInput
    messages?: MessageUpdateManyWithoutConversationNestedInput
  }

  export type ConversationUncheckedUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: MessageUncheckedUpdateManyWithoutConversationNestedInput
  }

  export type ConversationUncheckedUpdateManyWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    body?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    conversation?: ConversationUpdateOneRequiredWithoutMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    body?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MessageUncheckedUpdateManyWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    body?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportUpdateWithoutReporterInput = {
    id?: StringFieldUpdateOperationsInput | string
    targetType?: EnumReportTargetFieldUpdateOperationsInput | $Enums.ReportTarget
    targetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    detailsText?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    closedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportUncheckedUpdateWithoutReporterInput = {
    id?: StringFieldUpdateOperationsInput | string
    targetType?: EnumReportTargetFieldUpdateOperationsInput | $Enums.ReportTarget
    targetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    detailsText?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    closedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportUncheckedUpdateManyWithoutReporterInput = {
    id?: StringFieldUpdateOperationsInput | string
    targetType?: EnumReportTargetFieldUpdateOperationsInput | $Enums.ReportTarget
    targetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    detailsText?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    closedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionOrderUpdateWithoutBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    listing?: ListingUpdateOneRequiredWithoutPromoOrdersNestedInput
    plan?: PromotionPlanUpdateOneRequiredWithoutOrdersNestedInput
    payments?: PaymentUpdateManyWithoutPromotionOrderNestedInput
  }

  export type PromotionOrderUncheckedUpdateWithoutBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    planId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    payments?: PaymentUncheckedUpdateManyWithoutPromotionOrderNestedInput
  }

  export type PromotionOrderUncheckedUpdateManyWithoutBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    planId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type LocationCreateManyParentInput = {
    id?: string
    country: string
    name: string
    slug: string
    createdAt?: Date | string
  }

  export type LocationUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: LocationUpdateManyWithoutParentNestedInput
  }

  export type LocationUncheckedUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: LocationUncheckedUpdateManyWithoutParentNestedInput
  }

  export type LocationUncheckedUpdateManyWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryCreateManyParentInput = {
    id?: string
    name: string
    slug: string
    level: number
    isActive?: boolean
    sortOrder?: number
  }

  export type ListingCreateManyCategoryInput = {
    id?: string
    sellerId: string
    title: string
    description?: string | null
    priceAmount: Decimal | DecimalJsLike | number | string
    currency?: string
    condition: $Enums.Condition
    quantity?: number
    status?: $Enums.ListingStatus
    provinceId?: string | null
    cityId?: string | null
    viewsCount?: number
    favoritesCount?: number
    contactsCount?: number
    promotedUntil?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    publishedAt?: Date | string | null
    expiresAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type ListingAttributeDefCreateManyCategoryInput = {
    id?: string
    name: string
    key: string
    dataType: string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: boolean
    sortOrder?: number
  }

  export type CategoryUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    children?: CategoryUpdateManyWithoutParentNestedInput
    listings?: ListingUpdateManyWithoutCategoryNestedInput
    attributeDefs?: ListingAttributeDefUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    listings?: ListingUncheckedUpdateManyWithoutCategoryNestedInput
    attributeDefs?: ListingAttributeDefUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
  }

  export type ListingUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    seller?: UserUpdateOneRequiredWithoutListingsNestedInput
    media?: ListingMediaUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUpdateManyWithoutListingNestedInput
    conversations?: ConversationUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    media?: ListingMediaUncheckedUpdateManyWithoutListingNestedInput
    attributes?: ListingAttributeUncheckedUpdateManyWithoutListingNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutListingNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutListingNestedInput
    promoOrders?: PromotionOrderUncheckedUpdateManyWithoutListingNestedInput
    adImpressions?: AdImpressionUncheckedUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    condition?: EnumConditionFieldUpdateOperationsInput | $Enums.Condition
    quantity?: IntFieldUpdateOperationsInput | number
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    provinceId?: NullableStringFieldUpdateOperationsInput | string | null
    cityId?: NullableStringFieldUpdateOperationsInput | string | null
    viewsCount?: IntFieldUpdateOperationsInput | number
    favoritesCount?: IntFieldUpdateOperationsInput | number
    contactsCount?: IntFieldUpdateOperationsInput | number
    promotedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ListingAttributeDefUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    attributes?: ListingAttributeUpdateManyWithoutAttrDefNestedInput
  }

  export type ListingAttributeDefUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    attributes?: ListingAttributeUncheckedUpdateManyWithoutAttrDefNestedInput
  }

  export type ListingAttributeDefUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    enumOptions?: NullableJsonNullValueInput | InputJsonValue
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
  }

  export type ListingMediaCreateManyListingInput = {
    id?: string
    url: string
    position: number
    width?: number | null
    height?: number | null
    mimeType?: string | null
    createdAt?: Date | string
  }

  export type ListingAttributeCreateManyListingInput = {
    id?: string
    attrDefId: string
    valueText?: string | null
    valueNumber?: Decimal | DecimalJsLike | number | string | null
    valueBool?: boolean | null
  }

  export type FavoriteCreateManyListingInput = {
    userId: string
    createdAt?: Date | string
  }

  export type ConversationCreateManyListingInput = {
    id?: string
    buyerId: string
    sellerId: string
    lastMessageAt?: Date | string | null
    status?: $Enums.ConversationStatus
    createdAt?: Date | string
  }

  export type PromotionOrderCreateManyListingInput = {
    id?: string
    buyerId: string
    planId: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AdImpressionCreateManyListingInput = {
    id?: string
    adSlotId: string
    thirdPartyCampaignId?: string | null
    occurredAt?: Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ListingMediaUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingMediaUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingMediaUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingAttributeUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    valueText?: NullableStringFieldUpdateOperationsInput | string | null
    valueNumber?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valueBool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    attrDef?: ListingAttributeDefUpdateOneRequiredWithoutAttributesNestedInput
  }

  export type ListingAttributeUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    attrDefId?: StringFieldUpdateOperationsInput | string
    valueText?: NullableStringFieldUpdateOperationsInput | string | null
    valueNumber?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valueBool?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ListingAttributeUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    attrDefId?: StringFieldUpdateOperationsInput | string
    valueText?: NullableStringFieldUpdateOperationsInput | string | null
    valueNumber?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valueBool?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FavoriteUpdateWithoutListingInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFavoritesNestedInput
  }

  export type FavoriteUncheckedUpdateWithoutListingInput = {
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteUncheckedUpdateManyWithoutListingInput = {
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversationUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyer?: UserUpdateOneRequiredWithoutConversationsBuyerNestedInput
    seller?: UserUpdateOneRequiredWithoutConversationsSellerNestedInput
    messages?: MessageUpdateManyWithoutConversationNestedInput
  }

  export type ConversationUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: MessageUncheckedUpdateManyWithoutConversationNestedInput
  }

  export type ConversationUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumConversationStatusFieldUpdateOperationsInput | $Enums.ConversationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionOrderUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    buyer?: UserUpdateOneRequiredWithoutPromoOrdersNestedInput
    plan?: PromotionPlanUpdateOneRequiredWithoutOrdersNestedInput
    payments?: PaymentUpdateManyWithoutPromotionOrderNestedInput
  }

  export type PromotionOrderUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    planId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    payments?: PaymentUncheckedUpdateManyWithoutPromotionOrderNestedInput
  }

  export type PromotionOrderUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    planId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AdImpressionUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    thirdPartyCampaignId?: NullableStringFieldUpdateOperationsInput | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    adSlot?: AdSlotUpdateOneRequiredWithoutImpressionsNestedInput
  }

  export type AdImpressionUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    adSlotId?: StringFieldUpdateOperationsInput | string
    thirdPartyCampaignId?: NullableStringFieldUpdateOperationsInput | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AdImpressionUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    adSlotId?: StringFieldUpdateOperationsInput | string
    thirdPartyCampaignId?: NullableStringFieldUpdateOperationsInput | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ListingAttributeCreateManyAttrDefInput = {
    id?: string
    listingId: string
    valueText?: string | null
    valueNumber?: Decimal | DecimalJsLike | number | string | null
    valueBool?: boolean | null
  }

  export type ListingAttributeUpdateWithoutAttrDefInput = {
    id?: StringFieldUpdateOperationsInput | string
    valueText?: NullableStringFieldUpdateOperationsInput | string | null
    valueNumber?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valueBool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    listing?: ListingUpdateOneRequiredWithoutAttributesNestedInput
  }

  export type ListingAttributeUncheckedUpdateWithoutAttrDefInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    valueText?: NullableStringFieldUpdateOperationsInput | string | null
    valueNumber?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valueBool?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ListingAttributeUncheckedUpdateManyWithoutAttrDefInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    valueText?: NullableStringFieldUpdateOperationsInput | string | null
    valueNumber?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    valueBool?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type MessageCreateManyConversationInput = {
    id?: string
    senderId: string
    body?: string | null
    mediaUrl?: string | null
    createdAt?: Date | string
    readAt?: Date | string | null
  }

  export type MessageUpdateWithoutConversationInput = {
    id?: StringFieldUpdateOperationsInput | string
    body?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sender?: UserUpdateOneRequiredWithoutMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutConversationInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    body?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MessageUncheckedUpdateManyWithoutConversationInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    body?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PromotionOrderCreateManyPlanInput = {
    id?: string
    buyerId: string
    listingId: string
    status?: string
    subtotal: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    currency?: string
    createdAt?: Date | string
    paidAt?: Date | string | null
    externalRef?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PromotionOrderUpdateWithoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    buyer?: UserUpdateOneRequiredWithoutPromoOrdersNestedInput
    listing?: ListingUpdateOneRequiredWithoutPromoOrdersNestedInput
    payments?: PaymentUpdateManyWithoutPromotionOrderNestedInput
  }

  export type PromotionOrderUncheckedUpdateWithoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    payments?: PaymentUncheckedUpdateManyWithoutPromotionOrderNestedInput
  }

  export type PromotionOrderUncheckedUpdateManyWithoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyerId?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    externalRef?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PaymentCreateManyPromotionOrderInput = {
    id?: string
    provider: string
    providerPaymentId: string
    status: $Enums.PaymentStatus
    amount: Decimal | DecimalJsLike | number | string
    currency?: string
    receiptUrl?: string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentUpdateWithoutPromotionOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerPaymentId?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    receiptUrl?: NullableStringFieldUpdateOperationsInput | string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUncheckedUpdateWithoutPromotionOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerPaymentId?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    receiptUrl?: NullableStringFieldUpdateOperationsInput | string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUncheckedUpdateManyWithoutPromotionOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerPaymentId?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    receiptUrl?: NullableStringFieldUpdateOperationsInput | string | null
    rawPayload?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdImpressionCreateManyAdSlotInput = {
    id?: string
    listingId?: string | null
    thirdPartyCampaignId?: string | null
    occurredAt?: Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AdImpressionUpdateWithoutAdSlotInput = {
    id?: StringFieldUpdateOperationsInput | string
    thirdPartyCampaignId?: NullableStringFieldUpdateOperationsInput | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    listing?: ListingUpdateOneWithoutAdImpressionsNestedInput
  }

  export type AdImpressionUncheckedUpdateWithoutAdSlotInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: NullableStringFieldUpdateOperationsInput | string | null
    thirdPartyCampaignId?: NullableStringFieldUpdateOperationsInput | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type AdImpressionUncheckedUpdateManyWithoutAdSlotInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: NullableStringFieldUpdateOperationsInput | string | null
    thirdPartyCampaignId?: NullableStringFieldUpdateOperationsInput | string | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}