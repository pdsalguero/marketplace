generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  AUTOS
  INMUEBLES
  ELECTRONICA
  HOGAR
  EMPLEO
  SERVICIOS
  MODA
  MASCOTAS
  OTROS
}

enum Transmission {
  MANUAL
  AUTOMATIC
}

enum Fuel {
  GASOLINE
  DIESEL
  EV
  HYBRID
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  name     String?

  ads Ad[]
}

model CategoryNode {
  id       Int            @id @default(autoincrement())
  key      String         @unique
  name     String
  parentId Int?
  parent   CategoryNode?  @relation("CategoryChildren", fields: [parentId], references: [id])
  children CategoryNode[] @relation("CategoryChildren")
  order    Int            @default(0)
  active   Boolean        @default(true)

  adsCategory    Ad[] @relation("AdCategory")
  adsSubcategory Ad[] @relation("AdSubcategory")

  @@index([parentId])
  @@index([key])
}

model Ad {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  price       Float
  imageKey    String?
  imageKeys   Json?

  // Retrocompat
  category    Category @default(OTROS)
  subcategory String?  @db.VarChar(64)

  // Taxonom√≠a por IDs (opcionales)
  categoryId     Int?
  categoryRef    CategoryNode? @relation("AdCategory", fields: [categoryId], references: [id])
  subcategoryId  Int?
  subcategoryRef CategoryNode? @relation("AdSubcategory", fields: [subcategoryId], references: [id])

  // Autos (opcionales)
  brand        String?
  model        String?
  year         Int?
  mileage      Int?
  transmission Transmission?
  fuel         Fuel?
  location     String?

  userId Int
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
  @@index([subcategoryId])
}
